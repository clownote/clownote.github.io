<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>GitHub加Hexo打造个人博客</title>
      <link href="/2019/08/15/GitHub%E5%8A%A0Hexo%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/08/15/GitHub%E5%8A%A0Hexo%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="GitHub-Hexo-gt-个人博客"><a href="#GitHub-Hexo-gt-个人博客" class="headerlink" title="GitHub + Hexo =&gt; 个人博客"></a>GitHub + Hexo =&gt; 个人博客</h1><blockquote><p>打造一个个人博客其实很简单，我们不需要拥有一台服务器、甚至可以对 Web 开发不甚了解。</p></blockquote><p>这篇文章记录我如何在 Mac 上通过 <a href="https://github.com" target="_blank" rel="noopener">GitHub</a>、<a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> 打造一个<em>个人博客</em> —— <strong><a href="https://clownote.github.io">clownote</a></strong></p><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>我一直不喜欢 CSDN 和博客园等博客平台，但确实有写东西的习惯。写了东西就要发表，所以在之前，我把我学习计算机知识的笔记都放到了一个自己初学 Web 开发时搞的一个超级简陋的静态网站上。</p><p>但它实在是太简陋了导致使用起来<strong>巨</strong>麻烦，发布文章要手动把 markdown 写的文章用自己写的一个转换器渲染成 HTML，然后调用一个可以及时渲染代码颜色的 js 进去，然后 FTP 上传到服务器上，再到手动修改 <code>index.html</code>，加入这篇新文章的链接……</p><p>这完全不是正常人应该用的操作！</p><p>我一直在考虑写一个功能完整的、更方便的博客。计划是用 Flask 写后端，Vue 做前端，Git 来管理内容，然后再写一些 Apple Script、Bash Script 让这个博客系统方便在 Mac 中使用 。但最近一直忙其他项目，没时间来实现。现在我的服务器到期了，百度云的，感觉不太好用（主要是受对这家公司的某些其他产品的不良印象的影响），不续费了。</p><p>笔记急需迁出！写之前想的博客系统是来不及了，突然想起来很多人用一个叫 <code>Hexo</code> 的东西做博客，于是一番 Google、Bing。最终，我觉定用 <code>GitHub</code> + <code>Hexo</code> 快速（Less than One Day）打造一个<strong>不用服务器</strong>、<strong>不用写代码</strong>的博客。</p><h2 id="经过"><a href="#经过" class="headerlink" title="经过"></a>经过</h2><p><del>废话不多说，代码赶快写起来</del>，，，（哦，错了，咱们今天不用写代码！只是几个简单的命令 + 配置就好了😂）</p><p>废话不多说，建站走起！</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册GitHub</h4><p>首先，我们需要注册一个 <code>GitHub</code> 账户，我相信绝大多数的读者已经完成了这一步，所以不再赘述；如果您幸运的属于少数人，请打开 <a href="https://github.com" target="_blank" rel="noopener">GitHub</a>，即可按照感觉轻松完成。</p><h4 id="创建-GitHub-Pages"><a href="#创建-GitHub-Pages" class="headerlink" title="创建 GitHub Pages"></a>创建 GitHub Pages</h4><p>在您的 GitHub 中，<code>New</code> 一个 <code>Repository</code>，名字为 <code>&lt;userName&gt;.github.io</code>，其中的 <code>&lt;userName&gt;</code> 与您的 GitHub 用户名相同。</p><p>注意，在这个新建的 Repository 的 <code>Settings</code> 中，您应该可以找到，有关 <code>GitHub Pages</code> 的设置里写了:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your site is published at https://&lt;userName&gt;.github.io</span><br></pre></td></tr></table></figure><p>这样就成了，否则请检查之前的步骤是否正确。</p><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p>在安装 <code>Hexo</code> 前，需要确定电脑中是否已安装了：</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> (版本至少为 nodejs 6.9)</li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">$ node --version</span><br></pre></td></tr></table></figure><p>如果没有，要先安装他们。接下来只需要使用 <code>npm</code> 即可完成 Hexo 的安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建您的博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>然后，可以看到指定文件夹的目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>目录中的 <code>_config.yml</code> 是网站的配置信息，我们需要在此配置一些参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cat _config.yml</span><br><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>需要配置的项目有：</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>title</code></td><td align="left">网站标题</td></tr><tr><td align="left"><code>subtitle</code></td><td align="left">网站副标题</td></tr><tr><td align="left"><code>description</code></td><td align="left">网站描述</td></tr><tr><td align="left"><code>keywords</code></td><td align="left">网站的关键词。使用半角逗号 <code>,</code> 分隔多个关键词。</td></tr><tr><td align="left"><code>author</code></td><td align="left">您的名字</td></tr><tr><td align="left"><code>language</code></td><td align="left">网站使用的语言</td></tr><tr><td align="left"><code>url</code></td><td align="left">网址</td></tr><tr><td align="left"><code>theme</code></td><td align="left">当前主题名称。值为<code>false</code>时禁用主题</td></tr><tr><td align="left"><code>deploy</code></td><td align="left">部署部分的设置</td></tr></tbody></table><p>需要说明的是，<code>deploy</code> 项的配置就可以把Hexo与GitHub关联起来，即将我们的博客<strong>推送</strong>到 GitHub，打开站点的配置文件_config.yml，<code>deploy</code> 项配置为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span> </span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="attr">https://github.com/&lt;userName&gt;/&lt;userName&gt;.github.io</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>然后，我们需要让 Hexo 连接上我们的 GitHub：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>每一条命令的作用都很直观。操作完之后你就会发现你的博客已经上线了，可以在网络上被访问了！</p><h4 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h4><p>如果你像我一样，觉得 <code>Hexo</code> 自带的 <code>landscape</code> 主题不太好看，我们可以跟换一个主题。</p><p>我们可以在 Hexo 官网上找到很丰富的 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题资源</a>，具体的使用方法主题项目的 README 里会写明，照着做就行。</p><p>这里以配置一个叫做 <a href="https://github.com/probberechts/hexo-theme-cactus" target="_blank" rel="noopener"><code>cactus</code></a> 的主题为例：</p><ol><li>下载、安装：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd &lt;folder&gt;# hexo init 的目录</span><br><span class="line">$ git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus# 拷贝一份主题</span><br></pre></td></tr></table></figure><ol start="2"><li>修改Hexo主题：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ./config.yml</span><br></pre></td></tr></table></figure><p>修改其中的 <code>theme</code> 属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># theme: landscape</span><br><span class="line">theme: cactus</span><br></pre></td></tr></table></figure><ol start="3"><li>主题配置</li></ol><p>在 <code>themes/cactus/_config.yml</code> 中按照自己的需要对主题进行配置。</p><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><p>其实到这里，我们的博客就已经构建完成了。接下来我们就可以用新建的博客系统写作了😊。</p><h4 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h4><p>你可以执行下列命令来创建一篇新文章。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>您可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p><p>可选的布局有：</p><table><thead><tr><th><code>layout</code></th><th>储存路径</th><th>功能</th></tr></thead><tbody><tr><td><code>post</code></td><td><code>source/_posts</code></td><td>存放要发布的博客文章</td></tr><tr><td><code>page</code></td><td><code>source</code></td><td>网站中的一些固定页面，比如说”关于”</td></tr><tr><td><code>draft</code></td><td><code>source/_drafts</code></td><td>草稿</td></tr></tbody></table><p><code>hexo new</code> 成功后，Hexo 会告诉你新建的文件路径，利用 markdown 编辑器打开它，就可以开始书写了，在我的 Mac 里，默认的 markdown 编辑器是 <code>Typora</code>，可以直接用 <code>open</code> 命令来用默认程序打开并编辑文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ open ~/&lt;blogFolder&gt;/source/_drafts&lt;title&gt;.md</span><br></pre></td></tr></table></figure><h4 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h4><p>我们在写文章时，可以先写草稿(draft)。草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p><p>文章写好后，通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h4 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h4><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，在里面写 YAML 配置，用于指定个别文件的变量，例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="string">/7/13</span> <span class="number">20</span><span class="string">:46:25</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>以下是一些常用的参数：</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td><td align="left"></td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td><td align="left"></td></tr><tr><td align="left"><code>date</code></td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left"><code>updated</code></td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left"><code>comments</code></td><td align="left">开启文章的评论功能</td><td align="left">true</td></tr><tr><td align="left"><code>tags</code></td><td align="left">标签（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>categories</code></td><td align="left">分类（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">覆盖文章网址</td><td align="left"></td></tr><tr><td align="left"><code>keywords</code></td><td align="left">仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</td><td align="left"></td></tr></tbody></table><h4 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h4><p>对于大多数人来讲，对一篇文章分类和标签的设置是必不可少的。</p><p>分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：<strong>分类(<code>categories</code>)</strong> 具有<em>顺序性</em>和<em>层次性</em>，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而 <strong>标签(<code>tags</code>)</strong> 没有顺序和层次。</p><p>在 <code>Front-matter</code> 中，分类和标签的设置方法如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Diary</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">PS3</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Games</span></span><br></pre></td></tr></table></figure><p>在使用 <code>categories</code> 时，请注意：</p><p>Hexo不支持指定多个同级分类！下面的指定方法：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Diary</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Life</span></span><br></pre></td></tr></table></figure><p>会使分类 <code>Life</code> 成为 <code>Diary</code> 的子分类，而不是 <em>并列分类</em>。因此，有必要为您的文章选择尽可能准确的分类。</p><h4 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h4><p>在完成写作后，我们先保存编辑好的 markdown 文件，然后执行如下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish post &lt;title&gt;.md# 如果新建时 layout 为 draft</span><br><span class="line"></span><br><span class="line">$ hexo deploy --generate# 生成文件完成后部署</span><br><span class="line">$# 可以简写为 `$ hexo d -g`</span><br></pre></td></tr></table></figure><h4 id="操作总结"><a href="#操作总结" class="headerlink" title="操作总结"></a>操作总结</h4><p>现在，回顾一下我们用 Hexo 写作的过程:</p><ol><li><code>$ hexo new draft &lt;title&gt;</code></li><li><code>$ open ~/&lt;blogFolder&gt;/source/_drafts/&lt;title&gt;.md</code></li><li><code>在编辑器中填写Front-matter，并完成内容写作</code></li><li><code>$ hexo publish post &lt;title&gt;</code></li><li><code>$ hexo deploy --generate</code></li></ol><p>如果有能力，我们还可以写一个简单的小脚本来简化这些操作。很容易实现，在这里就不介绍了。</p><h3 id="功能拓展"><a href="#功能拓展" class="headerlink" title="功能拓展"></a>功能拓展</h3><p>现在，我们已经完成了博客系统的安装、建站并且学会了在其中写作。</p><p>当我们打开自己的博客网站时，会发现，我们的 <code>Cactus</code> 主题已经提供了诸如分享、导航的功能。</p><p>但或许我们还是觉得它有些太简陋了，我们可能还想让它有一些让用户体验更好的特性，比如，搜索、评论功能，现在我们尝试来实现它们。</p><p>其实，我们使用的 <code>Cactus</code> 主题中，已经包含了对搜索、评论的支持，直接使用即可。</p><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>安装 hexo 的搜索插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>创建一个新页面，用来承载搜索功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page search</span><br></pre></td></tr></table></figure><p>在 Front-matter 里加上 <code>type: search</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Search</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">search</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>在 <code>themes/cactus/_config.yml</code> 里配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line"><span class="attr">  search:</span> <span class="string">/search/</span></span><br></pre></td></tr></table></figure><h4 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h4><p> <code>Cactus</code> 主题为我们提供的评论工具是 <code>Disqus</code>，这是一个各方面都很好的评论系统，但有一点问题是，这个评论系统<strong>在国内无法使用</strong>，所以我们只是简单翻译一下官方的介绍：</p><p>首先，在 Disqus 注册我们的站点: <a href="http://disqus.com/admin/create/" target="_blank" rel="noopener">https://disqus.com/admin/create/</a>.</p><p>然后, 修改 <code>themes/cactus/_config.yml</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">disqus:</span><br><span class="line">  enabled: true</span><br><span class="line">  shortname: SITENAME</span><br></pre></td></tr></table></figure><p>这里的 <code>SITENAME</code> 是在注册 Disqus 时，你给你的站点填写的名字。</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>好了，我们的博客网站建好了。由于我最迫切的需求就是快速的完成博客建站，所以多余的东西我都没有研究，但其实 Hexo 还可以有很多拓展，GitHub Pages 也还有一些东西可以配置，这些都需要大家自己去研究。</p><p>后期我还会持续优化这个网站，比如我计划修改一下源码，把 Cactus 中的 <code>Disqus</code> 评论换成墙内能用的如 <code>livere</code> 之类的东西 ，如果可以，我会另外发文记录。</p><p>其实，这篇文章中的绝大多数内容都来源于咱们使用的各个工具的官网，我只是粗糙地把他们按照一定的逻辑顺序排列到一起。如果需要更详细的说明，大家可以看下面列出的这些参考文档：</p><ul><li>GitHub的注册与使用：<a href="https://help.github.com/cn" target="_blank" rel="noopener">https://help.github.com/cn</a></li><li>Hexo的安装及使用：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></li><li>Cactus主题的配置：<a href="https://github.com/probberechts/hexo-theme-cactus" target="_blank" rel="noopener">https://github.com/probberechts/hexo-theme-cactus</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-2.0-用户管理</title>
      <link href="/2016/08/21/linux-2-0-UsersManage/"/>
      <url>/2016/08/21/linux-2-0-UsersManage/</url>
      
        <content type="html"><![CDATA[<h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><ul><li><code>su</code>：切换用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ su [-]用户名</span><br><span class="line">    -   ：有则重启shell，重装$PATH（环境变量），pwd切换至用户名的$HOME（家目录）</span><br><span class="line">         无则不变 环境变量（检索命令的目录），pwd不变</span><br></pre></td></tr></table></figure><p>用户名 ：缺省为 root</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[me@Example ~]$ su - root</span><br><span class="line">密码：</span><br><span class="line">[root@Example~]# whoami</span><br><span class="line">root</span><br><span class="line">[root@Example~]# exit</span><br><span class="line">logout</span><br><span class="line">[me@Example~]$ whoami</span><br><span class="line">me</span><br></pre></td></tr></table></figure><ul><li><code>passwd</code>：修改密码</li></ul><p>1⃣️ <em>普通用户：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ passwd            修改当前用户密码</span><br></pre></td></tr></table></figure><p>多按几个回车可取消退出</p><p>对于root “too short”的密码重输也可以成功</p><p>2⃣️ <em>root：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># passwd username    修改某用户密码</span><br><span class="line"># passwd -**S**username    查看密码状态，【注意】S大写</span><br></pre></td></tr></table></figure><ul><li>新建，删除 用户</li></ul><ol><li>useradd：新建用户：<code># useradd new_user_name</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Example ~]# **useradd** newone</span><br><span class="line">[root@Example ~]# passwd -S newone</span><br><span class="line">newone LK [2016-08-18 0 99999 7 -1](tel:2016-08-18 0 99999 7 -1)(密码已被锁定。)       # 说明密码未设定</span><br><span class="line">[root@Example ~]# passwd newone</span><br><span class="line">更改用户 newone 的密码 。</span><br><span class="line">新的 密码：             # 尝试键入一个弱口令</span><br><span class="line">无效的密码:  过于简单化/系统化        # 提示口令过于简单，但不阻止</span><br><span class="line">重新输入新的 密码:                   # 仍输入那个弱口令，可以成功，因为是root</span><br><span class="line">passwd： 所有的身份验证令牌已经成功更新。</span><br><span class="line"># 如果是普通用户，键入弱口令不可成。（不会叫“Retype“，而是“New“）</span><br><span class="line">[root@Example ~]# passwd -S newone</span><br><span class="line">newone PS [2016-08-18 0 99999 7 -1](tel:2016-08-18 0 99999 7 -1)(密码已设置，使用 SHA512 加密。</span><br></pre></td></tr></table></figure><ol start="2"><li>userdel：删除用户:  <code>userdel [-r] [-f] user_name</code></li></ol><p>​                <code>-r</code> ：同时删除用户的家目录</p><p>​                        无’-r’时，家目录不会被删除</p><p>​                <code>-f</code> ：强行删除，哪怕用户已登录，这个选项有些危险，会使系统进入不一致状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Example ~]# userdel -r newone</span><br><span class="line">userdel: user newone is currently used by process 3848    # 用户正登录，删除失败</span><br><span class="line">[root@Example ~]# userdel -fr newone                        #用 -f 强行删除</span><br><span class="line">userdel: user newone is currently used by process 3848    # 说明用户正登录，但命令本身已经成功</span><br><span class="line"># 这时虽然还被删user还是登入、活跃状态，但已经被删除，登出后不可再登入</span><br><span class="line"></span><br><span class="line">--------------------</span><br><span class="line"></span><br><span class="line">[newone@Example ~]$ exit                                    #退出用户</span><br><span class="line">logout</span><br><span class="line"></span><br><span class="line">--------------------</span><br><span class="line"></span><br><span class="line">[root@Example ~]# userdel -r newone</span><br><span class="line">userdel：用户“newone”不存在                            #再作尝试时，确定用户已被之前的 -f 删除</span><br><span class="line">[root@Example ~]# ls /home</span><br><span class="line">c  lost+found                                        #家目录被 -r 删除</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.linuxidc.com/Linux/2016-05/131755.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2016-05/131755.htm</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-1.2-帮助信息</title>
      <link href="/2016/08/20/linux-1-2-getHelp/"/>
      <url>/2016/08/20/linux-1-2-getHelp/</url>
      
        <content type="html"><![CDATA[<h1 id="帮助信息"><a href="#帮助信息" class="headerlink" title="帮助信息"></a>帮助信息</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ whatis *命令名*</span><br></pre></td></tr></table></figure><p>​                说明<em>命令</em>是什么，了解命令的功能；</p><p>​                “whatis  <em>cmd</em>”命令 == “<strong>man -f</strong> <em>cmd</em>”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ type [-options] 命令名</span><br></pre></td></tr></table></figure><p>​    无选：显示命令类型</p><p>​    <code>-t</code>：显示文件的类型：</p><p>​        <code>file</code>：外部命令</p><p>​        <code>alias</code>：别名</p><p>​        <code>builtin</code>：shell内置命令</p><p>​    <code>-a</code>：列出所有包含指定命令名的命令，包括别名</p><p>​    <code>-p</code>：显示完整的文件名（外部命令）或内部命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ which 命令名</span><br></pre></td></tr></table></figure><p>​    列出命令的类型相关的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ *命令名* --help</span><br></pre></td></tr></table></figure><p>​                显示<em>命令</em>的<strong>简要说明</strong>和<strong>选项列表</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ man *命令名*</span><br></pre></td></tr></table></figure><p>​                浏览<em>命令</em>的 <strong>Man Page</strong> 1⃣️</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ man -k **keyword**</span><br></pre></td></tr></table></figure><p>​                欲使用一个命令，又无法确定它的名字是用 -k选项+<em>关键字</em>搜寻它；</p><p>​                “man -k  <em>kw</em>”命令 == “<strong>apropos</strong> <em>kw</em>”命令；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ info *cmd*</span><br></pre></td></tr></table></figure><p>​                “info2⃣️”与“man”类似，但info更加简洁详尽(开发者认为的)；</p><p>1⃣️、2⃣️.  浏览 <strong>Man page</strong> <em>或</em>  <strong>Info Page</strong> ：</p><ul><li><ul><li><p>使用man \ info命令进入Man \ Info Page</p></li><li><p>键盘 &lt; , &gt; , ^, v , PgUp, PgDn, 空格：翻页</p></li><li><p>Home键：移到第一页</p></li><li><p>End键： 最后一页</p></li><li><p>在屏幕底部<code>:</code>处输入<code>?string</code>：向前搜索string</p></li><li><ul><li>按 n 键继续下一个搜索</li><li>按 N 键进行反向搜索</li></ul></li><li><p>按 q 键退出Page</p></li></ul></li></ul><p>在 <strong>Info Page</strong> 中还有：</p><ul><li><ul><li>按Tab：跳到下一个“<strong>***</strong>”（超链接）</li><li>{Tab}*3：Index</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-1.1-系统信息</title>
      <link href="/2016/08/19/linux-1-1-SystemInformation/"/>
      <url>/2016/08/19/linux-1-1-SystemInformation/</url>
      
        <content type="html"><![CDATA[<h1 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h1><ul><li><p><code>uname</code> 命令:  获取系统信息<br>(其中’u’代表UNIX)</p></li><li><p><code>$ uname</code>       显示当前操作系统</p><pre><code>`-n`    显示主机名`-i`    硬件平台名`-r`    系统发布版本信息`-s`    系统名`-m`    机器硬件名`-p`    显示CPU信息`-a`    以上全部</code></pre><p>用 <code>-n -r</code> == <code>-i -n</code> == <code>-ni</code> == <code>-in</code>；<br>(详见 <code>$ man uname</code>。)</p></li><li><p><code>$ date</code>       显示当前系统日期、时间</p></li><li><p><code>$ cal</code>         显示日历：</p><ul><li><p><code>$ cal</code>         无参显示本月日历</p></li><li><p><code>$ cal m y</code>    m y是月份 年份，显示y年m月的</p></li><li><p><code>$ cal y</code>      y 是年份，     显示y全年</p><p>(详见 <code>$ man cal</code>。)</p></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-1.0-用户信息</title>
      <link href="/2016/08/18/linux-1-0-UsersInfomation/"/>
      <url>/2016/08/18/linux-1-0-UsersInfomation/</url>
      
        <content type="html"><![CDATA[<h1 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h1><ul><li><code>$ whoami</code><br>输出当前用户名</li><li><code>$ users</code><br>列出当前登录的所有用户名</li><li><code>$ who am i</code><br>显示用户名，登录终端，当前时间，IP</li><li><code>$ who</code><br>比“who am i”多出 其他用户的信息</li><li><code>$ w</code><br>信息更多的“who”：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Me@Example ~]$ w</span><br><span class="line"> 10:59:09 up 4 min,  1 user,  load average:  0.46 , 0.35 ,  0.15</span><br><span class="line"> 当前时间 up 启动时长, 登录用户数, 平均提交任务数: 1min内, 10min内, 15min内</span><br><span class="line">USER     TTY      FROM              LOGIN@    IDLE       JCPU       PCPU     WHAT</span><br><span class="line">用户名    登录终端   登录地            登录时间   空闲时长    一共使用CPU时长    当前程序用CPU时长    当前任务CPU时长</span><br><span class="line">                                                        </span><br><span class="line">Me        pts/0    MyComputer       10:58     0.00s      0.06s      0.02s     w</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-0.2-系统开关</title>
      <link href="/2016/08/17/linux-0-2-StartHalt/"/>
      <url>/2016/08/17/linux-0-2-StartHalt/</url>
      
        <content type="html"><![CDATA[<h1 id="系统开关"><a href="#系统开关" class="headerlink" title="系统开关"></a>系统开关</h1><ul><li>关闭系统：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># sync</span><br><span class="line"># init 0    或    shutdown -n    或    halt</span><br></pre></td></tr></table></figure><ul><li>重启系统：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># sync</span><br><span class="line"># init 6    或    shutdown -rn</span><br></pre></td></tr></table></figure><ul><li>退出当前用户登录：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ exit</span><br></pre></td></tr></table></figure><p>Linux的 <code>exit</code> 类似于 Windows 的注销；</p><ul><li>查看当前使用的虚拟终端：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tty</span><br><span class="line">/dev/tty2        #二号虚拟终端</span><br></pre></td></tr></table></figure><ul><li>切换终端：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;Ctr + Alt + Fn&#125;</span><br><span class="line">#其中 n = &#123;1, 2, 3, ... ,7&#125;,代表 tty n</span><br></pre></td></tr></table></figure><p>切换至图形终端（也是一个tty）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;Ctr + Alt + F7&#125;</span><br></pre></td></tr></table></figure><ul><li>清空屏幕：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ clear</span><br></pre></td></tr></table></figure><ul><li>找到系统中所有shell：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/shells</span><br></pre></td></tr></table></figure><ul><li>切换shell：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sh# 切换至Bourn Shell</span><br><span class="line">$ ksh# 切换至Korn Shell</span><br></pre></td></tr></table></figure><p>可以在命令行中输入一个不存在的命令（如<code>OK</code>），以确定用户当前的shell。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-0.1-系统安装</title>
      <link href="/2016/08/16/linux-0-1-Install/"/>
      <url>/2016/08/16/linux-0-1-Install/</url>
      
        <content type="html"><![CDATA[<h1 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h1><h3 id="挂载建议："><a href="#挂载建议：" class="headerlink" title="挂载建议："></a>挂载建议：</h3><p>Linux只要求两个基本分区 <code>／</code> 和 <code>swap</code>； </p><p>如果<code>／</code>足够的，可以在桌面放很多东西而不影响进入 Linux 的速度； </p><table><thead><tr><th>分区</th><th>大小</th><th>格式</th></tr></thead><tbody><tr><td>/boot1⃣️</td><td>128MB</td><td>ext3</td></tr><tr><td>swap</td><td>2⃣️</td><td></td></tr><tr><td>／</td><td>8GB</td><td>ext3</td></tr><tr><td>／home</td><td>余下全部</td><td>ext3</td></tr></tbody></table><p>若要安装很多软件最好分配个 <code>/usr</code>； </p><p>若要作服务器最好分配较大的 <code>/var</code>； </p><p>1⃣️.  <code>/boot</code>： </p><p>2018年后的新版本都可以不分； </p><p>可以分配10MB-100MB </p><p>如果硬盘不支持LBA模式，最好挂载/boot于第一个分区，以保稳妥。 </p><p>参考：<a href="https://wapbaike.baidu.com/item/boot分区/16830421?ms=1&rid=8645769021174590193" target="_blank" rel="noopener">https://wapbaike.baidu.com/item/boot分区/16830421?ms=1&amp;rid=8645769021174590193</a></p><p>2⃣️. <code>swap</code>： </p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g60bdmoskaj30d108xglx.jpg" alt="Image 20180817 230902"></p><table><thead><tr><th>物理内存</th><th>swap</th><th>swap(开启休眠)</th></tr></thead><tbody><tr><td>2GB</td><td>2倍RAM</td><td>3倍RAM</td></tr><tr><td>&gt;2GB-8GB</td><td>=RAM</td><td>2倍RAM</td></tr><tr><td>&gt;8GB-64GB</td><td>4GB+</td><td>1.5倍RAM</td></tr><tr><td>&gt;64GB</td><td>4GB+</td><td>不建议休眠</td></tr></tbody></table><p>参考：<a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/installation_guide/s2-diskpartrecommend-ppc#id4394007" target="_blank" rel="noopener">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/installation_guide/s2-diskpartrecommend-ppc#id4394007</a> </p><p>开始的几个服务配置：</p><ul><li>检查<em>telnet</em>服务是否启动： </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chkconfig telnet --list</span><br></pre></td></tr></table></figure><ul><li>启动<em>telnet</em>服务： </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chkonfig telnet on</span><br></pre></td></tr></table></figure><p>开启telnet后在win下可用”&gt; telnet $IP”连接Linux。 </p><ul><li>检验<em>FTP</em>服务当前状态： </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># service vsftpd status</span><br></pre></td></tr></table></figure><ul><li>开启<em>FTP</em>服务： </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># service vsftpd start</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-0.0-Linux?</title>
      <link href="/2016/08/15/linux-0-0-Linux/"/>
      <url>/2016/08/15/linux-0-0-Linux/</url>
      
        <content type="html"><![CDATA[<p>我会发一系列 Linux 学习笔记（它们最多可以算是“操作手册”，我不认为它们可以代替一本正经的入门书），这些东西是很久以前写的了，可能在 排版、内容 上质量都不高，请见谅。</p><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><blockquote><p>Linux (/ˈlɪnəks/ LIN-əks) is a family of open source Unix-like operating systems based on the Linux kernel, an operating system kernel first released on September 17, 1991 by Linus Torvalds. Linux is typically packaged in a Linux distribution.<br>【翻译】Linux 是一系列基于 Linux 内核(一个最早由 Linus Torvalds 在 1991 年 9 月 17 日发布的操作系统内核)的类 Unix 开源操作系统。Linux 通常打包在 Linux 发行版中。</p></blockquote><p>👆这是 <a href="https://en.wikipedia.org/wiki/Linux" target="_blank" rel="noopener">维基百科</a> 对 Linux 的介绍。</p><p>Linux 是什么不重要，重要的是为什么用Linux。就像对用户来说软件的代码实现不重要，重要的是这个软件可以用来干什么。</p><h2 id="为什么用-Linux？"><a href="#为什么用-Linux？" class="headerlink" title="为什么用 Linux？"></a>为什么用 Linux？</h2><p>我们常说，用 Linux 是因为它安全，或者因为它自由、因为它的高度可定制、因为它免费、应为它的背后有专业的社区支持……</p><p>然而，所有的这些全是瞎扯！我们这样欺骗非 Linux 用户，只是因为他们不会懂得 Linux 的真谛。<br>久而久之，说的多了，有时候连我们自己都开始相信这些乱七八糟的“充分理由”了。</p><p>夜深人静时再扪心自问，我们用 Linux 的原因到底何在？</p><p>……</p><p>我们用 Linux —— —— 是因为它好玩呀！</p><p>对着各种设置一阵捣鼓、把系统无情地玩弄到崩坏，再夹着尾巴跑到恢复系统、笨拙地为她缝合伤口、虔诚为她祈祷痊愈、期待着下一次把她摆布成不一样的姿势，这难道不好玩吗？<br>在那数百种发行版中肆意尝试她们各不相同的命令行不好玩吗？</p><p>是的，我们觉得命令行超级有趣！</p><p>其实 Linux 爱好者们爱上 Linux，爱的只是 Linux 本身！</p><p>是，我们使用 Linux 完成老板布置的工作；<br>是，我们使用 Linux 保障安全、远离病毒；<br>是，我们使用 Linux 省下几个柴米油盐钱；<br>但，这些都只是我们使用 Linux 的副作用！ </p><p>真正重要的是 —— —— 这系统好玩啊！</p><p>Linux 让我们像探险家一样游荡在系统深处，四处搅合，随性发掘，在软件的背后寻觅可爱的诗篇！</p><p>（翻译自一篇出处难寻的文章）</p><h2 id="用-Linux-做什么？"><a href="#用-Linux-做什么？" class="headerlink" title="用 Linux 做什么？"></a>用 Linux 做什么？</h2><p>我们可以用 Linux 干什么？</p><p>毫无疑问——玩！</p><h2 id="Linux-UNIX，MacOS，Windows"><a href="#Linux-UNIX，MacOS，Windows" class="headerlink" title="Linux/UNIX，MacOS，Windows"></a>Linux/UNIX，MacOS，Windows</h2><p>Linux/UNIX，MacOS，Windows，这几乎就是我们平时接触到的所有操作系统了。</p><p>抛开刚才写的那么多 Linux 的好处不看，客观地比较一下它们：</p><ul><li><p>Linux/UNIX 以自由著称，但正如很多开源的东西，设计上会有一些缺陷，用户体验绝对不是最好的，但它几乎可以满足你在计算机编程、工作上的全部需求（只是操作起来可能需要时间、精力）。其实在 Linux/UNIX 的内部有很多很糟糕的部分，这是历史遗留问题了，在学会  Linux 的基础之前我们最好不去过多研究。</p></li><li><p>MacOS，这是我现在正在使用的操作系统，Apple一向以用户体验著称。MacOS绝对是我用过的体验最好的计算机操作系统，你不用了解太多的东西就可以专心地高效完成你的工作。但 MacOS 无论如何还是脱离不了 UNIX 的影响，UNIX 有的问题，MacOS 也会有，只是在表面上看不出来。在开发方面，按照 Apple 的文档，你虽然可以快速地开发出一个 App，但你很难去了解底层的东西，这给移植之类的工作带来了很大的麻烦，不过近年来也有好转。</p></li><li><p>Windows，我承认微软很厉害，Windows的设计也有很多很好的地方，但我始终无法接受 Windows 呈现给用户的那种东西，我想是我的程序设计功夫还不到家，所以不喜欢微软风格的代码——虽然客观地说我承认它们其实很好。在 Windows 10 中我已经看到了它朝我想要的方向有了十足的进步，但这还不够！我期望微软有一天可以让我用回 Windows，毕竟它是我对计算机的最初回忆。</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>helloworld</title>
      <link href="/2016/08/14/helloworld/"/>
      <url>/2016/08/14/helloworld/</url>
      
        <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
