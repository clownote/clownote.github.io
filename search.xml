<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>吴恩达机器学习2-线性代数复习</title>
      <link href="/2019/09/02/AndrewNg-MachineLearning-2-LinearAlgebraReview/"/>
      <url>/2019/09/02/AndrewNg-MachineLearning-2-LinearAlgebraReview/</url>
      
        <content type="html"><![CDATA[<h1 id="notes-of-andrew-ngs-machine-learning-2-linear-algebra-review"><a class="markdownIt-Anchor" href="#notes-of-andrew-ngs-machine-learning-2-linear-algebra-review"></a> Notes of Andrew Ng’s Machine Learning —— (2) Linear Algebra Review</h1><h2 id="matrices-and-vectors"><a class="markdownIt-Anchor" href="#matrices-and-vectors"></a> Matrices and Vectors</h2><ul><li><strong>Matrices</strong> are 2-dimensional arrays:</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>e</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>g</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>h</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>i</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>j</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>k</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>l</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[\begin{array}{ll}a &amp; b &amp; c \\d &amp; e &amp; f \\g &amp; h &amp; i \\j &amp; k &amp; l \\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">e</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">h</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">i</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>The above matrix has four rows and three columns, so it is a <code>4 x 3 matrix</code>.</p><ul><li><strong>Vector</strong> are matrices with one column and many rows:</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>w</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[\begin{array}{ll}w \\x \\y \\z \\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>The above vector is a <code>4 x 1 matrix</code>.</p><h3 id="notation-and-terms"><a class="markdownIt-Anchor" href="#notation-and-terms"></a> Notation and terms</h3><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> refers to the element in the <em>ith row</em> and <em>jth column</em> of matrix A.</li><li>A vector with ‘n’ rows is referred to as a <code>'n'-dimensional vector</code>.</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> refers to the element in the <em>ith row</em> of the vector.</li><li>In general, all our vectors and matrices will be <code>1-indexed</code>, which refers that it’s beginning from <code>1</code>. Note that this is different to lots of programming languages.</li><li>Matrices are usualy denoted by uppercase names while vectors are lowercase.</li><li><code>Scalar</code> means that an object is a single value, not a vector or matrix.</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">R</mi></mrow><annotation encoding="application/x-tex">\R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">R</span></span></span></span></span> referss to the set of scalar real numbers.</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>R</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">R^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> refers to the set of n-dimensional vectors of real numbers.</li></ul><h3 id="in-octavematlab"><a class="markdownIt-Anchor" href="#in-octavematlab"></a> in Octave/Matlab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">% The ; denotes we are going back to a new row.</span><br><span class="line">A = [1, 2, 3; 4, 5, 6; 7, 8, 9; 10, 11, 12]</span><br><span class="line"></span><br><span class="line">% Initialize a vector </span><br><span class="line">v = [1;2;3] </span><br><span class="line"></span><br><span class="line">% Get the dimension of the matrix A where m = rows and n = columns</span><br><span class="line">[m,n] = size(A)</span><br><span class="line"></span><br><span class="line">% You could also store it this way</span><br><span class="line">dim_A = size(A)</span><br><span class="line"></span><br><span class="line">% Get the dimension of the vector v </span><br><span class="line">dim_v = size(v)</span><br><span class="line"></span><br><span class="line">% Now let&apos;s index into the 2nd row 3rd column of matrix A</span><br><span class="line">A_23 = A(2,3)</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">A =</span><br><span class="line"></span><br><span class="line">    1    2    3</span><br><span class="line">    4    5    6</span><br><span class="line">    7    8    9</span><br><span class="line">   10   11   12</span><br><span class="line"></span><br><span class="line">v =</span><br><span class="line"></span><br><span class="line">   1</span><br><span class="line">   2</span><br><span class="line">   3</span><br><span class="line"></span><br><span class="line">m =  4</span><br><span class="line">n =  3</span><br><span class="line">dim_A =</span><br><span class="line"></span><br><span class="line">   4   3</span><br><span class="line"></span><br><span class="line">dim_v =</span><br><span class="line"></span><br><span class="line">   3   1</span><br><span class="line"></span><br><span class="line">A_23 =  6</span><br></pre></td></tr></table></figure><h2 id="addition-and-scalar-multiplication"><a class="markdownIt-Anchor" href="#addition-and-scalar-multiplication"></a> Addition and Scalar Multiplication</h2><h3 id="addition"><a class="markdownIt-Anchor" href="#addition"></a> Addition</h3><p><strong>Addition</strong> and <strong>subtraction</strong> are element-wise, so you simply add or subtract each corresponding element:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>+</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>w</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo>+</mo><mi>w</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mo>+</mo><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mo>+</mo><mi>y</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mo>+</mo><mi>z</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[\begin{array}{ll}a &amp; b \\c &amp; d \\\end{array}\right]+\left[\begin{array}{ll}w &amp; x\\y &amp; z\\\end{array}\right]=\left[\begin{array}{ll}a+w &amp; b+x \\c+y &amp; d+z \\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p>To add or subtract two matrices, their <em>dimensions</em> must be <strong>the same</strong>.</p><h3 id="scalar-multiplication"><a class="markdownIt-Anchor" href="#scalar-multiplication"></a> Scalar multiplication</h3><p>In <strong>scalar multiplication</strong>, we simply multiply every element by the scalar value:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>∗</mo><mi>x</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>x</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[\begin{array}{ll}a &amp; b \\c &amp; d \\\end{array}\right]*x=\left[\begin{array}{ll}ax &amp; bx \\cx &amp; dx \\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mord mathdefault">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mord mathdefault">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><h3 id="in-octavematlab-2"><a class="markdownIt-Anchor" href="#in-octavematlab-2"></a> in Octave/Matlab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">% Initialize matrix A and B </span><br><span class="line">A = [1, 2, 4; 5, 3, 2]</span><br><span class="line">B = [1, 3, 4; 1, 1, 1]</span><br><span class="line"></span><br><span class="line">% Initialize constant s </span><br><span class="line">s = 2</span><br><span class="line"></span><br><span class="line">% See how element-wise addition works</span><br><span class="line">add_AB = A + B </span><br><span class="line"></span><br><span class="line">% See how element-wise subtraction works</span><br><span class="line">sub_AB = A - B</span><br><span class="line"></span><br><span class="line">% See how scalar multiplication works</span><br><span class="line">mult_As = A * s</span><br><span class="line"></span><br><span class="line">% Divide A by s</span><br><span class="line">div_As = A / s</span><br><span class="line"></span><br><span class="line">% A Matrix + scalar will get Matrix + a new matrix that each element equals the scalar </span><br><span class="line">add_As = A + s</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">A =</span><br><span class="line"></span><br><span class="line">   1   2   4</span><br><span class="line">   5   3   2</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">   1   3   4</span><br><span class="line">   1   1   1</span><br><span class="line"></span><br><span class="line">s =  2</span><br><span class="line">add_AB =</span><br><span class="line"></span><br><span class="line">   2   5   8</span><br><span class="line">   6   4   3</span><br><span class="line"></span><br><span class="line">sub_AB =</span><br><span class="line"></span><br><span class="line">   0  -1   0</span><br><span class="line">   4   2   1</span><br><span class="line"></span><br><span class="line">mult_As =</span><br><span class="line"></span><br><span class="line">    2    4    8</span><br><span class="line">   10    6    4</span><br><span class="line"></span><br><span class="line">div_As =</span><br><span class="line"></span><br><span class="line">   0.50000   1.00000   2.00000</span><br><span class="line">   2.50000   1.50000   1.00000</span><br><span class="line"></span><br><span class="line">add_As =</span><br><span class="line"></span><br><span class="line">   3   4   6</span><br><span class="line">   7   5   4</span><br></pre></td></tr></table></figure><h2 id="matrix-vector-multiplication"><a class="markdownIt-Anchor" href="#matrix-vector-multiplication"></a> Matrix-Vector Multiplication</h2><p>We map the column of the vector onto each row of the matrix, multiplying each element and summing the result.</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>e</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>∗</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>e</mi><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mi>y</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[\begin{array}{ll}a &amp; b\\c &amp; d\\e &amp; f\\\end{array}\right]*\left[\begin{array}{ll}x\\y\\\end{array}\right]=\left[\begin{array}{ll}ax &amp; by\\cx &amp; dy\\ex &amp; fy\\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mord mathdefault">x</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>The result is a <strong>vector</strong>. The number of <strong>columns</strong> of the matrix must equal the number of <strong>rows</strong> of the vector.</p><p>An <code>m x n matrix</code> multiplied by an <code>n x 1 vector</code> results in an <code>m x 1 vector</code>.</p><h3 id="in-octavematlab-3"><a class="markdownIt-Anchor" href="#in-octavematlab-3"></a> in Octave/Matlab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">% Initialize matrix A </span><br><span class="line">A = [1, 2, 3; 4, 5, 6;7, 8, 9] </span><br><span class="line"></span><br><span class="line">% Initialize vector v </span><br><span class="line">v = [1; 1; 1] </span><br><span class="line"></span><br><span class="line">% Multiply A * v</span><br><span class="line">Av = A * v</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">A =</span><br><span class="line"></span><br><span class="line">   1   2   3</span><br><span class="line">   4   5   6</span><br><span class="line">   7   8   9</span><br><span class="line"></span><br><span class="line">v =</span><br><span class="line"></span><br><span class="line">   1</span><br><span class="line">   1</span><br><span class="line">   1</span><br><span class="line"></span><br><span class="line">Av =</span><br><span class="line"></span><br><span class="line">    6</span><br><span class="line">   15</span><br><span class="line">   24</span><br></pre></td></tr></table></figure><h3 id="neat-trick"><a class="markdownIt-Anchor" href="#neat-trick"></a> Neat Trick</h3><p>Say, we have a set of four sizes of houses, and we have a hypotheses for predictiong what the price of a house. We are going to compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> of each of our 4 houses:</p><blockquote><p>House sizes:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2104</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1416</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1534</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>852</mn></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{ll}2104\\1416\\1534\\852\\\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.800000000000001em;vertical-align:-2.1500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">1</span><span class="mord">0</span><span class="mord">4</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">4</span><span class="mord">1</span><span class="mord">6</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">5</span><span class="mord">3</span><span class="mord">4</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span><span class="mord">5</span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>Hypothesis:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>40</mn><mo>+</mo><mn>0.25</mn><mi>x</mi></mrow><annotation encoding="application/x-tex">h_\theta(x)=-40+0.25x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">4</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span><span class="mord mathdefault">x</span></span></span></span></span></p></blockquote><p>It turns out there’s neat way of posing this, applying this hypothesis to all of my houses at the same time via a Matrix-Vector multiplication.</p><ul><li>Construct a <code>DataMatrix</code>:</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>DataMatrix</mtext><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2104</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1416</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1534</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>852</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\textrm{DataMatrix}=\left[\begin{array}{ll}1 &amp; 2104\\1 &amp; 1416\\1 &amp; 1534\\1 &amp; 852\\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord textrm">DataMatrix</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">1</span><span class="mord">0</span><span class="mord">4</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">4</span><span class="mord">1</span><span class="mord">6</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">5</span><span class="mord">3</span><span class="mord">4</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span><span class="mord">5</span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Put <code>Parameters</code> to a vector:</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>Parameters</mtext><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>40</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.25</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\textrm{Parameters}=\left[\begin{array}{ll}-40\\0.25\\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord textrm">Parameters</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">4</span><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><ul><li>Then, the <code>Predictions</code> will be clear by calculate a Matrix-Vector Multiplication:</li></ul><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Unknown column alignment: e at position 15: \begin{array}{e̲}\textrm{Predi…">\begin{array}{e}\textrm{Predictions} &amp; = &amp; \textrm{DataMatrix} &amp; * &amp; \textrm{Parameters}\\ &amp; = &amp; \left[\begin{array}{ll}1 &amp; 2104\\1 &amp; 1416\\1 &amp; 1534\\1 &amp; 852\\\end{array}\right] &amp; * &amp; \left[\begin{array}{ll}-40\\0.25\\\end{array}\right]\\\end{array}</p><p>The reuslt will be something like this:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>Predictions</mtext><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>40</mn><mo>×</mo><mn>1</mn><mo>+</mo><mn>0.25</mn><mo>×</mo><mn>2104</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>40</mn><mo>×</mo><mn>1</mn><mo>+</mo><mn>0.25</mn><mo>×</mo><mn>1416</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\textrm{Predictions}=\left[\begin{array}{ll}-40 \times 1 + 0.25 \times 2104\\-40 \times 1 + 0.25 \times 1416\\\vdots\\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord textrm">Predictions</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.26em;vertical-align:-1.8800000000000003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.351015em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.104995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.351015em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.38em;"><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">−</span><span class="mord">4</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mord">0</span><span class="mord">4</span></span></span><span style="top:-4.0275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">−</span><span class="mord">4</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mord">1</span><span class="mord">6</span></span></span><span style="top:-2.1674999999999995em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8800000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.351015em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.104995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.351015em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>Obviously, it’s equal to the codes below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (i = 0; i &lt; X.size(); i++) &#123;</span><br><span class="line">Predictions[i] = h(X[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>However, our new trick simplifies the code, makes it more readable as well as driving it faster to be solved in most programming languages, we just construct two matrices and do a multiplication:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DataMatrix = [...]</span><br><span class="line">Parameters = [...]</span><br><span class="line">Predictions = DataMatrix * Parameters</span><br></pre></td></tr></table></figure><h2 id="matrix-matrix-multiplication"><a class="markdownIt-Anchor" href="#matrix-matrix-multiplication"></a> Matrix-Matrix Multiplication</h2><p>We multiply two matrices by breaking it into serveral vector multiplications and concatenating the result.</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>e</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>∗</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>w</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mi>w</mi><mo>+</mo><mi>b</mi><mi>y</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>z</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>w</mi><mo>+</mo><mi>d</mi><mi>y</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>x</mi><mo>+</mo><mi>d</mi><mi>z</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>e</mi><mi>w</mi><mo>+</mo><mi>f</mi><mi>y</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>e</mi><mi>x</mi><mo>+</mo><mi>f</mi><mi>z</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[\begin{array}{ll}a &amp; b\\c &amp; d\\e &amp; f\\\end{array}\right]*\left[\begin{array}{ll}w &amp; x\\y &amp; z\\\end{array}\right]=\left[\begin{array}{ll}aw+by &amp; ax+bz\\cw+dy &amp; cx+dz\\ew+fy &amp; ex+fz\\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>An <code>m x n matrix</code> multiplied by an <code>n x o matrix</code> result in an <code>m x o</code> matrix (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mi>m</mi><mo>×</mo><mi>n</mi><mo stretchy="false">]</mo><mo>∗</mo><mo stretchy="false">[</mo><mi>n</mi><mo>×</mo><mi>o</mi><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">[</mo><mi>m</mi><mo>×</mo><mi>o</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[m \times n]*[n \times o]=[m \times o]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">o</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">o</span><span class="mclose">]</span></span></span></span>). In the above example, a 3 x 2 matrix times a 2 x 2 matrix resulted in a 3 x 2 matrix.</p><p>To multiply two matrices, the number of <strong>columns</strong> of the first matrix must equal the number of <strong>rows</strong> of the second matrix.</p><h3 id="in-octavematlab-4"><a class="markdownIt-Anchor" href="#in-octavematlab-4"></a> in Octave/Matlab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A = [1, 2; 3, 4; 5, 6]</span><br><span class="line">B = [7, 8; 9, 10]</span><br><span class="line">A*B</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">A =</span><br><span class="line"></span><br><span class="line">   1   2</span><br><span class="line">   3   4</span><br><span class="line">   5   6</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">    7    8</span><br><span class="line">    9   10</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    25    28</span><br><span class="line">    57    64</span><br><span class="line">    89   100</span><br></pre></td></tr></table></figure><h3 id="neat-trick-2"><a class="markdownIt-Anchor" href="#neat-trick-2"></a> Neat Trick</h3><p>Let’s say, as befor, that we have four houses, and we want to predict their prices. Ony now, we have three competing hypotheses. We want to apply all three competing hypotheses to all four Xs. It turns out we can do that very efficiently using a matrix-matrix multiplication.</p><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6k2f8f6tyj30hw09f40y.jpg" alt="image-20190901154936492"></p><h2 id="matrix-multiplication-properties"><a class="markdownIt-Anchor" href="#matrix-multiplication-properties"></a> Matrix Multiplication Properties</h2><h3 id="non-commutative"><a class="markdownIt-Anchor" href="#non-commutative"></a> Non-commutative</h3><p>Matrices are not commutative:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>×</mo><mi>B</mi><mi mathvariant="normal">≠</mi><mi>B</mi><mo>×</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">A \times B \neq B \times A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span></span></p><h3 id="associative"><a class="markdownIt-Anchor" href="#associative"></a> Associative</h3><p>Matrices are associative:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>×</mo><mi>B</mi><mo stretchy="false">)</mo><mo>×</mo><mi>C</mi><mo>=</mo><mi>A</mi><mo>×</mo><mo stretchy="false">(</mo><mi>B</mi><mo>×</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(A \times B) \times C = A \times (B \times C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span></span></p><h3 id="identity-matrix"><a class="markdownIt-Anchor" href="#identity-matrix"></a> Identity matrix</h3><p><code>Identity matrix</code>: a matrix that simply has <code>1</code>'s on the diagonal (upper left to lower right diagonal) and <code>0</code>'s elsewhere.</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">I=\left[\begin{array}{ll}1 &amp; 0 &amp; 0\\0 &amp; 1 &amp; 0\\0 &amp; 0 &amp; 1\\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>The identity matrix, when multiplied by any matrix of the same dimensions, results in the original matrix. It’s just like multiplying numbers by 1.</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>×</mo><mi>I</mi><mo>=</mo><mi>I</mi><mo>×</mo><mi>A</mi><mo>=</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">A \times I = I \times A = A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span></span></p><p>Notice that when doing <code>A*I</code>, the <code>I</code> should match the matrix’s columns and when doing <code>I*A</code>, the <code>I</code> should match the matrix’s rows:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msub><mo>×</mo><msub><mi>I</mi><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow></msub><mo>=</mo><msub><mi>I</mi><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow></msub><mo>×</mo><msub><mi>A</mi><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msub><mo>=</mo><msub><mi>A</mi><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{m \times n} \times I_{n \times n}=I_{m \times m} \times A_{m \times n} = A_{m \times n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></p><h3 id="in-octavematlab-5"><a class="markdownIt-Anchor" href="#in-octavematlab-5"></a> in Octave/Matlab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">% Initialize random matrices A and B </span><br><span class="line">A = [1,2;4,5]</span><br><span class="line">B = [1,1;0,2]</span><br><span class="line"></span><br><span class="line">% Initialize a 2 by 2 identity matrix</span><br><span class="line">I = eye(2)</span><br><span class="line"></span><br><span class="line">% The above notation is the same as I = [1,0;0,1]</span><br><span class="line"></span><br><span class="line">% What happens when we multiply I*A ? </span><br><span class="line">IA = I*A </span><br><span class="line"></span><br><span class="line">% How about A*I ? </span><br><span class="line">AI = A*I </span><br><span class="line"></span><br><span class="line">% Compute A*B </span><br><span class="line">AB = A*B </span><br><span class="line"></span><br><span class="line">% Is it equal to B*A? </span><br><span class="line">BA = B*A </span><br><span class="line"></span><br><span class="line">% Note that IA = AI but AB != BA</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">A =</span><br><span class="line"></span><br><span class="line">   1   2</span><br><span class="line">   4   5</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">   1   1</span><br><span class="line">   0   2</span><br><span class="line"></span><br><span class="line">I =</span><br><span class="line"></span><br><span class="line">Diagonal Matrix</span><br><span class="line"></span><br><span class="line">   1   0</span><br><span class="line">   0   1</span><br><span class="line"></span><br><span class="line">IA =</span><br><span class="line"></span><br><span class="line">   1   2</span><br><span class="line">   4   5</span><br><span class="line"></span><br><span class="line">AI =</span><br><span class="line"></span><br><span class="line">   1   2</span><br><span class="line">   4   5</span><br><span class="line"></span><br><span class="line">AB =</span><br><span class="line"></span><br><span class="line">    1    5</span><br><span class="line">    4   14</span><br><span class="line"></span><br><span class="line">BA =</span><br><span class="line"></span><br><span class="line">    5    7</span><br><span class="line">    8   10</span><br></pre></td></tr></table></figure><h2 id="inverse-and-transpose"><a class="markdownIt-Anchor" href="#inverse-and-transpose"></a> Inverse and Transpose</h2><h3 id="inverse"><a class="markdownIt-Anchor" href="#inverse"></a> Inverse</h3><p>The inverse of a matrix <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> is denoted <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">A^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>. Multiplying by the inverse results in the identity matrix:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow></msub><mo>×</mo><msubsup><mi>A</mi><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>=</mo><msubsup><mi>A</mi><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>×</mo><msub><mi>A</mi><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow></msub><mo>=</mo><msub><mi>I</mi><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{m \times m} \times A^{-1}_{m \times m}=A^{-1}_{m \times m} \times A_{m \times m} = I_{m \times m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1694390000000001em;vertical-align:-0.305331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1694390000000001em;vertical-align:-0.305331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>A non square matrix does not have an inverse matrix. We can compute inverses of matrices in octave with the <code>pinv(A)</code> function and in Matlab with the <code>inv(A)</code> function. Matrices that don’t have an inverse are <em>singular</em> or <em>degenerate</em>.</p><h3 id="transpose"><a class="markdownIt-Anchor" href="#transpose"></a> Transpose</h3><p>The transposition of a matrix is like rotating the matrix 90º in clockwise direction and then reversing it.</p><p>In other words: Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> be an <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">m \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> matrix, and let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo>=</mo><msup><mi>A</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">B=A^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>. Then  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> is an <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>×</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n \times m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> matrix, and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>B</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>A</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">B_{ij}=A_{ji}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>.</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>e</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace width="2em"></mspace><msup><mi>A</mi><mi>T</mi></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>e</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A=\left[\begin{array}{l}a &amp; b\\c &amp; d\\e &amp; f\\\end{array}\right]\qquad A^T=\left[\begin{array}{l}a &amp; c &amp; e\\b &amp; d &amp; f\\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">e</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p>We can compute transposition of matrices in matlab with the <code>transpose(A)</code> function or <code>A'</code></p><h3 id="in-octavematlab-6"><a class="markdownIt-Anchor" href="#in-octavematlab-6"></a> in Octave/Matlab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">% Initialize matrix A </span><br><span class="line">A = [1,2,0;0,5,6;7,0,9]</span><br><span class="line"></span><br><span class="line">% Transpose A </span><br><span class="line">A_trans = A&apos; </span><br><span class="line"></span><br><span class="line">% Take the inverse of A </span><br><span class="line">A_inv = inv(A)</span><br><span class="line"></span><br><span class="line">% What is A^(-1)*A? </span><br><span class="line">A_invA = inv(A)*A</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">A =</span><br><span class="line"></span><br><span class="line">   1   2   0</span><br><span class="line">   0   5   6</span><br><span class="line">   7   0   9</span><br><span class="line"></span><br><span class="line">A_trans =</span><br><span class="line"></span><br><span class="line">   1   0   7</span><br><span class="line">   2   5   0</span><br><span class="line">   0   6   9</span><br><span class="line"></span><br><span class="line">A_inv =</span><br><span class="line"></span><br><span class="line">   0.348837  -0.139535   0.093023</span><br><span class="line">   0.325581   0.069767  -0.046512</span><br><span class="line">  -0.271318   0.108527   0.038760</span><br><span class="line"></span><br><span class="line">A_invA =</span><br><span class="line"></span><br><span class="line">   1.00000  -0.00000   0.00000</span><br><span class="line">   0.00000   1.00000  -0.00000</span><br><span class="line">  -0.00000   0.00000   1.00000</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Machine Learning </category>
          
          <category> AndrewNg </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>go-3-更多类型：指针、struct、slice和映射</title>
      <link href="/2019/08/31/go-3-MoreTypes/"/>
      <url>/2019/08/31/go-3-MoreTypes/</url>
      
        <content type="html"><![CDATA[<h2 id="更多类型指针-struct-slice-和映射"><a class="markdownIt-Anchor" href="#更多类型指针-struct-slice-和映射"></a> 更多类型：指针、struct、slice 和映射</h2><h3 id="指针"><a class="markdownIt-Anchor" href="#指针"></a> § <a href="https://tour.golang.org/moretypes/1" target="_blank" rel="noopener">指针</a></h3><p>Go 拥有指针。指针保存了值的内存地址。</p><p>类型 <code>*T</code> 是指向 <code>T</code> 类型值的指针。其零值为 <code>nil</code>。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p *<span class="keyword">int</span></span><br></pre></td></tr></table></figure><p><code>&amp;</code> 操作符会生成一个指向其操作数的指针。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i := <span class="number">42</span></span><br><span class="line">p = &amp;i</span><br></pre></td></tr></table></figure><p><code>*</code> 操作符表示指针指向的底层值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(*p) <span class="comment">// 通过指针 p 读取 i</span></span><br><span class="line">*p = <span class="number">21</span>         <span class="comment">// 通过指针 p 设置 i</span></span><br></pre></td></tr></table></figure><p>这也就是通常所说的“间接引用”或“重定向”。</p><p>与 C 不同，Go 没有指针运算。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">i, j := <span class="number">42</span>, <span class="number">2701</span></span><br><span class="line"></span><br><span class="line">p := &amp;i</span><br><span class="line">fmt.Println(p)</span><br><span class="line">fmt.Println(*p)</span><br><span class="line">*p = <span class="number">21</span></span><br><span class="line">fmt.Println(*p)</span><br><span class="line"></span><br><span class="line">p = &amp;j</span><br><span class="line">*p /= <span class="number">37</span></span><br><span class="line">fmt.Println(j)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0xc00008e000</span><br><span class="line">42</span><br><span class="line">21</span><br><span class="line">73</span><br></pre></td></tr></table></figure><h3 id="结构体"><a class="markdownIt-Anchor" href="#结构体"></a> § <a href="https://tour.golang.org/moretypes/2" target="_blank" rel="noopener">结构体</a></h3><p>一个结构体（<code>struct</code>）就是一组字段（field）。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Vertex <span class="keyword">struct</span> &#123;</span><br><span class="line">x <span class="keyword">int</span></span><br><span class="line">y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(Vertex&#123;<span class="number">1</span>, <span class="number">2</span>&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;1 2&#125;</span><br></pre></td></tr></table></figure><h4 id="结构体字段"><a class="markdownIt-Anchor" href="#结构体字段"></a> <a href="https://tour.golang.org/moretypes/3" target="_blank" rel="noopener">结构体字段</a></h4><p>结构体字段使用点号来访问。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Vertex <span class="keyword">struct</span> &#123;</span><br><span class="line">X <span class="keyword">int</span></span><br><span class="line">Y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">v := Vertex&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line">v.X = <span class="number">4</span></span><br><span class="line">fmt.Println(v.X)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="结构体指针"><a class="markdownIt-Anchor" href="#结构体指针"></a> <a href="https://tour.golang.org/moretypes/4" target="_blank" rel="noopener">结构体指针</a></h4><p>结构体字段可以通过结构体指针来访问。</p><p>如果我们有一个指向结构体的指针 p，那么可以通过 <code>(*p).X</code> 来访问其字段 X。不过这么写太啰嗦了，所以语言也允许我们使用隐式间接引用，直接写 <code>p.X</code> 就可以。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Vertex <span class="keyword">struct</span> &#123;</span><br><span class="line">X <span class="keyword">int</span></span><br><span class="line">Y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">v := Vertex&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line">p := &amp;v</span><br><span class="line">p.X = <span class="number">1e9</span></span><br><span class="line">fmt.Println(v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;1000000000 2&#125;</span><br></pre></td></tr></table></figure><h4 id="结构体文法struct-literals"><a class="markdownIt-Anchor" href="#结构体文法struct-literals"></a> <a href="https://tour.golang.org/moretypes/5" target="_blank" rel="noopener">结构体文法(Struct Literals)</a></h4><p>结构体文法通过直接列出字段的值来新分配一个结构体。</p><p>使用 <code>Name:</code> 语法可以仅列出部分字段。（字段名的顺序无关。）</p><p>特殊的前缀 <code>&amp;</code> 返回一个指向结构体的指针。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Vertex <span class="keyword">struct</span> &#123;</span><br><span class="line">X, Y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">v1 = Vertex&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line">v2 = Vertex&#123;X: <span class="number">1</span>&#125;</span><br><span class="line">v3 = Vertex&#123;&#125;</span><br><span class="line">p0 = &amp;Vertex&#123;Y: <span class="number">1</span>, X: <span class="number">2</span>&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(v1, v2, v3, *p0)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;1 2&#125; &#123;1 0&#125; &#123;0 0&#125; &#123;2 1&#125;</span><br></pre></td></tr></table></figure><h3 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> § <a href="https://tour.golang.org/moretypes/6" target="_blank" rel="noopener">数组</a></h3><p>类型 <code>[n]T</code> 表示拥有 n 个 T 类型的值的数组。</p><p>表达式</p><p><code>var a [10]int</code></p><p>会将变量 a 声明为拥有 10 个整数的数组。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a [<span class="number">2</span>]<span class="keyword">string</span></span><br><span class="line">a[<span class="number">0</span>] = <span class="string">"Hello"</span></span><br><span class="line">a[<span class="number">1</span>] = <span class="string">"World"</span></span><br><span class="line">fmt.Println(a[<span class="number">0</span>], a[<span class="number">1</span>])</span><br><span class="line">fmt.Println(a)</span><br><span class="line"></span><br><span class="line">primes := [<span class="number">6</span>]<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>&#125;</span><br><span class="line">fmt.Println(primes)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hello World</span><br><span class="line">[Hello World]</span><br><span class="line">[2 3 5 7 11 13]</span><br></pre></td></tr></table></figure><p>数组的长度是其类型的一部分，因此数组不能改变大小。这看起来是个限制，不过没关系，Go 提供了更加便利的方式来使用数组。</p><h3 id="切片"><a class="markdownIt-Anchor" href="#切片"></a> § 切片</h3><p>每个数组的大小都是固定的。而切片则为数组元素提供动态大小的、灵活的视角。在实践中，切片比数组更常用。</p><p>类型 <code>[]T</code> 表示一个元素类型为 T 的切片。（不写元素个数的数组）</p><p>切片通过两个下标来界定，即一个上界和一个下界，二者以冒号分隔：</p><p><code>a[low : high]</code></p><p>它会选择一个半开区间，包括第一个元素，但排除最后一个元素。</p><p>以下表达式创建了一个切片，它包含 a 中下标从 1 到 3 的元素：</p><p><code>a[1:4]</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">primes := [<span class="number">6</span>]<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s []<span class="keyword">int</span> = primes[<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[3 5 7]</span><br></pre></td></tr></table></figure><h4 id="切片就像数组的引用"><a class="markdownIt-Anchor" href="#切片就像数组的引用"></a> <a href="https://tour.golang.org/moretypes/8" target="_blank" rel="noopener">切片就像数组的引用</a></h4><p>切片并不存储任何数据，它只是描述了底层数组中的一段。</p><p>更改切片的元素会修改其底层数组中对应的元素。</p><p>与它共享底层数组的切片都会观测到这些修改。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">names := [<span class="number">4</span>]<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">"A"</span>,</span><br><span class="line"><span class="string">"B"</span>,</span><br><span class="line"><span class="string">"C"</span>,</span><br><span class="line"><span class="string">"D"</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(names)</span><br><span class="line"></span><br><span class="line">a := names[<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">b := names[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">fmt.Println(a, b)</span><br><span class="line"></span><br><span class="line">b[<span class="number">0</span>] = <span class="string">"XXX"</span></span><br><span class="line">fmt.Println(a, b)</span><br><span class="line">fmt.Println(names)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[A B C D]</span><br><span class="line">[A B] [B C]</span><br><span class="line">[A XXX] [XXX C]</span><br><span class="line">[A XXX C D]</span><br></pre></td></tr></table></figure><h4 id="切片文法slice-literals"><a class="markdownIt-Anchor" href="#切片文法slice-literals"></a> <a href="https://tour.golang.org/moretypes/9" target="_blank" rel="noopener">切片文法(Slice literals)</a></h4><p>切片文法类似于没有长度的数组文法。</p><p>这是一个数组文法：</p><p><code>[3]bool{true, true, false}</code></p><p>下面这样则会创建一个和上面相同的数组，然后构建一个引用了它的切片：</p><p><code>[]bool{true, true, false}</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">q := []<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>&#125;</span><br><span class="line">fmt.Println(q)</span><br><span class="line"></span><br><span class="line">r := []<span class="keyword">bool</span>&#123;<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>, <span class="literal">false</span>&#125;</span><br><span class="line">fmt.Println(r)</span><br><span class="line"></span><br><span class="line">s := []<span class="keyword">struct</span> &#123;</span><br><span class="line">i <span class="keyword">int</span></span><br><span class="line">b <span class="keyword">bool</span></span><br><span class="line">&#125;&#123;</span><br><span class="line">&#123;<span class="number">2</span>, <span class="literal">true</span>&#125;,</span><br><span class="line">&#123;<span class="number">3</span>, <span class="literal">false</span>&#125;,</span><br><span class="line">&#123;<span class="number">5</span>, <span class="literal">true</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[2 3 5 7 11 13]</span><br><span class="line">[true false true false]</span><br><span class="line">[&#123;2 true&#125; &#123;3 false&#125; &#123;5 true&#125;]</span><br></pre></td></tr></table></figure><h4 id="切片的默认行为"><a class="markdownIt-Anchor" href="#切片的默认行为"></a> <a href="https://tour.golang.org/moretypes/10" target="_blank" rel="noopener">切片的默认行为</a></h4><p>在进行切片时，你可以利用它的默认行为来忽略上下界。</p><p>切片下界的默认值为 0，上界则是该切片的长度。</p><p>对于数组</p><p><code>var a [10]int</code></p><p>来说，以下切片是等价的：</p><p><code>a[0:10]</code></p><p><code>a[:10]</code></p><p><code>a[0:]</code></p><p><code>a[:]</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := []<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>&#125;</span><br><span class="line"></span><br><span class="line">s = s[<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line">fmt.Println(s)</span><br><span class="line"></span><br><span class="line">s = s[:<span class="number">2</span>]</span><br><span class="line">fmt.Println(s)</span><br><span class="line"></span><br><span class="line">s = s[<span class="number">1</span>:]</span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[3 5 7]</span><br><span class="line">[3 5]</span><br><span class="line">[5]</span><br></pre></td></tr></table></figure><h4 id="切片的长度与容量"><a class="markdownIt-Anchor" href="#切片的长度与容量"></a> <a href="https://tour.golang.org/moretypes/11" target="_blank" rel="noopener">切片的长度与容量</a></h4><p>切片拥有 <strong>长度</strong> 和 <strong>容量</strong>。</p><ul><li><p>切片的 长度 就是它所包含的元素个数。</p></li><li><p>切片的 容量 是从它的第一个元素开始数，到其底层数组元素末尾的个数。</p></li></ul><p>切片 <code>s</code> 的长度和容量可通过表达式 <code>len(s)</code> 和 <code>cap(s)</code> 来获取。</p><p>你可以通过重新切片来改变一个切片的长度(You can extend a slice’s length by re-slicing it, provided it has sufficient capacity. )。</p><p>如果长度开得超出了容量(to extend it beyond its capacity)，会有 runtime error。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := []<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>&#125;</span><br><span class="line">printSlice(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 截取切片使其长度为 0</span></span><br><span class="line">s = s[:<span class="number">0</span>]</span><br><span class="line">printSlice(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拓展其长度</span></span><br><span class="line">s = s[:<span class="number">4</span>]</span><br><span class="line">printSlice(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 舍弃前两个值</span></span><br><span class="line">s = s[<span class="number">2</span>:]</span><br><span class="line">printSlice(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向外扩展它的容量</span></span><br><span class="line">s = s[<span class="number">2</span>:<span class="number">10</span>]</span><br><span class="line">printSlice(s)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printSlice</span><span class="params">(s []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"len=%d\tcap=%d\t %v\n"</span>, <span class="built_in">len</span>(s), <span class="built_in">cap</span>(s), s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">len=6cap=6 [2 3 5 7 11 13]</span><br><span class="line">len=0cap=6 []</span><br><span class="line">len=4cap=6 [2 3 5 7]</span><br><span class="line">len=2cap=4 [5 7]</span><br><span class="line">panic: runtime error: slice bounds out of range</span><br><span class="line"></span><br><span class="line">goroutine 1 [running]:</span><br><span class="line">main.main()</span><br><span class="line">/Users/example/go/tour/slice-len-cap/src.go:22 +0x483</span><br><span class="line">exit status 2</span><br></pre></td></tr></table></figure><h4 id="nil-切片"><a class="markdownIt-Anchor" href="#nil-切片"></a> <a href="https://tour.golang.org/moretypes/12" target="_blank" rel="noopener">nil 切片</a></h4><p>切片的零值是 <code>nil</code>。</p><p><code>nil</code> 切片的长度和容量为 <code>0</code> 且没有底层数组。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s []<span class="keyword">int</span></span><br><span class="line">fmt.Println(s, <span class="built_in">len</span>(s), <span class="built_in">cap</span>(s))</span><br><span class="line"><span class="keyword">if</span> s == <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"nil!"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[] 0 0</span><br><span class="line">nil!</span><br></pre></td></tr></table></figure><h4 id="用-make-创建切片"><a class="markdownIt-Anchor" href="#用-make-创建切片"></a> <a href="https://tour.golang.org/moretypes/13" target="_blank" rel="noopener">用 make 创建切片</a></h4><p>切片可以用内建函数 <code>make</code> 来创建，这也是创建动态数组的方式。</p><p><code>make</code> 函数会分配一个元素为零值的数组并返回一个引用了它的切片：</p><p><code>a := make([]int, 5) // len(a)=5</code></p><p>要指定它的容量(cap)，需向 make 传入第三个参数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>, <span class="number">5</span>) <span class="comment">// len(b)=0, cap(b)=5</span></span><br><span class="line"></span><br><span class="line">b = b[:<span class="built_in">cap</span>(b)] <span class="comment">// len(b)=5, cap(b)=5</span></span><br><span class="line">b = b[<span class="number">1</span>:]      <span class="comment">// len(b)=4, cap(b)=4</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">5</span>)</span><br><span class="line">printSlice(<span class="string">"a"</span>, a)</span><br><span class="line"></span><br><span class="line">b := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">printSlice(<span class="string">"b"</span>, b)</span><br><span class="line"></span><br><span class="line">c := b[:<span class="number">2</span>]</span><br><span class="line">printSlice(<span class="string">"c"</span>, c)</span><br><span class="line"></span><br><span class="line">d := c[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">printSlice(<span class="string">"d"</span>, d)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printSlice</span><span class="params">(s <span class="keyword">string</span>, x []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s: len=%d cap=%d %v\n"</span>, s, <span class="built_in">len</span>(x), <span class="built_in">cap</span>(x), x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a: len=5 cap=5 [0 0 0 0 0]</span><br><span class="line">b: len=0 cap=5 []</span><br><span class="line">c: len=2 cap=5 [0 0]</span><br><span class="line">d: len=3 cap=3 [0 0 0]</span><br></pre></td></tr></table></figure><h4 id="切片的切片"><a class="markdownIt-Anchor" href="#切片的切片"></a> <a href="https://tour.golang.org/moretypes/14" target="_blank" rel="noopener">切片的切片</a></h4><p>切片可包含任何类型，甚至包括其它的切片。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 创建一个井字板（井字棋游戏）</span></span><br><span class="line">board := [][]<span class="keyword">string</span>&#123;</span><br><span class="line">[]<span class="keyword">string</span>&#123;<span class="string">"_"</span>, <span class="string">"_"</span>, <span class="string">"_"</span>&#125;,</span><br><span class="line">[]<span class="keyword">string</span>&#123;<span class="string">"_"</span>, <span class="string">"_"</span>, <span class="string">"_"</span>&#125;,</span><br><span class="line">[]<span class="keyword">string</span>&#123;<span class="string">"_"</span>, <span class="string">"_"</span>, <span class="string">"_"</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 两个玩家轮流打上 X 和 O</span></span><br><span class="line">board[<span class="number">0</span>][<span class="number">0</span>] = <span class="string">"X"</span></span><br><span class="line">board[<span class="number">2</span>][<span class="number">2</span>] = <span class="string">"O"</span></span><br><span class="line">board[<span class="number">1</span>][<span class="number">2</span>] = <span class="string">"X"</span></span><br><span class="line">board[<span class="number">1</span>][<span class="number">0</span>] = <span class="string">"O"</span></span><br><span class="line">board[<span class="number">0</span>][<span class="number">2</span>] = <span class="string">"X"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(board); i++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s\n"</span>, strings.Join(board[i], <span class="string">"  "</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X  _  X</span><br><span class="line">O  _  X</span><br><span class="line">_  _  O</span><br></pre></td></tr></table></figure><h4 id="向切片追加元素"><a class="markdownIt-Anchor" href="#向切片追加元素"></a> <a href="https://tour.golang.org/moretypes/15" target="_blank" rel="noopener">向切片追加元素</a></h4><p>为切片追加新的元素是种常用的操作，为此 Go 提供了内建的 append 函数。内建函数的<a href="https://golang.org/pkg/builtin/#append" target="_blank" rel="noopener">文档</a>对此函数有详细的介绍。</p><p><code>func append(s []T, vs ...T) []T</code></p><p><code>append</code> 的第一个参数 <code>s</code> 是一个元素类型为 <code>T</code> 的切片，其余类型为 <code>T</code> 的值将会追加到该切片的末尾。</p><p><code>append</code> 的结果是一个包含原切片所有元素加上新添加元素的切片。</p><p>当 <code>s</code> 的底层数组太小，不足以容纳所有给定的值时，它就会分配一个更大的数组。返回的切片会指向这个新分配的数组。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s []<span class="keyword">int</span></span><br><span class="line">printSlice(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将元素添加到一个空切片</span></span><br><span class="line">s = <span class="built_in">append</span>(s, <span class="number">0</span>)</span><br><span class="line">printSlice(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个切片会按需增长</span></span><br><span class="line">s = <span class="built_in">append</span>(s, <span class="number">1</span>)</span><br><span class="line">printSlice(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以一次添加多个元素</span></span><br><span class="line">s = <span class="built_in">append</span>(s, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">printSlice(s)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printSlice</span><span class="params">(s []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"len=%d cap=%d %v\n"</span>, <span class="built_in">len</span>(s), <span class="built_in">cap</span>(s), s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">len=0 cap=0 []</span><br><span class="line">len=1 cap=1 [0]</span><br><span class="line">len=2 cap=2 [0 1]</span><br><span class="line">len=5 cap=6 [0 1 2 3 4]</span><br></pre></td></tr></table></figure><p>（要了解关于切片的更多内容，请阅读文章 <a href="https://blog.golang.org/go-slices-usage-and-internals" target="_blank" rel="noopener">Go 切片：用法和本质</a>。）</p><h3 id="range"><a class="markdownIt-Anchor" href="#range"></a> <a href="https://tour.golang.org/moretypes/16" target="_blank" rel="noopener">Range</a></h3><p><code>for</code> 循环的 <code>range</code> 形式可遍历切片或映射。</p><p>当使用 <code>for</code> 循环遍历切片时，每次迭代都会返回两个值。第一个值为当前元素的下标，第二个值为该下标所对应元素的一份副本。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> pow = []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">128</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> pow &#123;</span><br><span class="line">fmt.Printf(<span class="string">"2**%d = %d\n"</span>, i, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">2**0 = 1</span><br><span class="line">2**1 = 2</span><br><span class="line">2**2 = 4</span><br><span class="line">2**3 = 8</span><br><span class="line">2**4 = 16</span><br><span class="line">2**5 = 32</span><br><span class="line">2**6 = 64</span><br><span class="line">2**7 = 128</span><br></pre></td></tr></table></figure><h4 id="range续"><a class="markdownIt-Anchor" href="#range续"></a> <a href="https://tour.golang.org/moretypes/17" target="_blank" rel="noopener">range（续）</a></h4><p>可以将 下标 或 值 赋予 _ 来忽略它。</p><p><code>for i, _ := range pow</code><br><code>for _, value := range pow</code></p><p>若你只需要索引，忽略第二个变量即可:</p><p><code>for i := range pow</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">pow := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">10</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> pow &#123;</span><br><span class="line">pow[i] = <span class="number">1</span> &lt;&lt; <span class="keyword">uint</span>(i) <span class="comment">// == 2 ** i</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, value := <span class="keyword">range</span> pow &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%d\n"</span>, value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">8</span><br><span class="line">16</span><br><span class="line">32</span><br><span class="line">64</span><br><span class="line">128</span><br><span class="line">256</span><br><span class="line">512</span><br></pre></td></tr></table></figure><h3 id="maps映射"><a class="markdownIt-Anchor" href="#maps映射"></a> <a href="https://tour.golang.org/moretypes/19" target="_blank" rel="noopener">Maps(映射)</a></h3><p>映射将键映射到值。</p><p>映射的零值为 <code>nil</code> 。</p><p><code>nil</code> 映射既没有键，也不能添加键。</p><p><code>make</code> 函数会返回给定类型的映射，并将其初始化备用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Vertex <span class="keyword">struct</span> &#123;</span><br><span class="line">Lat, Long <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m <span class="keyword">map</span>[<span class="keyword">string</span>]Vertex</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(m)</span><br><span class="line"><span class="comment">// m["A"] = Vertex&#123;1.2, 3.4&#125;    // 不可这样用</span></span><br><span class="line"></span><br><span class="line">m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]Vertex)</span><br><span class="line">m[<span class="string">"B"</span>] = Vertex&#123;</span><br><span class="line"><span class="number">40.05</span>, <span class="number">-71.0</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(m[<span class="string">"B"</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">map[]</span><br><span class="line">&#123;40.05 -71&#125;</span><br></pre></td></tr></table></figure><h4 id="映射的文法"><a class="markdownIt-Anchor" href="#映射的文法"></a> <a href="https://tour.golang.org/moretypes/20" target="_blank" rel="noopener">映射的文法</a></h4><p>映射的文法与结构体相似，不过必须有键名。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Vertex <span class="keyword">struct</span> &#123;</span><br><span class="line">Lat, Long <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m = <span class="keyword">map</span>[<span class="keyword">string</span>]Vertex&#123;</span><br><span class="line"><span class="string">"B"</span> : Vertex&#123;<span class="number">1</span>, <span class="number">2</span>&#125;,</span><br><span class="line"><span class="string">"C"</span> : Vertex&#123;<span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(m)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map[B:&#123;1 2&#125; C:&#123;3 4&#125;]</span><br></pre></td></tr></table></figure><h4 id="映射的文法续"><a class="markdownIt-Anchor" href="#映射的文法续"></a> <a href="https://tour.golang.org/moretypes/21" target="_blank" rel="noopener">映射的文法（续）</a></h4><p>若顶级类型只是一个类型名，你可以在文法的元素中省略它:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Vertex <span class="keyword">struct</span> &#123;</span><br><span class="line">Lat, Long <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m = <span class="keyword">map</span>[<span class="keyword">string</span>]Vertex&#123;</span><br><span class="line"><span class="string">"B"</span>: &#123;<span class="number">1</span>, <span class="number">2</span>&#125;,</span><br><span class="line"><span class="string">"C"</span>: &#123;<span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(m)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map[B:&#123;1 2&#125; C:&#123;3 4&#125;]</span><br></pre></td></tr></table></figure><h4 id="修改映射"><a class="markdownIt-Anchor" href="#修改映射"></a> <a href="https://tour.golang.org/moretypes/22" target="_blank" rel="noopener">修改映射</a></h4><p>在映射 <code>m</code> 中插入或修改元素：</p><p><code>m[key] = elem</code></p><p>获取元素：</p><p><code>elem = m[key]</code></p><p>删除元素：</p><p><code>delete(m, key)</code></p><p>通过双赋值检测某个键是否存在：</p><p><code>elem, ok = m[key]</code></p><p>若 <code>key</code> 在 <code>m</code> 中，<code>ok</code> 为 <code>true</code> ；否则，<code>ok</code> 为 <code>false</code>。</p><p>若 <code>key</code> 不在映射中，那么 <code>elem</code> 是该映射元素类型的零值。</p><p>同样的，当从映射中读取某个不存在的键时，结果是映射的元素类型的零值。</p><p><strong>注</strong> ：若 <code>elem</code> 或 <code>ok</code> 还未声明，可以使用短变量声明：</p><p><code>elem, ok := m[key]</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line">m[<span class="string">"Answer"</span>] = <span class="number">42</span></span><br><span class="line">fmt.Println(<span class="string">"The value:"</span>, m[<span class="string">"Answer"</span>])</span><br><span class="line"></span><br><span class="line">m[<span class="string">"Answer"</span>] = <span class="number">48</span></span><br><span class="line">fmt.Println(<span class="string">"The value:"</span>, m[<span class="string">"Answer"</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">delete</span>(m, <span class="string">"Answer"</span>)</span><br><span class="line">fmt.Println(<span class="string">"The value:"</span>, m[<span class="string">"Answer"</span>])</span><br><span class="line"></span><br><span class="line">v, ok := m[<span class="string">"Answer"</span>]</span><br><span class="line">fmt.Println(<span class="string">"The value:"</span>, v, <span class="string">"Present?"</span>, ok)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">The value: 42</span><br><span class="line">The value: 48</span><br><span class="line">The value: 0</span><br><span class="line">The value: 0 Present? false</span><br></pre></td></tr></table></figure><h3 id="函数值"><a class="markdownIt-Anchor" href="#函数值"></a> <a href="https://tour.golang.org/moretypes/24" target="_blank" rel="noopener">函数值</a></h3><p>函数也是值。它们可以像其它值一样传递。</p><p>函数值可以用作函数的参数或返回值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">compute</span><span class="params">(fn <span class="keyword">func</span>(<span class="keyword">float64</span>, <span class="keyword">float64</span>)</span> <span class="title">float64</span>) <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> fn(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">hypot := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> math.Sqrt(x*x + y*y)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(hypot(<span class="number">5</span>, <span class="number">12</span>))</span><br><span class="line"></span><br><span class="line">fmt.Println(compute(hypot))</span><br><span class="line">fmt.Println(compute(math.Pow))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">13</span><br><span class="line">5</span><br><span class="line">81</span><br></pre></td></tr></table></figure><h3 id="函数的闭包"><a class="markdownIt-Anchor" href="#函数的闭包"></a> <a href="https://tour.golang.org/moretypes/25" target="_blank" rel="noopener">函数的闭包</a></h3><p>Go 函数可以是一个闭包。闭包是一个函数值，它引用了其函数体之外的变量。该函数可以访问并赋予其引用的变量的值，换句话说，该函数被这些变量“绑定”在一起。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">adder</span><span class="params">()</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(x <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">sum += x</span><br><span class="line"><span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">pos, neg := adder(), adder()</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Println(</span><br><span class="line">pos(i),</span><br><span class="line">neg(<span class="number">-2</span>*i),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0 0</span><br><span class="line">1 -2</span><br><span class="line">3 -6</span><br><span class="line">6 -12</span><br><span class="line">10 -20</span><br><span class="line">15 -30</span><br><span class="line">21 -42</span><br><span class="line">28 -56</span><br><span class="line">36 -72</span><br><span class="line">45 -90</span><br></pre></td></tr></table></figure><p>👆函数 <code>adder</code> 返回一个闭包。每个闭包都被绑定在其各自的 <code>sum</code> 变量上。</p><p>实例：<a href="https://tour.golang.org/moretypes/26" target="_blank" rel="noopener"><em>斐波纳契闭包</em></a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fibonacci is a function that returns</span></span><br><span class="line"><span class="comment">// a function that returns an int.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fibonacci</span><span class="params">()</span> <span class="title">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">i, j := <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">i, j = j, i + j</span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">f := fibonacci()</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Println(f())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">5</span><br><span class="line">...</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go-2-流程控制语句：for、if、else、switch 和 defer</title>
      <link href="/2019/08/31/go-2-ControlStatements/"/>
      <url>/2019/08/31/go-2-ControlStatements/</url>
      
        <content type="html"><![CDATA[<h2 id="流程控制语句for-if-else-switch-和-defer"><a class="markdownIt-Anchor" href="#流程控制语句for-if-else-switch-和-defer"></a> 流程控制语句：for、if、else、switch 和 defer</h2><h3 id="for"><a class="markdownIt-Anchor" href="#for"></a> § <a href="https://tour.golang.org/flowcontrol/1" target="_blank" rel="noopener">for</a></h3><p>Go 只有一种循环结构：<code>for</code> 循环。</p><p>基本的 <code>for</code> 循环由三部分组成，它们用分号隔开：</p><ul><li>初始化语句：在第一次迭代前执行</li><li>条件表达式，则前后的<code>;</code>会被去掉，若有：在每次迭代前求值</li><li>后置语句：在每次迭代的结尾执行</li></ul><p>初始化语句通常为一句短变量声明，该变量声明仅在 <code>for</code> 语句的作用域中可见。</p><p>一旦条件表达式的布尔值为 <code>false</code>，循环迭代就会终止。</p><p>注意：和 C、Java、JavaScript 之类的语言不同，Go 的 for 语句后面的三个构成部分外没有小括号 <code>( )</code>， 而大括号 <code>{ }</code> 则是必须的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">sum += i</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(sum)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">45</span><br></pre></td></tr></table></figure><p>初始化语句和后置语句是可选的，例如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">i := <span class="number">0</span></span><br><span class="line">j := <span class="number">100</span></span><br><span class="line">c := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i != j &#123;    <span class="comment">// for ;i != j; &#123; 自动格式化后的结果，go 中的"while"</span></span><br><span class="line">i++</span><br><span class="line">j--</span><br><span class="line">c += <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"i: %v, j: %v, c: %v\n"</span>, i, j, c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i: 50, j: 50, c: 50</span><br></pre></td></tr></table></figure><p>如果只有条件表达式，则前后的 <code>;</code> 会被 <code>go fmt</code> 去掉，成为 go 中的&quot;while&quot;。若有初始化语句、条件表达式、后置语句中的两个，则不会被省略。</p><h4 id="for-也是-go-的-while"><a class="markdownIt-Anchor" href="#for-也是-go-的-while"></a> <a href="https://tour.golang.org/flowcontrol/3" target="_blank" rel="noopener">for 也是 go 的 “while”</a></h4><p>可以去掉分号，在 <code>for</code>  与 <code>{</code> 只写条件语句。<br>C 的 while 在 Go 中也叫做 <code>for</code>。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> s &lt;= <span class="number">1000</span> &#123;</span><br><span class="line">s += s</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1024</span><br></pre></td></tr></table></figure><h4 id="无限循环"><a class="markdownIt-Anchor" href="#无限循环"></a> <a href="https://tour.golang.org/flowcontrol/4" target="_blank" rel="noopener">无限循环</a></h4><p>如果省略循环条件，<code>for</code> 与 <code>{</code> 间什么都不写，该循环就不会结束，因此无限循环可以写得很紧凑。<br>（没有条件的 for 同 for true 一样。）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">i := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">i++</span><br><span class="line">time.Sleep(<span class="number">100</span> * time.Millisecond)  <span class="comment">// 暂停100毫米</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">...     // 省去部分输出</span><br><span class="line">^Csignal: interrupt     // 键入了 control+C，以终止程序</span><br></pre></td></tr></table></figure><h3 id="if"><a class="markdownIt-Anchor" href="#if"></a> § <a href="https://tour.golang.org/flowcontrol/5" target="_blank" rel="noopener">if</a></h3><p>Go 的 if 语句与 for 循环类似，表达式外无需小括号 <code>( )</code> ，而大括号 <code>{ }</code> 则是必须的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sqrt</span><span class="params">(x <span class="keyword">float64</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> x &lt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> sqrt(-x) + <span class="string">"i"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprint(math.Sqrt(x))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(sqrt(<span class="number">2</span>), sqrt(<span class="number">-4</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.4142135623730951 2i</span><br></pre></td></tr></table></figure><h4 id="if-的简短语句"><a class="markdownIt-Anchor" href="#if-的简短语句"></a> <a href="https://tour.golang.org/flowcontrol/6" target="_blank" rel="noopener">if 的简短语句</a></h4><p>同 <code>for</code> 一样， <code>if</code> 语句可以在条件表达式前执行一个简单的语句。</p><p>该语句声明的变量作用域仅在 <code>if</code> 之内。</p><p>（在最后的 <code>return</code> 语句处使用 <code>v</code> 看看。）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">pow</span><span class="params">(x, n, lim <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> v := math.Pow(x, n); v &lt; lim &#123;</span><br><span class="line"><span class="keyword">return</span> v</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> lim</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(</span><br><span class="line">pow(<span class="number">3</span>, <span class="number">2</span>, <span class="number">10</span>),</span><br><span class="line">pow(<span class="number">3</span>, <span class="number">3</span>, <span class="number">20</span>),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9 20</span><br></pre></td></tr></table></figure><h4 id="if-else"><a class="markdownIt-Anchor" href="#if-else"></a> <a href="https://tour.golang.org/flowcontrol/7" target="_blank" rel="noopener">if-else</a></h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">pow</span><span class="params">(x, n, lim <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> v := math.Pow(x, n); v &lt; lim &#123;</span><br><span class="line"><span class="keyword">return</span> v</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%g &gt;= %g\n"</span>, v, lim)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 这里开始就不能使用 v 了</span></span><br><span class="line"><span class="keyword">return</span> lim</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(</span><br><span class="line">pow(<span class="number">3</span>, <span class="number">2</span>, <span class="number">10</span>),</span><br><span class="line">pow(<span class="number">3</span>, <span class="number">3</span>, <span class="number">20</span>),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">27 &gt;= 20</span><br><span class="line">9 20</span><br></pre></td></tr></table></figure><p>在 <code>if</code> 的简短语句中声明的变量同样可以在任何对应的 <code>else</code> 块中使用。</p><p>（在 <code>main</code> 的 <code>fmt.Println</code> 调用开始前，两次对 <code>pow</code> 的调用均已执行并返回其各自的结果。）</p><h3 id="switch"><a class="markdownIt-Anchor" href="#switch"></a> § <a href="https://tour.golang.org/flowcontrol/9" target="_blank" rel="noopener">switch</a></h3><p><code>switch</code> 是编写一连串 <code>if - else</code> 语句的简便方法。它运行第一个值等于条件表达式的 case 语句。</p><p>Go 的 <code>switch</code> 语句类似于 C、C++、Java、JavaScript 和 PHP 中的，不过 Go 只运行选定的 <code>case</code>，而非之后所有的 <code>case</code>。 实际上，Go 自动提供了在这些语言中每个 <code>case</code> 后面所需的 <code>break</code> 语句。 除非以 <code>fallthrough</code> 语句结束，否则分支会自动终止。 Go 的另一点重要的不同在于 <code>switch</code> 的 <code>case</code> 无需为常量，且取值不必为整数。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"runtime"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Print(<span class="string">"Go runs on "</span>)</span><br><span class="line"><span class="keyword">switch</span> os := runtime.GOOS; os &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"darwin"</span>:</span><br><span class="line">fmt.Println(<span class="string">"OS X."</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">"linux"</span>:</span><br><span class="line">fmt.Println(<span class="string">"Linux."</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="comment">// freebsd, openbsd,</span></span><br><span class="line"><span class="comment">// plan9, windows...</span></span><br><span class="line">fmt.Printf(<span class="string">"%s.\n"</span>, os)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Go runs on OS X.</span><br></pre></td></tr></table></figure><h4 id="switch-的求值顺序"><a class="markdownIt-Anchor" href="#switch-的求值顺序"></a> <a href="https://tour.golang.org/flowcontrol/10" target="_blank" rel="noopener">switch 的求值顺序</a></h4><p><code>switch</code> 的 <code>case</code> 语句从上到下顺次执行，直到匹配成功时停止。</p><p>（例如，</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> i &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">case</span> f():</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 i==0 时 f 不会被调用。）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"When's Saturday?"</span>)</span><br><span class="line">today := time.Now().Weekday()</span><br><span class="line"><span class="keyword">switch</span> time.Saturday &#123;</span><br><span class="line"><span class="keyword">case</span> today + <span class="number">0</span>:</span><br><span class="line">fmt.Println(<span class="string">"Today."</span>)</span><br><span class="line"><span class="keyword">case</span> today + <span class="number">1</span>:</span><br><span class="line">fmt.Println(<span class="string">"Tomorrow."</span>)</span><br><span class="line"><span class="keyword">case</span> today + <span class="number">2</span>:</span><br><span class="line">fmt.Println(<span class="string">"In two days."</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"Too far away."</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">When&apos;s Saturday?</span><br><span class="line">Tomorrow.</span><br></pre></td></tr></table></figure><h4 id="没有条件的-switch"><a class="markdownIt-Anchor" href="#没有条件的-switch"></a> <a href="https://tour.golang.org/flowcontrol/11" target="_blank" rel="noopener">没有条件的 switch</a></h4><p>没有条件的 <code>switch</code> 同 <code>switch true</code> 一样。</p><p>这种形式能将一长串 <code>if-then-else</code> 写得更加清晰。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">t := time.Now()</span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> t.Hour() &lt; <span class="number">12</span>:</span><br><span class="line">fmt.Println(<span class="string">"Good morning!"</span>)</span><br><span class="line"><span class="keyword">case</span> t.Hour() &lt; <span class="number">17</span>:</span><br><span class="line">fmt.Println(<span class="string">"Good afternoon."</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"Good evening."</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Good evening.</span><br></pre></td></tr></table></figure><h3 id="defer"><a class="markdownIt-Anchor" href="#defer"></a> § <a href="https://tour.golang.org/flowcontrol/12" target="_blank" rel="noopener">defer</a></h3><p><code>defer</code> 语句会将函数推迟到外层函数返回之后执行。</p><p>推迟调用的函数其参数会立即求值（闭包?🤔️），但直到外层函数返回前该函数都不会被调用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"world"</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"hello"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello</span><br><span class="line">world</span><br></pre></td></tr></table></figure><h4 id="defer-栈"><a class="markdownIt-Anchor" href="#defer-栈"></a> <a href="https://tour.golang.org/flowcontrol/13" target="_blank" rel="noopener">defer 栈</a></h4><p>推迟的函数调用会被压入一个栈中。当外层函数返回时，被推迟的函数会按照后进先出的顺序调用。</p><p>更多关于 <code>defer</code> 语句的信息，<a href="https://blog.golang.org/defer-panic-and-recover" target="_blank" rel="noopener">参考阅读此文</a>。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"counting..."</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"done."</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">counting...</span><br><span class="line">done.</span><br><span class="line">9</span><br><span class="line">8</span><br><span class="line">7</span><br><span class="line">6</span><br><span class="line">5</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go-1-包、变量和函数</title>
      <link href="/2019/08/31/go-1-PackageVarFunc/"/>
      <url>/2019/08/31/go-1-PackageVarFunc/</url>
      
        <content type="html"><![CDATA[<h2 id="包-变量和函数"><a class="markdownIt-Anchor" href="#包-变量和函数"></a> 包、变量和函数</h2><h3 id="包"><a class="markdownIt-Anchor" href="#包"></a> § <a href="https://tour.golang.org/basics/1" target="_blank" rel="noopener">包</a></h3><p>每个 Go 程序都是由包构成的。</p><p>一般程序从 <code>main</code> 包的 <code>main</code> 函数开始运行，除非有 <code>init</code> 函数。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math/rand"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"This is a rand int:"</span>, rand.Intn(<span class="number">10</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is a rand int: 1</span><br></pre></td></tr></table></figure><p>本程序通过导入路径 <code>&quot;fmt&quot;</code> 和 <code>&quot;math/rand&quot;</code> 来使用这两个包。</p><p>按照约定，包名与导入路径的最后一个元素一致。例如，<code>&quot;math/rand&quot;</code> 包中的源码均以 <code>package rand</code> 语句开始。</p><p><em>注意：</em> 若此程序的运行环境是固定的，<code>rand.Intn</code> 将总是会返回相同的数字。</p><p>（要得到不同的数字，需为生成器提供不同的种子数（使用 <a href="https://golang.org/pkg/math/rand/#Seed" target="_blank" rel="noopener"><code>rand.Seed</code></a>）。 常用时间的值作为种子数。）</p><h4 id="导入"><a class="markdownIt-Anchor" href="#导入"></a> <a href="https://tour.golang.org/basics/2" target="_blank" rel="noopener">导入</a></h4><p>正如我们在之前的代码中看见的，我们使用 <code>import</code> 语句来导入包。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"8's sqrt is %g.\n"</span>, math.Sqrt(<span class="number">8</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is a rand int: 1</span><br></pre></td></tr></table></figure><p>此代码用圆括号组合了导入，这是“分组”形式的导入语句。</p><p>当然你也可以编写多个导入语句，例如：</p><p><code>import &quot;fmt&quot;</code><br><code>import &quot;math&quot;</code></p><p>不过使用分组导入语句是更好的形式。</p><h4 id="导出名"><a class="markdownIt-Anchor" href="#导出名"></a> <a href="https://tour.golang.org/basics/3" target="_blank" rel="noopener">导出名</a></h4><p>在 Go 中，如果一个名字以大写字母开头，那么它就是已导出的。例如，<code>Pizza</code> 就是个已导出名，<code>Pi</code> 也同样，它导出自 <code>math</code> 包。</p><p>pizza 和 pi 并未以大写字母开头，所以它们是未导出的。</p><p>在导入一个包时，你只能引用其中已导出的名字。任何“未导出”的名字在该包外均无法访问。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(math.pi)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行代码，可以观察到错误输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># command-line-arguments</span><br><span class="line">./src.go:9:14: cannot refer to unexported name math.pi</span><br><span class="line">./src.go:9:14: undefined: math.pi</span><br></pre></td></tr></table></figure><p>然后将 <code>math.pi</code> 改名为 <code>math.Pi</code> 再试着执行一次，就可以得到预想的输出了：</p><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.141592653589793</span><br></pre></td></tr></table></figure><h3 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> § <a href="https://tour.golang.org/basics/4" target="_blank" rel="noopener">函数</a></h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x <span class="keyword">int</span>, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(add(<span class="number">12</span>, <span class="number">13</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">25</span><br></pre></td></tr></table></figure><p>函数可以没有参数或接受多个参数。</p><p>在本例中，<code>add</code> 接受两个 <code>int</code> 类型的参数。</p><p>注意类型在变量名<strong>之后</strong>。</p><p>（参考 <a href="http://blog.golang.org/gos-declaration-syntax" target="_blank" rel="noopener">这篇关于 Go 语法声明的文章</a> 了解这种类型声明形式出现的原因。）</p><h4 id="函数续"><a class="markdownIt-Anchor" href="#函数续"></a> <a href="https://tour.golang.org/basics/5" target="_blank" rel="noopener">函数（续）</a></h4><p>当连续两个或多个函数的已命名形参类型相同时，除最后一个类型以外，其它都可以省略。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(add(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>在本例中，</p><p><code>x int, y int</code></p><p>被缩写为</p><p><code>x, y int</code></p><h4 id="多值返回"><a class="markdownIt-Anchor" href="#多值返回"></a> <a href="https://tour.golang.org/basics/6" target="_blank" rel="noopener">多值返回</a></h4><p>函数可以返回<strong>任意数量</strong>的返回值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">swap</span><span class="params">(x, y <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> y, x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a, b := swap(<span class="string">"Hello"</span>, <span class="string">"World"</span>)</span><br><span class="line">fmt.Println(a, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">World Hello</span><br></pre></td></tr></table></figure><p>swap 函数返回了两个字符串。</p><h4 id="命名返回值"><a class="markdownIt-Anchor" href="#命名返回值"></a> <a href="https://tour.golang.org/basics/7" target="_blank" rel="noopener">命名返回值</a></h4><p>Go 的返回值可被命名，它们会被视作定义在函数顶部的变量。</p><p>返回值的名称应当具有一定的意义，它可以作为文档使用。</p><p>没有参数的 <code>return</code> 语句返回已命名的返回值。也就是 直接 返回。</p><p>直接返回语句应当仅用在下面这样的短函数中。在长的函数中它们会影响代码的可读性。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">split</span><span class="params">(sum <span class="keyword">int</span>)</span> <span class="params">(x, y <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">x = sum * <span class="number">4</span> / <span class="number">9</span></span><br><span class="line">y = sum - x</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(split(<span class="number">17</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 10</span><br></pre></td></tr></table></figure><h3 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> § <a href="https://tour.golang.org/basics/8" target="_blank" rel="noopener">变量</a></h3><p><code>var</code> 语句用于声明一个变量列表，跟函数的参数列表一样，类型在最后。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i, j <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> y, n <span class="keyword">bool</span></span><br><span class="line">fmt.Println(i, j, y, n)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 false false</span><br></pre></td></tr></table></figure><p>就像在这个例子中看到的一样，<code>var</code> 语句可以出现在包或函数级别。</p><h4 id="变量的初始化"><a class="markdownIt-Anchor" href="#变量的初始化"></a> <a href="https://tour.golang.org/basics/9" target="_blank" rel="noopener">变量的初始化</a></h4><p>变量声明可以包含初始值，每个变量对应一个。</p><p>如果初始化值已存在，则可以省略类型；变量会从初始值中获得类型。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i, j <span class="keyword">int</span> = <span class="number">1</span>, <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> y, n, a, b = <span class="literal">true</span>, <span class="literal">false</span>, <span class="string">"Hello"</span>, <span class="number">3.14</span></span><br><span class="line">fmt.Println(i, j, y, n, a, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 true false Hello 3.14</span><br></pre></td></tr></table></figure><h4 id="短变量声明"><a class="markdownIt-Anchor" href="#短变量声明"></a> <a href="https://tour.golang.org/basics/10" target="_blank" rel="noopener">短变量声明</a></h4><p>在函数中，简洁赋值语句 <code>:=</code> 可在类型明确的地方代替 <code>var</code> 声明。</p><p>函数外的每个语句都必须以关键字开始（var, func 等等），因此 <code>:=</code> 结构不能在函数外使用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">i := <span class="number">100</span></span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">100</span><br></pre></td></tr></table></figure><h4 id="基本类型"><a class="markdownIt-Anchor" href="#基本类型"></a> <a href="https://tour.golang.org/basics/11" target="_blank" rel="noopener">基本类型</a></h4><p>Go 的基本类型有:</p><table><thead><tr><th>类型</th><th>描述</th><th>说明</th><th>衍生</th></tr></thead><tbody><tr><td><code>bool</code></td><td>布尔型</td><td><code>true</code> or <code>false</code></td><td></td></tr><tr><td><code>string</code></td><td>字符串</td><td>一串固定长度的字符连接起来的字符序列，使用 UTF-8 编码标识 Unicode 文本。</td><td></td></tr><tr><td><code>int</code></td><td>整型</td><td>32位机上为32位，64位机上是64位</td><td>指定大小的整型: int8  <code>int16</code>  <code>int32</code>  <code>int64</code></td></tr><tr><td><code>uint</code></td><td>无符号整型</td><td></td><td><code>uint8</code>、<code>uint16</code>、<code>uint32</code>、<code>uint64</code>、<code>uintptr</code></td></tr><tr><td><code>float32</code>、<code>float64</code></td><td>浮点型</td><td></td><td></td></tr><tr><td><code>complex64</code>、<code>complex128</code></td><td>复数</td><td>复数的字面值常量写作<code>1+2i</code></td><td></td></tr><tr><td><code>byte</code></td><td></td><td>uint8 的别名</td><td></td></tr><tr><td><code>rune</code></td><td>表示一个 Unicode 码点</td><td>int32 的别名</td><td></td></tr></tbody></table><p>下例展示了几种类型的变量。 同导入语句一样，变量声明也可以“分组”成一个语法块：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math/cmplx"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">ToBe   <span class="keyword">bool</span>       = <span class="literal">false</span></span><br><span class="line">MaxInt <span class="keyword">uint64</span>     = <span class="number">1</span>&lt;&lt;<span class="number">64</span> - <span class="number">1</span></span><br><span class="line">z      <span class="keyword">complex128</span> = cmplx.Sqrt(<span class="number">-5</span> + <span class="number">12i</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Type: %T\t\tValue: %v\n"</span>, ToBe, ToBe)</span><br><span class="line">fmt.Printf(<span class="string">"Type: %T\t\tValue: %v\n"</span>, MaxInt, MaxInt)</span><br><span class="line">fmt.Printf(<span class="string">"Type: %T\tValus: %v\n"</span>, z, z)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Type: boolValue: false</span><br><span class="line">Type: uint64Value: 18446744073709551615</span><br><span class="line">Type: complex128Valus: (2+3i)</span><br></pre></td></tr></table></figure><p><code>int</code>, <code>uint</code> 和 <code>uintptr</code> 在 32 位系统上通常为 32 位宽，在 64 位系统上则为 64 位宽。 当你需要一个整数值时应使用 <code>int</code> 类型，除非你有特殊的理由使用固定大小或无符号的整数类型。</p><h4 id="零值"><a class="markdownIt-Anchor" href="#零值"></a> <a href="https://tour.golang.org/basics/12" target="_blank" rel="noopener">零值</a></h4><p>没有明确初始值的变量声明会被赋予它们的 <em>零值</em>。</p><p>零值是：</p><p>数值类型为 <code>0</code>，<br>布尔类型为 <code>false</code>，<br>字符串为 <code>&quot;&quot;</code>（空字符串）。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span></span><br><span class="line"><span class="keyword">var</span> f <span class="keyword">float64</span></span><br><span class="line"><span class="keyword">var</span> c <span class="keyword">complex128</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">var</span> s <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"%v %v %v %v %q\n"</span>, i, f, c, b, s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 (0+0i) false &quot;&quot;</span><br></pre></td></tr></table></figure><h4 id="类型转换"><a class="markdownIt-Anchor" href="#类型转换"></a> <a href="https://tour.golang.org/basics/13" target="_blank" rel="noopener">类型转换</a></h4><p>表达式 <code>T(v)</code> 将值 <code>v</code> 转换为类型 <code>T</code>。</p><p>一些关于数值的转换：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span> = <span class="number">42</span></span><br><span class="line"><span class="keyword">var</span> f <span class="keyword">float64</span> = <span class="keyword">float64</span>(i)</span><br><span class="line"><span class="keyword">var</span> u <span class="keyword">uint</span> = <span class="keyword">uint</span>(f)</span><br></pre></td></tr></table></figure><p>或者，更加简单的形式(在函数中)：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i := <span class="number">42</span></span><br><span class="line">f := <span class="keyword">float64</span>(i)</span><br><span class="line">u := <span class="keyword">uint</span>(f)</span><br></pre></td></tr></table></figure><p>与 C 不同的是，Go 在不同类型的项之间赋值时需要显式转换，否则会报错。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> x, y <span class="keyword">int</span> = <span class="number">3</span>, <span class="number">4</span></span><br><span class="line"><span class="keyword">var</span> f <span class="keyword">float64</span> = math.Sqrt(<span class="keyword">float64</span>(x*x + y*y))</span><br><span class="line"><span class="keyword">var</span> z <span class="keyword">uint</span> = <span class="keyword">uint</span>(f)</span><br><span class="line">fmt.Println(x, y, z)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4 5 5</span><br></pre></td></tr></table></figure><h4 id="类型推导"><a class="markdownIt-Anchor" href="#类型推导"></a> <a href="https://tour.golang.org/basics/14" target="_blank" rel="noopener">类型推导</a></h4><p>在声明一个变量而不指定其类型时（即使用不带类型的 <code>:=</code> 语法或 <code>var =</code> 表达式语法），变量的类型由右值推导得出。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">i := <span class="number">1</span></span><br><span class="line">j := <span class="number">1.1</span></span><br><span class="line">k := <span class="number">1</span> + <span class="number">2i</span></span><br><span class="line">fmt.Printf(<span class="string">"%T\t%T\t%T\n%v\t%v\t%v\n"</span>, i, j, k, i, j, k)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">intfloat64complex128</span><br><span class="line">11.1(1+2i)</span><br></pre></td></tr></table></figure><p>当右值声明了类型时，新变量的类型与其相同：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span></span><br><span class="line">j := i <span class="comment">// j 也是一个 int</span></span><br></pre></td></tr></table></figure><p>不过当右边包含未指明类型的数值常量时，新变量的类型就可能是 <code>int</code>, <code>float64</code> 或 <code>complex128</code> 了，这取决于常量的精度：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i := <span class="number">42</span>           <span class="comment">// int</span></span><br><span class="line">f := <span class="number">3.142</span>        <span class="comment">// float64</span></span><br><span class="line">g := <span class="number">0.867</span> + <span class="number">0.5i</span> <span class="comment">// complex128</span></span><br></pre></td></tr></table></figure><h4 id="常量"><a class="markdownIt-Anchor" href="#常量"></a> <a href="https://tour.golang.org/basics/15" target="_blank" rel="noopener">常量</a></h4><p>常量的声明与变量类似，只不过是使用 <strong><code>const</code></strong> 关键字替换 <code>var</code>。</p><p>常量可以是字符、字符串、布尔值或数值。</p><p>常量不能用 <code>:=</code> 语法声明。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> PI = <span class="number">3.14</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">const</span> NAME = <span class="string">"World"</span></span><br><span class="line">fmt.Println(<span class="string">"Hello,"</span>, NAME)</span><br><span class="line">fmt.Println(PI)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello, World</span><br><span class="line">3.14</span><br></pre></td></tr></table></figure><h4 id="数值常量"><a class="markdownIt-Anchor" href="#数值常量"></a> <a href="https://tour.golang.org/basics/16" target="_blank" rel="noopener">数值常量</a></h4><p>数值常量是高精度的<strong>值</strong>。</p><p>一个未指定类型的常量由上下文来决定其类型。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line"><span class="comment">// 将 1 左移 100 位来创建一个非常大的数字</span></span><br><span class="line"><span class="comment">// 即这个数的二进制是 1 后面跟着 100 个 0</span></span><br><span class="line">Big = <span class="number">1</span> &lt;&lt; <span class="number">100</span></span><br><span class="line"><span class="comment">// 再往右移 99 位，即 Small = 1 &lt;&lt; 1，或者说 Small = 2</span></span><br><span class="line">Small = Big &gt;&gt; <span class="number">99</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">needInt</span><span class="params">(x <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x*<span class="number">10</span> + <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">needFloat</span><span class="params">(x <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x * <span class="number">0.1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(needInt(Small))</span><br><span class="line">fmt.Println(needFloat(Small))</span><br><span class="line">fmt.Println(needFloat(Big))</span><br><span class="line"><span class="comment">// fmt.Println(needInt(Big))</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">21</span><br><span class="line">0.2</span><br><span class="line">1.2676506002282295e+29</span><br></pre></td></tr></table></figure><p>尝试一下输出 <code>needInt(Big)</code> 将会报错（溢出）。</p><p>（<code>int</code> 类型最大可以存储一个 64 位的整数，有时会更小。）</p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go-0-Go语言基础</title>
      <link href="/2019/08/31/go-0-begining/"/>
      <url>/2019/08/31/go-0-begining/</url>
      
        <content type="html"><![CDATA[<h1 id="go-语言基础"><a class="markdownIt-Anchor" href="#go-语言基础"></a> Go 语言基础</h1><h2 id="go-语言简介无用的废话-_"><a class="markdownIt-Anchor" href="#go-语言简介无用的废话-_"></a> Go 语言简介（无用的废话 =_=）</h2><blockquote><p>Go 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易。</p></blockquote><p>我使用 Go 的几个原因：</p><ul><li>快速</li><li>简洁</li><li>严格规范</li><li>方便的网络编程</li><li>方便的多线程</li><li>完备的文档</li><li>开源</li><li><s>大多数朋友都不会呀</s></li></ul><p>使用 Go 已经有一段时间了，它给我的几个感觉就是：</p><ul><li>要求严格（不能声明不使用的变量，变量类型必须显示转化等）</li><li>超方便的多线程！</li><li>高效（时间、空间消耗都不大哦）</li></ul><p>我觉得，Go 就像是互联网时代的 C，由于个人对 C 十分热爱，所以对 Go 的印象也很好。</p><h2 id="编译-运行go程序"><a class="markdownIt-Anchor" href="#编译-运行go程序"></a> 编译、运行Go程序</h2><ol><li><strong>创建目录</strong>：<br>新建一个目录，这个目录的名称应与需要建立的Go项目名称相同（最后生成的可执行文件将以这个“项目根目录”为文件名）；</li><li><strong>创建源文件</strong>：<br>进入该目录，创建名为 <code>*.go</code> 的Go源文件，并写入代码；</li><li><strong>格式化代码</strong>：<br>工作目录不变，执行命令 <code>go fmt</code>，可以自动格式化代码；</li><li><strong>编译运行</strong>：<br><code>go run &lt;src.go&gt;</code>命令会将编译参数中的命令源码文件，并把编译后的可执行文件存放到临时工作目录中，然后运行该临时可执行文件；</li><li><strong>编译</strong>：<br>工作目录不变，执行命令：<code>go bulid</code>，若编译通过，目录中将出现一个与目录同名的可执行文件；</li><li><strong>运行</strong>：<br>执行生成的可执行文件即可。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir test_go</span><br><span class="line">$ cd test_go/</span><br><span class="line">$ vim test.go</span><br><span class="line">$ go run test.go</span><br><span class="line">Hello, world!</span><br><span class="line">$ go build</span><br><span class="line">$ ls</span><br><span class="line">test.go test_go</span><br><span class="line">$ ./test_go </span><br><span class="line">Hello, world!</span><br></pre></td></tr></table></figure><p>这里的 test.go 中我们写了一个经典的 <code>Hello World</code> 程序，它的代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Hello, world!\n"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吴恩达机器学习1——单变量线性回归</title>
      <link href="/2019/08/18/AndrewNg-MachineLearning-1-LinearRegressionWithOneVariable/"/>
      <url>/2019/08/18/AndrewNg-MachineLearning-1-LinearRegressionWithOneVariable/</url>
      
        <content type="html"><![CDATA[<h1 id="notes-of-andrew-ngs-machine-learning-1-linear-regression-with-one-variable"><a class="markdownIt-Anchor" href="#notes-of-andrew-ngs-machine-learning-1-linear-regression-with-one-variable"></a> Notes of Andrew Ng’s Machine Learning —— (1) Linear Regression with One Variable</h1><h2 id="model-representation"><a class="markdownIt-Anchor" href="#model-representation"></a> Model Representation</h2><h3 id="notation"><a class="markdownIt-Anchor" href="#notation"></a> Notation</h3><ul><li><a href="http://clownote.github.io/about/index.html#%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></a> denote the <em>input</em> variables, called <strong>input features</strong></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">y^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> denote the <em>output</em> variables, called <strong>target variable</strong></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x^{(i)}, y^{(i)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is called a <strong>training example</strong></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">;</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">(x^{(i)}, y^{(i)}); i=1, ..., m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span></span></span></span> —— is called a <strong>training set</strong></li></ul><p>⚠️【Note】The superscript “<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>” in the notations is simply an <strong>index</strong> into the train set.</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span> denote the <strong>space</strong> of <em>input values</em></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span> denote the <strong>space</strong> of <em>output values</em></li></ul><p>In many examples, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>=</mo><mi>Y</mi><mo>=</mo><mi mathvariant="double-struck">R</mi></mrow><annotation encoding="application/x-tex">X = Y =\R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">R</span></span></span></span></span>.</p><h3 id="a-more-formal-description-of-supervised-learning"><a class="markdownIt-Anchor" href="#a-more-formal-description-of-supervised-learning"></a> A more formal description of supervised learning</h3><p>Given a training set, to learn a <strong>function</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>:</mo><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">h: X \to Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span> so that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> is a “good” predictor for the corresponding value of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>.</p><p>For historical reasons, this function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span> is called a <strong><code>hypothesis</code></strong>.</p><p>Pictorially:</p><p><img src="http://ww4.sinaimg.cn/large/006tNc79gy1g652fmlvx6j30az078glq.jpg" alt="page1image20344816.png"></p><p>With our new notations, the categories of supervised learning problems can be this:</p><ul><li><code>regression problem</code>: when the <strong>target variable</strong> is continuous.</li><li><code>classification problem</code>: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> can take on only a small number of discrete values</li></ul><h3 id="hypothesis-model-regression"><a class="markdownIt-Anchor" href="#hypothesis-model-regression"></a> Hypothesis &amp; Model Regression</h3><p>To represent the hypothesis <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span>, for example, if we want to fit a data set like this:</p><p><img src="http://ww4.sinaimg.cn/large/006tNc79gy1g65bp99j97j307o05gq2z.jpg" alt="image-20190819214710193"></p><p>Simply, we may make the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>θ</mi><mn>0</mn></msub><mo>+</mo><msub><mi>θ</mi><mn>1</mn></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">h_\theta(x)=\theta_0+\theta_1x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span>. This is means that we are going to predict that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> is a linear function of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>.</p><p>Plotting this in the picture, it will be something like this:</p><p><img src="http://ww3.sinaimg.cn/large/006tNc79gy1g65byqwhjxj307o05gwee.jpg" alt="006tNc79gy1g65bp99j97j307o05gq2z"></p><p>And what this function is doing is predicting that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> is some straight line function of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>.</p><p>In this case, this <strong>model</strong> is called <strong><code>linear regression with one variable</code></strong>(or <code>Univariate linear regression</code>).</p><p>P.S. we can also fit a more complicated (perhaps non-linear) functions, but this linear case is the simplest.</p><h2 id="cost-function"><a class="markdownIt-Anchor" href="#cost-function"></a> Cost Function</h2><p>Well, now we have got this:</p><p><img src="http://ww4.sinaimg.cn/large/006tNc79gy1g65cm1aucyj30js0a60v0.jpg" alt="image-20190819221840291"></p><p>To get a “good” hypothesis function, we need to choose <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\theta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> so that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_\theta(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> is close to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> for our training exmaples <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>.  A cost function is of great help with this goal.</p><h3 id="cost-function-2"><a class="markdownIt-Anchor" href="#cost-function-2"></a> Cost function</h3><p>A <strong><code>cost function</code></strong> can help us to measure the accuracy of our hypothesis function.</p><p>This takes an <strong>average difference</strong> of all the results of the hypothesis with inputs from x’s and the actual output y’s:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">[</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">J(\theta_0, \theta_1) = \frac{1}{2m}\sum^m_{i=1}[h_\theta(x^{(i)})-y^{(i)}]^2 \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>The function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> is our <em>cost function</em> exactly. Take a look at it:</p><ul><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">h_\theta(x^{(i)})-y^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> shows the difference between the predicted value and the actual value.</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\frac{1}{m}\sum^{m}_{i=1}...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span> offers the mean of the squares of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">h_\theta(x^{(i)})-y^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>The mean is halved (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>) as a convenience for the computati::on of the <strong>gradient descent</strong>, as the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>f</mi><mn>2</mn></msup><mo>=</mo><mi>f</mi></mrow><annotation encoding="application/x-tex">\frac{1}{2}f^2 = f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span>.</p></li></ul><p>P.S. This function is otherwise called the “<em>Squared error function</em>”, or “<em>Mean squared error</em>”.</p><h3 id="goal"><a class="markdownIt-Anchor" href="#goal"></a> Goal</h3><p>To make <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_\theta(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> closing to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>, we are just expected to minimize our cost function by adjusting the value of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\theta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</p><p>We describe this <strong>goal</strong> like this:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><munder><mo><mi>m</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi></mo><mrow><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub></mrow></munder><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\mathop{minimize}\limits_{\theta_0, \theta_1} J(\theta_0, \theta_1) \tag{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.638216em;vertical-align:-0.8882159999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.65952em;"><span style="top:-2.3478920000000003em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathdefault">minimi</span><span class="mord mathdefault">ze</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882159999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.638216em;vertical-align:-0.8882159999999999em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>Or, more directly:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><munder><mo><mi>m</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi></mo><mrow><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub></mrow></munder><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">[</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\mathop{minimize}\limits_{\theta_0, \theta_1}\frac{1}{2m}\sum^m_{i=1}[h_\theta(x^{(i)})-y^{(i)}]^2\tag{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.65952em;"><span style="top:-2.3478920000000003em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathdefault">minimi</span><span class="mord mathdefault">ze</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882159999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p><p>And if we are working with a linear regression with one variable, the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>θ</mi><mn>0</mn></msub><mo>+</mo><msub><mi>θ</mi><mn>1</mn></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">h_\theta(x)=\theta_0+\theta_1x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span>.</p><p>⚠️【Note】Hypothesis Function &amp; Cost Function</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_\theta(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> for fixed <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\theta_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, is a function of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>.</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\theta_0, \theta_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is a function of the parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\theta_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> .</li></ul><h2 id="cost-function-intuition-i"><a class="markdownIt-Anchor" href="#cost-function-intuition-i"></a> Cost Function - Intuition I</h2><p>Let’s draw some pictures for better understanding of what the values of the cost function.</p><p>To getting start, we are going to work with a simplified hypothesis function:</p><p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1g65ddr26d9j30ja0a4778.jpg" alt="屏幕快照 2019-08-19 22.44.10"></p><p>Our training data set is scattered on the x-y plane. We are trying to make a straight line (defined by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_\theta(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>) which passes through these scattered data points.</p><p>Our objective is to get the best possible line. The best possible line will be such:</p><blockquote><p>So that the <em>average squared vertical distances of the scattered points from the line</em> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mo stretchy="false">[</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\frac{1}{m}\sum^m_{i=1}[h_\theta(x^{(i)})-y^{(i)}]^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2329999999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>) will be the least.</p></blockquote><p>Ideally, the line should pass through all the points of our training data set. In such a case, the value of cost function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\theta_0, \theta_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> will be <code>0</code>.</p><p>E.g. A ideal situation where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">J=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>:</p><p>Let this be our training set: Only three points <code>(1, 1)</code>, <code>(2, 2)</code> &amp; <code>(3, 3)</code></p><p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1g65dnu9hj7j309606iwen.jpg" alt="屏幕快照 2019-08-19 22.54.07"></p><p>Now, we try setting <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> to different values: <code>-0.5</code>,  <code>0</code>, <code>0.5</code>, <code>1</code>, <code>1.5</code>…</p><p>When <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\theta_1=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>, we get a slope of 1 which goes through every single data point in our model. Conversely, when <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub><mo>=</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">\theta_1=0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>, we see the vertical distance from our fit to the data points increase:</p><p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1g65ejfyhsbj30rs08cmzd.jpg" alt="新建项目"></p><p>By doing this, we got a series of graph of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_\theta(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> in x-y plane as well as yield to the following <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>-<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\theta_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> graph:</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79ly1g65dzrkce0j30b209ydh6.jpg" alt="image-20190819230628708"></p><p>Thus as a goal, we should try to <strong>minimize the cost function</strong>. In this case, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\theta_1=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> is our global minimum.</p><h2 id="cost-function-intuition-ii"><a class="markdownIt-Anchor" href="#cost-function-intuition-ii"></a> Cost Function - Intuition II</h2><p>Unlike before, this time, we won’t continue with the simplified hypothesis, we are going to keep both of parameters <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\theta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. So the hypithesis function will be <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>θ</mi><mn>0</mn></msub><mo>+</mo><msub><mi>θ</mi><mn>1</mn></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">h_\theta(x)=\theta_0+\theta_1x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span>.</p><p>Here’s our problem formulation as usual:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Hypothesis: </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>θ</mi><mn>0</mn></msub><mo>+</mo><msub><mi>θ</mi><mn>1</mn></msub><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Parameters: </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Cost Function: </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mo stretchy="false">[</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Goal: </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><munder><mo><mi>m</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi></mo><mrow><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub></mrow></munder><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{ll} \textrm{Hypothesis: } &amp; h_\theta(x)=\theta_0+\theta_1x\\\\ \textrm{Parameters: } &amp; \theta_0, \theta_1\\\\ \textrm{Cost Function: } &amp; J(\theta_0, \theta_1) = \frac{1}{2m}\sum^m_{i=1}[h_\theta(x^{(i)})-y^{(i)}]^2\\\\ \textrm{Goal: } &amp; \mathop{minimize}\limits_{\theta_0, \theta_1} J(\theta_0, \theta_1)\\\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.976216em;vertical-align:-4.238108em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.738108em;"><span style="top:-6.8981080000000015em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textrm">Hypothesis: </span></span></span></span><span style="top:-5.698108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-4.498108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textrm">Parameters: </span></span></span></span><span style="top:-3.2981079999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.0501079999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textrm">Cost Function: </span></span></span></span><span style="top:-0.8501079999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:0.34989200000000054em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textrm">Goal: </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.238108em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.738108em;"><span style="top:-6.8981080000000015em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span><span style="top:-4.498108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.0501079999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:0.34989200000000054em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.65952em;"><span style="top:-2.3478920000000003em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathdefault">minimi</span><span class="mord mathdefault">ze</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882159999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.238108em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>Same as last time, we want to unserstand the hypothesis <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span> and the cost function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi></mrow><annotation encoding="application/x-tex">J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span></span> via a series of graph. However, we’d like to use a <em><code>contour plot</code></em> to describe our <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\theta_0, \theta_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</p><blockquote><p>A <em>contour plot</em> is a graph that contains many contour lines.</p><p>A <em>contour line</em> of a two variable function has a constant value at all points of the same line.</p></blockquote><p>An example:</p><p><img src="http://ww3.sinaimg.cn/large/006y8mN6gy1g673ule5evj30p40cqafx.jpg" alt="屏幕快照 2019-08-21 09.29.48"></p><p>Taking any color and going along the ‘circle’, one would expect to get the same value of the cost function.</p><p>To touch our optimization objective, we can try to setting the parameters <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\theta_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> to different values.</p><p>When <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>0</mn></msub><mo>=</mo><mn>360</mn></mrow><annotation encoding="application/x-tex">\theta_0 = 360</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">6</span><span class="mord">0</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\theta_1 = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>, the value of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\theta_0, \theta_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> in the contour plot <strong>gets closer to the center thus reducing the cost function error</strong>. Now we get a result in a better fit of the data:</p><p><img src="http://ww3.sinaimg.cn/large/006y8mN6gy1g673vbnti4j30o20bggqp.jpg" alt="屏幕快照 2019-08-21 09.29.58"></p><p>Minimizing the cost function as much as possible and consequently, the result of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\theta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> tend to be around 0.12 and 250 respectively. Plotting those values on our graph to the right seems to put our point in the center of the inner most ‘circle’.</p><p>Obviously, we dislike to write a software to just plot out a contour plot and then try to manually read off the numbers to reach our goal. We want <strong>an efficient algorithm for automatically finding the value of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\theta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> that minimizes the cost function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi></mrow><annotation encoding="application/x-tex">J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span></span></strong>. Actually, the <em>gradient descent</em> algorithm that we will talk about works great on this question.</p><h2 id="gradient-descent"><a class="markdownIt-Anchor" href="#gradient-descent"></a> Gradient Descent</h2><p>There is a algorithm called <strong>gradient descent</strong> for <strong>minimizing the cost function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi></mrow><annotation encoding="application/x-tex">J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span></span></strong>. And we can use it not only in linear regression as it’s actually used all over the place in machine learning.</p><p>Let’s talk about gradient descent for minimizing some arbitrary function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi></mrow><annotation encoding="application/x-tex">J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span></span>. So here’s the problem setup:</p><p><img src="http://ww2.sinaimg.cn/large/006y8mN6ly1g67fcs8k0mj30gs09gjsz.jpg" alt="image-20190821172439919"></p><p>We put <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\theta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> on the <code>x</code> axis and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> on the <code>y</code> axis, with the <strong>cost function</strong> on the vertical <code>z</code> axis. The points on our graph will be the result of the cost function using our hypothesis with those specific theta parameters. The graph below depicts such a setup:</p><p><img src="http://ww2.sinaimg.cn/large/006y8mN6gy1g67l1ajh02j30no0con68.jpg" alt="image-20190821204112216"></p><p>We will know that we have succeeded when our cost function is at the very bottom of the pits in our graph, i.e. when its value is the minimum. The red arrows show the minimum points in the graph.</p><p>Image that we are physically standing at a point on a hill, in gradient descent, what we’re going to do is to spin 360 degrees around and just look all around us, and ask, “If I were to take a little step in some direction, and I want to go down the hill as quickly as possible, what direction should I take?” then you take a step in that direction. Repeat doing this until you converge to a local minimum. Like the black line in the picture above shows.</p><p>Notice that if we choose different points to grandient descent, we may reach different local optimums.</p><p>Mathematically, this is the definition of the gradient descent algorithm:</p><blockquote><p><strong>Gradient Descent Algorithm</strong></p><p>repeat until convergence {</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace width="2em"></mspace><msub><mi>θ</mi><mi>j</mi></msub><mo>:</mo><mo>=</mo><msub><mi>θ</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mspace width="2em"></mspace><mtext>(for </mtext><mi>j</mi><mo>=</mo><mn>0</mn><mtext> and </mtext><mi>j</mi><mo>=</mo><mn>1</mn><mtext>)</mtext></mrow><annotation encoding="application/x-tex">\qquad\theta_j := \theta_j - \alpha\frac{\partial}{\partial\theta_j}J(\theta_0, \theta_1)\qquad \textrm{(for } j=0 \textrm{ and } j=1 \textrm{)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.4224279999999998em;vertical-align:-0.5423199999999999em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:2em;"></span><span class="mord text"><span class="mord textrm">(for </span></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord text"><span class="mord textrm"> and </span></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord text"><span class="mord textrm">)</span></span></span></span></span></p><p>}</p></blockquote><p>The <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> is a number that is called the <strong><code>learning rate</code></strong>. It basically controls how big a step we take downhill with gradient descent.</p><p>At each iteration <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>, one should simultaneously update the parameters θ1,θ2,…,θn. Updating a specific parameter prior to calculating another one on the <code>j(th)</code> iteration would yield to a wrong implementation:</p><p><img src="http://ww3.sinaimg.cn/large/006y8mN6ly1g67magihpyj30wo0hu7iy.jpg" alt="屏幕快照 2019-08-21 21.24.15"></p><h2 id="gradient-descent-intuition"><a class="markdownIt-Anchor" href="#gradient-descent-intuition"></a> Gradient Descent Intuition</h2><p>Let’s explore the scenario where we used **one parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ** and plotted its cost function to implement a gradient descent. Our formula for a single parameter was : Repeat until convergence:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub><mo>:</mo><mo>=</mo><mi>α</mi><mfrac><mi>d</mi><mrow><mi>d</mi><msub><mi>θ</mi><mn>1</mn></msub></mrow></mfrac><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta_1:=\alpha\frac{d}{d\theta_1}J(\theta_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>Regardless of the slope’s sign for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><msub><mi>θ</mi><mn>1</mn></msub></mrow></mfrac><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{d}{d\theta_1}J(\theta_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> eventually converges to its minimum value.</p><p>The following graph shows that when the slope is negative, the value of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> increases and when it is positive, the value of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> decreases:</p><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6de48b49qj30i50af0ui.jpg" alt="image-20190826211520863"></p><p>On a side note, we should adjust our parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> to ensure that the gradient descent algorithm converges in a reasonable time. Failure to converge or too much time to obtain the minimum value imply that our step size is wrong.</p><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6de6eemuhj30im0astb9.jpg" alt="image-20190826211727240"></p><p>How does gradient descent converge with a fixed step size <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>?<br>The intuition behind the convergence is that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>d</mi><mrow><mi>d</mi><msub><mi>θ</mi><mn>1</mn></msub></mrow></mfrac><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{d}{d\theta_1}J(\theta_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> approaches 0 as we approach the bottom of our convex function. At the minimum, the derivative will always be 0 and thus we get:</p><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6de8nmhaoj30ia0a4why.jpg" alt="image-20190826211936126"></p><h2 id="gradient-descent-for-linear-regression"><a class="markdownIt-Anchor" href="#gradient-descent-for-linear-regression"></a> Gradient Descent for Linear Regression</h2><p>Now, we have learnt the gradient descent, the linear regression model and the squared error cost function as well. This time, we are going to put together gradient descent with our cost function that will give us an algorithm for linear regression for fitting a straight line to our data.</p><p>This is what we worked out:</p><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6dedxiq58j30ej052aay.jpg" alt="image-20190826212442071"></p><p>We are going to apply gradient descent algorithm to minimize our squared error cost function.</p><p>The key term is the derivative term:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mo stretchy="false">[</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mo stretchy="false">[</mo><msub><mi>θ</mi><mn>0</mn></msub><mo>+</mo><msub><mi>θ</mi><mn>1</mn></msub><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{ll}&amp;\frac{\partial}{\partial\theta_j}J(\theta_0, \theta_1) &amp;=&amp; \frac{\partial}{\partial\theta_j}\frac{1}{2m}\sum^m_{i=1}[h_\theta(x^{(i)})-y^{(i)}]^2\\&amp; &amp;=&amp; \frac{\partial}{\partial\theta_j}\frac{1}{2m}\sum^m_{i=1}[\theta_0+\theta_1x^{(i)}-y^{(i)}]^2\\\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.86064em;vertical-align:-1.18032em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.68032em;"><span style="top:-3.68032em;"><span class="pstrut" style="height:2.888em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.888em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.18032em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.68032em;"><span style="top:-3.79232em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.362em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.18032em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.68032em;"><span style="top:-3.79232em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-2.362em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.18032em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.68032em;"><span style="top:-3.79232em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.362em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.18032em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>j</mi><mo>=</mo><mn>0</mn><mo>:</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mn>0</mn></msub></mrow></mfrac><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mo stretchy="false">[</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo>:</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mn>1</mn></msub></mrow></mfrac><mi>J</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mo stretchy="false">[</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">]</mo><mo>⋅</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{ll}&amp; j=0:&amp; \frac{\partial}{\partial\theta_0}J(\theta_0,\theta_1)=\frac{1}{m}\sum^m_{i=1}[h_\theta(x^{(i)})-y^{(i)}]\\&amp; j=1:&amp; \frac{\partial}{\partial\theta_1}J(\theta_0,\theta_1)=\frac{1}{m}\sum^m_{i=1}[h_\theta(x^{(i)})-y^{(i)}] \cdot x^{(i)}\\\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.6662em;vertical-align:-1.0831em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5831em;"><span style="top:-3.5831em;"><span class="pstrut" style="height:2.888em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.888em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0831em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5831em;"><span style="top:-3.6951em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span><span style="top:-2.362em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0831em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5831em;"><span style="top:-3.6951em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span><span style="top:-2.362em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0831em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>Plug them back into our gradient descent algorithm:</p><blockquote><p>repeat until convergence {</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace width="2em"></mspace><msub><mi>θ</mi><mn>0</mn></msub><mo>:</mo><mo>=</mo><msub><mi>θ</mi><mn>0</mn></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mo stretchy="false">[</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\qquad\theta_0 := \theta_0 - \alpha\frac{1}{m}\sum^m_{i=1}[h_\theta(x^{(i)})-y^{(i)}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2329999999999999em;vertical-align:-0.345em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace width="2em"></mspace><msub><mi>θ</mi><mn>1</mn></msub><mo>:</mo><mo>=</mo><msub><mi>θ</mi><mn>1</mn></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mo stretchy="false">[</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">]</mo><mo>⋅</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\qquad\theta_1 := \theta_1 - \alpha\frac{1}{m}\sum^m_{i=1}[h_\theta(x^{(i)})-y^{(i)}] \cdot x^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2329999999999999em;vertical-align:-0.345em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></p><p>}</p></blockquote><p>Notice: update <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\theta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\theta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> simultaneously.</p><p>The point of all this is that if we start with a guess for our hypothesis and then repeatedly apply these gradient descent equations, our hypothesis will become more and more accurate. So, this is simply gradient descent on the original cost function J.</p><p>This method looks at every example in the entire training set on every step, and is called <strong>batch gradient descent</strong>.</p><p>Note that, while gradient descent can be susceptible to local minima in general, the optimization problem we have posed here for linear regression has only one global, and no other local,optima; thus gradient descent always converges (assuming the learning rate α is not too large) to the global minimum. Indeed, J is a convex quadratic function. Here is an example of gradient descent as it is run to minimize a quadratic function.</p><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6dhmaf0chj308q06qgml.jpg" alt="image-20190826231632514"></p><p>The ellipses shown above are the contours of a quadratic function. Also shown is the trajectory taken by gradient descent, which was initialized at (48,30). The x’s in the figure (joined by straight lines) mark the successive values of θ that gradient descent went through as itconverged to its minimum.</p><hr><h2 id="experiment"><a class="markdownIt-Anchor" href="#experiment"></a> Experiment</h2><p>A Wild Implement of Linear Regression with One Variable via Gradient Descent in Python Made by Myself:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># linregress.py</span></span><br><span class="line"><span class="comment"># Linear Regression with one variable via a Batch Gradient Descent</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># Created by CDFMLR on 2019/8/28.</span></span><br><span class="line"><span class="comment"># Copyright © CDFMLR. All right reserved.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinearRegressionWithOneVariable</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    # Linear regression with one variable</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &gt; Given a training set, to find a set of parameters (theta_0, theta_1) of hypothesis function `h(x) = theta_0 + theta_1 * x` via gradient descent so that h(x) is a "good" predictor for the corresponding value of y.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Properties</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        - `training_set`</span></span><br><span class="line"><span class="string">        - `theta`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Methods</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        - `regress`: to find a set of thetas to make hypothesis a "good" predictor</span></span><br><span class="line"><span class="string">        - `hypothesis`: to get a predicted value</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Example</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ``python</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; model = LinearRegressionWithOneVariable([(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)])</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; model.regress(verbose=True, epsilon=0.0001)</span></span><br><span class="line"><span class="string">    theta_0:        0.025486336182825836</span></span><br><span class="line"><span class="string">    theta_1:        0.9940305813471573</span></span><br><span class="line"><span class="string">    cost:           9.99815680487604e-05</span></span><br><span class="line"><span class="string">    hypothesis:     h(x) = 0.025486336182825836 + 0.9940305813471573*x</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; model.hypothesis(10)</span></span><br><span class="line"><span class="string">    9.9657921496544</span></span><br><span class="line"><span class="string">``</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, training_set)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        training_set: training set</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.training_set = training_set    <span class="comment"># [(x: int, y: int), ...]</span></span><br><span class="line">        self.theta = [<span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_hypothesis</span><span class="params">(self, x, theta)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> theta[<span class="number">0</span>] + theta[<span class="number">1</span>] * x</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_cost</span><span class="params">(self, dataset, theta)</span>:</span></span><br><span class="line">        s = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> dataset:</span><br><span class="line">            s += (self._hypothesis(i[<span class="number">0</span>], theta) - i[<span class="number">1</span>]) ** <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> s / (<span class="number">2</span> * len(dataset))</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_gradient_descent</span><span class="params">(self, dataset, starting_theta, learning_rate, epsilon, max_count=<span class="number">4294967296</span>)</span>:</span></span><br><span class="line">        theta = list.copy(starting_theta)</span><br><span class="line">        last_theta = list.copy(starting_theta)</span><br><span class="line">        cost = self._cost(dataset, theta)</span><br><span class="line">        last_cost = cost * <span class="number">2</span></span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        epsilon = abs(epsilon)</span><br><span class="line">        diff = epsilon + <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> (diff &gt; epsilon):</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> count &gt;= max_count:</span><br><span class="line">                <span class="keyword">raise</span> RuntimeError(<span class="string">"Failed in gradient descent: cannot convergence after &#123;mc&#125; iterations."</span>.format(mc=max_count))</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                t_sum= sum((self._hypothesis(i[<span class="number">0</span>], theta) - i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> dataset))</span><br><span class="line">                theta[<span class="number">0</span>] = theta[<span class="number">0</span>] - learning_rate * t_sum / len(dataset)</span><br><span class="line">    </span><br><span class="line">                t_sum = sum(</span><br><span class="line">                    ((self._hypothesis(i[<span class="number">0</span>], theta) - i[<span class="number">1</span>]) * i[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> dataset)</span><br><span class="line">                    )</span><br><span class="line">                theta[<span class="number">1</span>] = theta[<span class="number">1</span>] - learning_rate * t_sum / len(dataset)</span><br><span class="line">    </span><br><span class="line">                last_cost = cost</span><br><span class="line">                cost = self._cost(dataset, theta)</span><br><span class="line">    </span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> any((math.isnan(x) <span class="keyword">or</span> math.isinf(x) <span class="keyword">for</span> x <span class="keyword">in</span> theta)) <span class="keyword">and</span> abs(cost) &lt;= abs(last_cost):</span><br><span class="line">                    diff = max((abs(last_theta[i] - theta[i]) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(theta))))</span><br><span class="line">                    last_theta = list.copy(theta)</span><br><span class="line">                    learning_rate += learning_rate * <span class="number">4</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    theta = list.copy(last_theta)</span><br><span class="line">                    learning_rate /= <span class="number">10</span></span><br><span class="line">                    <span class="keyword">if</span> (learning_rate == <span class="number">0</span>):</span><br><span class="line">                        learning_rate = self._get_learning_rate(self.training_set)</span><br><span class="line">    </span><br><span class="line">                <span class="comment"># print('[DEBUG] (%s) theta: %s, diff=%s, learning_rate=%s, cost=%s' % (count, theta, diff, learning_rate, cost))</span></span><br><span class="line">            <span class="keyword">except</span> OverflowError:</span><br><span class="line">                theta = list.copy(last_theta)</span><br><span class="line">                learning_rate /= <span class="number">10</span></span><br><span class="line">                <span class="keyword">if</span> (learning_rate == <span class="number">0</span>):</span><br><span class="line">                    learning_rate = self._get_learning_rate(self.training_set)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> theta, count</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_learning_rate</span><span class="params">(self, dataset)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> / max((i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> dataset))</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">regress</span><span class="params">(self, epsilon=<span class="number">1</span>, learning_rate=<span class="number">0</span>, verbose=False)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        To find a set of thetas to make hypothesis a "good" predictor</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        Parms:</span></span><br><span class="line"><span class="string">            - epsilon: when the difference between new theta and last theta less then epsilon, finish regressing</span></span><br><span class="line"><span class="string">            - learning_rate: about the "step length" of gtadient descent. Too small will take a long time to regress, and too big will raise a Overflow error. `0` to allow the algorithm to select an appropriate value automatically.</span></span><br><span class="line"><span class="string">            - verbose: true to print the result of regression</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        init_theta = [random.random(), random.random()]</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> learning_rate == <span class="number">0</span>:</span><br><span class="line">            learning_rate = self._get_learning_rate(self.training_set)</span><br><span class="line">        </span><br><span class="line">        self.theta, count = self._gradient_descent(self.training_set, init_theta, learning_rate, epsilon)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> verbose:</span><br><span class="line">            print(<span class="string">'Gradient descent finished after &#123;count&#125; iterations:\ntheta_0:\t&#123;t0&#125;\ntheta_1:\t&#123;t1&#125;\ncost:\t\t&#123;cost&#125;\nhypothesis:\th(x) = &#123;t0&#125; + &#123;t1&#125;*x'</span>.format(</span><br><span class="line">                    count=count, t0=self.theta[<span class="number">0</span>], t1=self.theta[<span class="number">1</span>], cost=self._cost(self.training_set, self.theta)))</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hypothesis</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        To get a predicted y value of giving x</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        Parms:</span></span><br><span class="line"><span class="string">            - x: x value of the point you want to predict</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="keyword">return</span> self._hypothesis(x, self.theta)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    model = LinearRegressionWithOneVariable([(<span class="number">0</span>, <span class="number">0</span>), (<span class="number">1</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">2</span>), (<span class="number">3</span>, <span class="number">3</span>), (<span class="number">4</span>, <span class="number">4</span>), (<span class="number">5</span>, <span class="number">5</span>), (<span class="number">6</span>, <span class="number">6</span>)])</span><br><span class="line">    model.regress(verbose=<span class="literal">True</span>, epsilon=<span class="number">0.0000000001</span>)</span><br><span class="line">    model.hypothesis(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Machine Learning </category>
          
          <category> AndrewNg </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吴恩达机器学习0——序章</title>
      <link href="/2019/08/18/AndrewNg-MachineLearning-0-Introduction/"/>
      <url>/2019/08/18/AndrewNg-MachineLearning-0-Introduction/</url>
      
        <content type="html"><![CDATA[<h1 id="notes-of-andrew-ngs-machine-learning-0-introduction"><a class="markdownIt-Anchor" href="#notes-of-andrew-ngs-machine-learning-0-introduction"></a> Notes of Andrew Ng’s Machine Learning —— (0) Introduction</h1><h2 id="welcome"><a class="markdownIt-Anchor" href="#welcome"></a> Welcome</h2><p>Machine Learning</p><ul><li>Grew out of work in AI</li><li>New capability for computers</li></ul><p>Examples:</p><ul><li><p>Database mining<br>Large datasets from growth of automation / web.<br>E.g. Web click data, medical records, biology, engineering</p></li><li><p>Applications can’t program by hand.<br>E.g. Autonomous helicopter, handwriting recognition, most of Natural Language Progressing (NLP), Computer Vision.</p></li><li><p>Self-customizing programs<br>E.g. Amazon, Netflix product recommendations</p></li><li><p>Understanding human learning (brain, real AI)</p></li></ul><h2 id="what-is-machine-learning"><a class="markdownIt-Anchor" href="#what-is-machine-learning"></a> What is machine learning</h2><h3 id="machine-learning-definition"><a class="markdownIt-Anchor" href="#machine-learning-definition"></a> Machine Learning definition</h3><ul><li><em>Arthur Samuel (1959)</em> : Machine Learning: Field of study that gives computers the ability to learn without being explicitly programmed.</li><li><em>Tom Mitchell (1998)</em>, <em>a more modern definition</em> : Well-posed Learning Problem: A computer program is said to learn from experience <code>E</code> with respect to some task <code>T</code> and some prformance measure <code>P</code>, if its performance on T, as measured by P, improves with experience E.</li></ul><p>Example:</p><ul><li><p>Playing checkers.</p><p><code>E</code> = the experience of playing many games of checkers<br><code>T</code> = the task of playing checkers.<br><code>P</code> = the probability that the program will win the next game.</p></li><li><p>Spam Filter</p><p><code>E</code> = Watching you label emails as spam or not spam<br><code>T</code> = Classifying emails as spam or not spam<br><code>P</code> = The number (or fraction) of emails correctly classified as spam / not spam.</p></li></ul><h3 id="machine-learning-algorithms"><a class="markdownIt-Anchor" href="#machine-learning-algorithms"></a> Machine Learning algorithms</h3><ul><li>Supervised learning</li><li>Unsupervised learning</li></ul><p>Others: Reinforcement learning, recommender system</p><h2 id="supervised-learning"><a class="markdownIt-Anchor" href="#supervised-learning"></a> Supervised Learning</h2><p>In supervised learning, we are:</p><ul><li>given a data set</li><li>given “right answers” (already know what our correct output should look like)</li><li>having the idea that there is a relationship between the input and the output.</li></ul><h4 id="categories-of-supervised-learning-problems"><a class="markdownIt-Anchor" href="#categories-of-supervised-learning-problems"></a> Categories of supervised learning problems</h4><ol><li><p><code>Regression</code>: Predict continuous valued output</p><p>Trying to map input variables to some continuous function.</p><p><em>[To predict how much]</em></p><p>E.g.</p><ul><li>You have a large inventory of identical items. You want to predict how many of these items will sell over the next 3 months.</li><li>Given a picture of a person, we have to predict their age on the basis of the given picture</li></ul></li><li><p><code>Classification</code>: Discrete valued output (0/1 or 0/1/2/3…)</p><p>Trying to map input variables into discrete categories.</p><p><em>[To predict whether/which]</em></p><p>E.g.</p><ul><li>Given a patient with a tumor, we have to predict whether the tumor is malignant or benign.</li><li>You’d like software to examine individual customer accounts, and for each accout decide if it has been hacked/compromised.</li></ul></li></ol><h2 id="unsupervised-learning"><a class="markdownIt-Anchor" href="#unsupervised-learning"></a> Unsupervised Learning</h2><p>In unsupervised learning we can:</p><ul><li>approach problems with little or no idea what our results should look like</li><li>derive structure from data where we don’t necessarily know the effect of the variables.</li><li>derive this structure by <strong>clustering the data</strong> based on relationships among the variables in the data.</li></ul><p>With unsupervised learning there is <strong>no feedback based on the prediction results</strong>.</p><p>E.g.</p><ol><li><p><code>Clustering</code>:</p><ul><li><p>Google news looks for tens of thousands of news stories and automatically cluster them together. So, the news stories that are all about the same topic get displayed together.</p></li><li><p>Take a collection of 1,000,000 different genes, and find a way to automatically group these genes into groups that are somehow similar or related by different variables, such as lifespan, location, roles, and so on.</p></li></ul></li><li><p><code>Non-clustering</code>:</p><p>The “Cocktail Party Algorithm”, allows you to find structure in a chaotic environment. (i.e. identifying individual voices and music from a mesh of sounds at a cocktail party).</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Machine Learning </category>
          
          <category> AndrewNg </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub加Hexo打造个人博客</title>
      <link href="/2019/08/15/GitHub%E5%8A%A0Hexo%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/08/15/GitHub%E5%8A%A0Hexo%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="github-hexo-个人博客"><a class="markdownIt-Anchor" href="#github-hexo-个人博客"></a> GitHub + Hexo =&gt; 个人博客</h1><blockquote><p>打造一个个人博客其实很简单，我们不需要拥有一台服务器、甚至可以对 Web 开发不甚了解。</p></blockquote><p>这篇文章记录我如何在 Mac 上通过 <a href="https://github.com" target="_blank" rel="noopener">GitHub</a>、<a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> 打造一个<em>个人博客</em> —— <strong><a href="https://clownote.github.io">clownote</a></strong></p><h2 id="起因"><a class="markdownIt-Anchor" href="#起因"></a> 起因</h2><p>我一直不喜欢 CSDN 和博客园等博客平台，但确实有写东西的习惯。写了东西就要发表，所以在之前，我把我学习计算机知识的笔记都放到了一个自己初学 Web 开发时搞的一个超级简陋的静态网站上。</p><p>但它实在是太简陋了导致使用起来<strong>巨</strong>麻烦，发布文章要手动把 markdown 写的文章用自己写的一个转换器渲染成 HTML，然后调用一个可以及时渲染代码颜色的 js 进去，然后 FTP 上传到服务器上，再到手动修改 <code>index.html</code>，加入这篇新文章的链接…</p><p>这完全不是正常人应该用的操作！</p><p>我一直在考虑写一个功能完整的、更方便的博客。计划是用 Flask 写后端，Vue 做前端，Git 来管理内容，然后再写一些 Apple Script、Bash Script 让这个博客系统方便在 Mac 中使用 。但最近一直忙其他项目，没时间来实现。现在我的服务器到期了，百度云的，感觉不太好用（主要是受对这家公司的某些其他产品的不良印象的影响），不续费了。</p><p>笔记急需迁出！写之前想的博客系统是来不及了，突然想起来很多人用一个叫 <code>Hexo</code> 的东西做博客，于是一番 Google、Bing。最终，我觉定用 <code>GitHub</code> + <code>Hexo</code> 快速（Less than One Day）打造一个<strong>不用服务器</strong>、<strong>不用写代码</strong>的博客。</p><h2 id="经过"><a class="markdownIt-Anchor" href="#经过"></a> 经过</h2><p><s>废话不多说，代码赶快写起来</s>，，，（哦，错了，咱们今天不用写代码！只是几个简单的命令 + 配置就好了😂）</p><p>废话不多说，建站走起！</p><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><h4 id="注册github"><a class="markdownIt-Anchor" href="#注册github"></a> 注册GitHub</h4><p>首先，我们需要注册一个 <code>GitHub</code> 账户，我相信绝大多数的读者已经完成了这一步，所以不再赘述；如果您幸运的属于少数人，请打开 <a href="https://github.com" target="_blank" rel="noopener">GitHub</a>，即可按照感觉轻松完成。</p><h4 id="创建-github-pages"><a class="markdownIt-Anchor" href="#创建-github-pages"></a> 创建 GitHub Pages</h4><p>在您的 GitHub 中，<code>New</code> 一个 <code>Repository</code>，名字为 <code>&lt;userName&gt;.github.io</code>，其中的 <code>&lt;userName&gt;</code> 与您的 GitHub 用户名相同。</p><p>注意，在这个新建的 Repository 的 <code>Settings</code> 中，您应该可以找到，有关 <code>GitHub Pages</code> 的设置里写了:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your site is published at https://&lt;userName&gt;.github.io</span><br></pre></td></tr></table></figure><p>这样就成了，否则请检查之前的步骤是否正确。</p><h4 id="安装-hexo"><a class="markdownIt-Anchor" href="#安装-hexo"></a> 安装 Hexo</h4><p>在安装 <code>Hexo</code> 前，需要确定电脑中是否已安装了：</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> (版本至少为 nodejs 6.9)</li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">$ node --version</span><br></pre></td></tr></table></figure><p>如果没有，要先安装他们。接下来只需要使用 <code>npm</code> 即可完成 Hexo 的安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="建站"><a class="markdownIt-Anchor" href="#建站"></a> 建站</h3><h4 id="初始化"><a class="markdownIt-Anchor" href="#初始化"></a> 初始化</h4><p>安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建您的博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>然后，可以看到指定文件夹的目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h4 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h4><p>目录中的 <code>_config.yml</code> 是网站的配置信息，我们需要在此配置一些参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cat _config.yml</span><br><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>需要配置的项目有：</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>title</code></td><td style="text-align:left">网站标题</td></tr><tr><td style="text-align:left"><code>subtitle</code></td><td style="text-align:left">网站副标题</td></tr><tr><td style="text-align:left"><code>description</code></td><td style="text-align:left">网站描述</td></tr><tr><td style="text-align:left"><code>keywords</code></td><td style="text-align:left">网站的关键词。使用半角逗号 <code>,</code> 分隔多个关键词。</td></tr><tr><td style="text-align:left"><code>author</code></td><td style="text-align:left">您的名字</td></tr><tr><td style="text-align:left"><code>language</code></td><td style="text-align:left">网站使用的语言</td></tr><tr><td style="text-align:left"><code>url</code></td><td style="text-align:left">网址</td></tr><tr><td style="text-align:left"><code>theme</code></td><td style="text-align:left">当前主题名称。值为<code>false</code>时禁用主题</td></tr><tr><td style="text-align:left"><code>deploy</code></td><td style="text-align:left">部署部分的设置</td></tr></tbody></table><p>需要说明的是，<code>deploy</code> 项的配置就可以把Hexo与GitHub关联起来，即将我们的博客<strong>推送</strong>到 GitHub，打开站点的配置文件_config.yml，<code>deploy</code> 项配置为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span> </span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="attr">https://github.com/&lt;userName&gt;/&lt;userName&gt;.github.io</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>然后，我们需要让 Hexo 连接上我们的 GitHub：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>每一条命令的作用都很直观。操作完之后你就会发现你的博客已经上线了，可以在网络上被访问了！</p><h4 id="主题"><a class="markdownIt-Anchor" href="#主题"></a> 主题</h4><p>如果你像我一样，觉得 <code>Hexo</code> 自带的 <code>landscape</code> 主题不太好看，我们可以跟换一个主题。</p><p>我们可以在 Hexo 官网上找到很丰富的 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题资源</a>，具体的使用方法主题项目的 README 里会写明，照着做就行。</p><p>这里以配置一个叫做 <a href="https://github.com/probberechts/hexo-theme-cactus" target="_blank" rel="noopener"><code>cactus</code></a> 的主题为例：</p><ol><li>下载、安装：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd &lt;folder&gt;# hexo init 的目录</span><br><span class="line">$ git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus# 拷贝一份主题</span><br></pre></td></tr></table></figure><ol start="2"><li>修改Hexo主题：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ./config.yml</span><br></pre></td></tr></table></figure><p>修改其中的 <code>theme</code> 属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># theme: landscape</span><br><span class="line">theme: cactus</span><br></pre></td></tr></table></figure><ol start="3"><li>主题配置</li></ol><p>在 <code>themes/cactus/_config.yml</code> 中按照自己的需要对主题进行配置。</p><h3 id="写作"><a class="markdownIt-Anchor" href="#写作"></a> 写作</h3><p>其实到这里，我们的博客就已经构建完成了。接下来我们就可以用新建的博客系统写作了😊。</p><h4 id="新建文章"><a class="markdownIt-Anchor" href="#新建文章"></a> 新建文章</h4><p>你可以执行下列命令来创建一篇新文章。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>您可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p><p>可选的布局有：</p><table><thead><tr><th><code>layout</code></th><th>储存路径</th><th>功能</th></tr></thead><tbody><tr><td><code>post</code></td><td><code>source/_posts</code></td><td>存放要发布的博客文章</td></tr><tr><td><code>page</code></td><td><code>source</code></td><td>网站中的一些固定页面，比如说&quot;关于&quot;</td></tr><tr><td><code>draft</code></td><td><code>source/_drafts</code></td><td>草稿</td></tr></tbody></table><p><code>hexo new</code> 成功后，Hexo 会告诉你新建的文件路径，利用 markdown 编辑器打开它，就可以开始书写了，在我的 Mac 里，默认的 markdown 编辑器是 <code>Typora</code>，可以直接用 <code>open</code> 命令来用默认程序打开并编辑文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ open ~/&lt;blogFolder&gt;/source/_drafts&lt;title&gt;.md</span><br></pre></td></tr></table></figure><h4 id="草稿"><a class="markdownIt-Anchor" href="#草稿"></a> 草稿</h4><p>我们在写文章时，可以先写草稿(draft)。草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p><p>文章写好后，通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h4 id="front-matter"><a class="markdownIt-Anchor" href="#front-matter"></a> Front-matter</h4><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，在里面写 YAML 配置，用于指定个别文件的变量，例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="string">/7/13</span> <span class="number">20</span><span class="string">:46:25</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>以下是一些常用的参数：</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left"><code>layout</code></td><td style="text-align:left">布局</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>title</code></td><td style="text-align:left">标题</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>date</code></td><td style="text-align:left">建立日期</td><td style="text-align:left">文件建立日期</td></tr><tr><td style="text-align:left"><code>updated</code></td><td style="text-align:left">更新日期</td><td style="text-align:left">文件更新日期</td></tr><tr><td style="text-align:left"><code>comments</code></td><td style="text-align:left">开启文章的评论功能</td><td style="text-align:left">true</td></tr><tr><td style="text-align:left"><code>tags</code></td><td style="text-align:left">标签（不适用于分页）</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>categories</code></td><td style="text-align:left">分类（不适用于分页）</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>permalink</code></td><td style="text-align:left">覆盖文章网址</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>keywords</code></td><td style="text-align:left">仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</td><td style="text-align:left"></td></tr></tbody></table><h4 id="分类和标签"><a class="markdownIt-Anchor" href="#分类和标签"></a> 分类和标签</h4><p>对于大多数人来讲，对一篇文章分类和标签的设置是必不可少的。</p><p>分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：<strong>分类(<code>categories</code>)</strong> 具有<em>顺序性</em>和<em>层次性</em>，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而 <strong>标签(<code>tags</code>)</strong> 没有顺序和层次。</p><p>在 <code>Front-matter</code> 中，分类和标签的设置方法如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Diary</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">PS3</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Games</span></span><br></pre></td></tr></table></figure><p>在使用 <code>categories</code> 时，请注意：</p><p>Hexo不支持指定多个同级分类！下面的指定方法：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Diary</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Life</span></span><br></pre></td></tr></table></figure><p>会使分类 <code>Life</code> 成为 <code>Diary</code> 的子分类，而不是 <em>并列分类</em>。因此，有必要为您的文章选择尽可能准确的分类。</p><h4 id="发布"><a class="markdownIt-Anchor" href="#发布"></a> 发布</h4><p>在完成写作后，我们先保存编辑好的 markdown 文件，然后执行如下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish post &lt;title&gt;.md# 如果新建时 layout 为 draft</span><br><span class="line"></span><br><span class="line">$ hexo deploy --generate# 生成文件完成后部署</span><br><span class="line"># 可以简写为 `$ hexo d -g`</span><br></pre></td></tr></table></figure><h4 id="操作总结"><a class="markdownIt-Anchor" href="#操作总结"></a> 操作总结</h4><p>现在，回顾一下我们用 Hexo 写作的过程:</p><ol><li><code>$ hexo new draft &lt;title&gt;</code></li><li><code>$ open ~/&lt;blogFolder&gt;/source/_drafts/&lt;title&gt;.md</code></li><li><code>在编辑器中填写Front-matter，并完成内容写作</code></li><li><code>$ hexo publish post &lt;title&gt;</code></li><li><code>$ hexo deploy --generate</code></li></ol><p>如果有能力，我们还可以写一个简单的小脚本来简化这些操作。很容易实现，在这里就不介绍了。</p><h3 id="功能拓展"><a class="markdownIt-Anchor" href="#功能拓展"></a> 功能拓展</h3><p>现在，我们已经完成了博客系统的安装、建站并且学会了在其中写作。</p><p>当我们打开自己的博客网站时，会发现，我们的 <code>Cactus</code> 主题已经提供了诸如分享、导航的功能。</p><p>但或许我们还是觉得它有些太简陋了，我们可能还想让它有一些让用户体验更好的特性，比如，搜索、评论功能，现在我们尝试来实现它们。</p><p>其实，我们使用的 <code>Cactus</code> 主题中，已经包含了对搜索、评论的支持，直接使用即可。</p><h4 id="搜索"><a class="markdownIt-Anchor" href="#搜索"></a> 搜索</h4><p>安装 hexo 的搜索插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>创建一个新页面，用来承载搜索功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page search</span><br></pre></td></tr></table></figure><p>在 Front-matter 里加上 <code>type: search</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Search</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">search</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>在 <code>themes/cactus/_config.yml</code> 里配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line"><span class="attr">  search:</span> <span class="string">/search/</span></span><br></pre></td></tr></table></figure><h4 id="评论"><a class="markdownIt-Anchor" href="#评论"></a> 评论</h4><p><code>Cactus</code> 主题为我们提供的评论工具是 <code>Disqus</code>，这是一个各方面都很好的评论系统，但有一点问题是，这个评论系统<strong>在国内无法使用</strong>，所以我们只是简单翻译一下官方的介绍：</p><p>首先，在 Disqus 注册我们的站点: <a href="http://disqus.com/admin/create/" target="_blank" rel="noopener">https://disqus.com/admin/create/</a>.</p><p>然后, 修改 <code>themes/cactus/_config.yml</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">disqus:</span><br><span class="line">  enabled: true</span><br><span class="line">  shortname: SITENAME</span><br></pre></td></tr></table></figure><p>这里的 <code>SITENAME</code> 是在注册 Disqus 时，你给你的站点填写的名字。</p><h2 id="结尾"><a class="markdownIt-Anchor" href="#结尾"></a> 结尾</h2><p>好了，我们的博客网站建好了。由于我最迫切的需求就是快速的完成博客建站，所以多余的东西我都没有研究，但其实 Hexo 还可以有很多拓展，GitHub Pages 也还有一些东西可以配置，这些都需要大家自己去研究。</p><p>后期我还会持续优化这个网站，比如我计划修改一下源码，把 Cactus 中的 <code>Disqus</code> 评论换成墙内能用的如 <code>livere</code> 之类的东西 ，如果可以，我会另外发文记录。</p><p>其实，这篇文章中的绝大多数内容都来源于咱们使用的各个工具的官网，我只是粗糙地把他们按照一定的逻辑顺序排列到一起。如果需要更详细的说明，大家可以看下面列出的这些参考文档：</p><ul><li>GitHub的注册与使用：<a href="https://help.github.com/cn" target="_blank" rel="noopener">https://help.github.com/cn</a></li><li>Hexo的安装及使用：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></li><li>Cactus主题的配置：<a href="https://github.com/probberechts/hexo-theme-cactus" target="_blank" rel="noopener">https://github.com/probberechts/hexo-theme-cactus</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-14-IO</title>
      <link href="/2019/04/25/Java/Day14_Java_IO/"/>
      <url>/2019/04/25/Java/Day14_Java_IO/</url>
      
        <content type="html"><![CDATA[<h1 id="java-io"><a class="markdownIt-Anchor" href="#java-io"></a> Java I/O</h1><h2 id="处理外部数据"><a class="markdownIt-Anchor" href="#处理外部数据"></a> 处理外部数据</h2><p>在 Java 程序中使用的数据通常来自外部数据来源，比如数据库、通过套接字直接传输的字节或文件存储。大部分收集和处理外部数据的 Java 工具都包含在 <code>java.io</code> 包中。</p><h2 id="文件"><a class="markdownIt-Anchor" href="#文件"></a> 文件</h2><p>在所有可用于 Java 应用程序的数据来源中，文件是最常见的，通常也是最方便的。如果想在 Java 应用程序中读取某个文件，必须使用将它的传入字节解析为 Java 语言类型的<em>流</em>。</p><p><code>java.io.File</code> 是一个在文件系统上定义资源并以某种抽象方式表示该资源的类。创建 <code>File</code> 对象很容易：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"temp.txt"</span>);</span><br><span class="line">File f2 = <span class="keyword">new</span> File(<span class="string">"/home/steve/testFile.txt"</span>);</span><br></pre></td></tr></table></figure><p><code>File</code> 构造方法接受它创建的文件的路径。</p><p>可以将任何 <code>String</code> 传递到 <code>File</code> 的构造方法，只要它是操作系统中的有效路径，无论它引用的文件是否存在。</p><p>通常，我们都需要向新创建的 <code>File</code> 对象询问该文件是否存在：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">File f2 = <span class="keyword">new</span> File(<span class="string">"/home/steve/testFile.txt"</span>);</span><br><span class="line"><span class="keyword">if</span> (f2.exists()) &#123;</span><br><span class="line">  <span class="comment">// File exists. Process it...</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="comment">// File doesn't exist. Create it...</span></span><br><span class="line">  f2.createNewFile();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文件操作"><a class="markdownIt-Anchor" href="#文件操作"></a> 文件操作</h3><p>利用 <code>java.io.File</code>，通过 File 对象，我们可以操作文件：</p><ul><li>文件是否存在：<code>FileObject.exists()</code></li><li>创建文件：<code>FileObject.createNewFile()</code></li><li>删除文件：<code>FileObject.delete</code></li></ul><p>还有很多操作，详见 <a href="https://docs.oracle.com/en/java/javase/12/docs/api/java.base/java/io/File.html" target="_blank" rel="noopener">JDK 文档</a>。</p><h2 id="在-java-io-中使用流"><a class="markdownIt-Anchor" href="#在-java-io-中使用流"></a> 在 Java I/O 中使用流</h2><p>我们可以使用流来访问文件系统上的文件。</p><p>流允许程序从来源接收字节或将输出发送到目标。</p><p>在 <code>java.io</code> 包中包含多种风格的流，一些流可以处理所有类型的 16 位字符（<code>Reader</code> 和 <code>Writer</code> 类型）。其他流仅能处理 8 位字节（<code>InputStream</code> 和 <code>OutputStream</code> 类型）。</p><h3 id="java-io-流"><a class="markdownIt-Anchor" href="#java-io-流"></a> Java IO 流</h3><p><img src="http://ww4.sinaimg.cn/large/006y8mN6gy1g673prk0haj30j30l7t9y.jpg" alt="iostream2xx"></p><h4 id="字节流"><a class="markdownIt-Anchor" href="#字节流"></a> 字节流</h4><p><strong>字节流</strong>读（<code>InputStream</code> 和子类）和写（<code>OutputStream</code> 和子类）8 位字节。换句话说，可以将字节流视为一种更加原始的流类型。下面总结了两种常见的字节流和它们的用法：</p><ul><li><code>FileInputStream</code> / <code>FileOutputStream</code>：从文件读取字节，将字节写入文件</li><li><code>ByteArrayInputStream</code> / <code>ByteArrayOutputStream</code>：从内存型中的数组读取字节，将字节写入内存中的数组</li></ul><h4 id="字符流"><a class="markdownIt-Anchor" href="#字符流"></a> 字符流</h4><p><strong>字符流</strong>读（<code>Reader</code> 和它的子类）和写（<code>Writer</code> 和它的子类）16 位字符。下面挑选了一些字符流和它们的用法：</p><ul><li><code>StringReader</code> / <code>StringWriter</code>：在内存中的 <code>String</code> 中读取和写入字符。</li><li><code>InputStreamReader</code> / <code>InputStreamWriter</code>（和子类<code>FileReader</code> / <code>FileWriter</code>）：充当字节流和字符流之间的桥梁。<code>Reader</code> 从字节流读取字节并转换为字符。<code>Writer</code> 将字符转换为字节，以便将它们放在字节流上。</li><li><code>BufferedReader</code> / <code>BufferedWriter</code>：在读取或写入另一个流时缓冲数据，使读写操作更高效。</li></ul><h3 id="读取控制台输入"><a class="markdownIt-Anchor" href="#读取控制台输入"></a> 读取控制台输入</h3><p>Java 的控制台输入由 <code>System.in</code> 完成。</p><p>为了获得一个绑定到控制台的字符流，我们把 <code>System.in</code> 包装在一个 <code>BufferedReader</code> 对象中来创建一个字符流：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> </span><br><span class="line">                     InputStreamReader(System.in));</span><br></pre></td></tr></table></figure><p>BufferedReader 对象创建后，我们便可以使用 <code>read()</code> 方法从控制台读取一个字符，或者用 <code>readLine()</code> 方法读取一个字符串：</p><ul><li><code>int read() throws IOException</code> ：调用 read() 方法，它从输入流读取一个字符并把该字符作为整数值返回。 当流结束的时候返回 -1。该方法抛出 IOException。</li><li><code>String readLine() throws IOException</code> ：与 read() 类型，但读取一个字符串。</li></ul><p>实例（读取字符）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用 BufferedReader 在控制台读取字符</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">chrRead</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 用 System.in 创建 BufferedReader</span></span><br><span class="line">  BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">  System.out.println(<span class="string">"输入字符，到'q'退出："</span>);</span><br><span class="line">  <span class="comment">// 读取字符</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">char</span> character = <span class="string">'\0'</span>; character != <span class="string">'q'</span>; ) &#123;</span><br><span class="line">    character = (<span class="keyword">char</span>) br.read();</span><br><span class="line">    System.out.println(character);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>~~😂有意思的是，~~这对代码的作用和下面这 <strong>一行</strong>Python代码是一样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'\n'</span>.join([c <span class="keyword">for</span> c <span class="keyword">in</span> input(<span class="string">"输入字符，到\'q\'退出：\n"</span>).split(<span class="string">'q'</span>)[<span class="number">0</span>] + <span class="string">'q'</span>]))</span><br></pre></td></tr></table></figure><p>实例（读取字符串）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用 BufferedReader 在控制台读取字符串</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">strRead</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">  System.out.println(<span class="string">"Please enter lines of text, 'end' to quit: "</span>);</span><br><span class="line">  <span class="comment">// 读取字符串</span></span><br><span class="line">  <span class="keyword">for</span> (String line = <span class="string">"\0"</span>; !line.equals(<span class="string">"end"</span>); ) &#123;</span><br><span class="line">    line = (String) br.readLine();</span><br><span class="line">    System.out.println(line);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="scanner"><a class="markdownIt-Anchor" href="#scanner"></a> scanner</h4><p>其实，更容易地，我们也可以通过 <code>java.util.Scanner</code> 类来获取用户的输入。</p><h5 id="创建-scanner"><a class="markdownIt-Anchor" href="#创建-scanner"></a> 创建 scanner</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Scanner s = <span class="keyword">new</span> Scanner(System.in);</span><br></pre></td></tr></table></figure><h5 id="使用-scanner"><a class="markdownIt-Anchor" href="#使用-scanner"></a> 使用 scanner</h5><p>通过使用 <code>Scanner</code> 类的 <code>next()</code> 与 <code>nextLine()</code> 方法获取输入的字符串，在读取前我们一般需要 使用 <code>hasNext</code> 与 <code>hasNextLine</code> 判断是否还有输入的数据:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mine.java.tour;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TryScanner</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">System.out.println("Please enter something:");</span></span><br><span class="line"><span class="comment">for (String read = "\0"; scan.hasNext(); ) &#123;</span></span><br><span class="line"><span class="comment">read = scan.next();</span></span><br><span class="line"><span class="comment">System.out.println(read);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">System.out.println(<span class="string">"Please enter some lines:"</span>);</span><br><span class="line"><span class="keyword">for</span> (String read = <span class="string">"\0"</span>; scan.hasNextLine(); ) &#123;</span><br><span class="line">read = scan.nextLine();</span><br><span class="line">System.out.println(read);</span><br><span class="line">&#125;</span><br><span class="line">scan.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="next-与-nextline-区别"><a class="markdownIt-Anchor" href="#next-与-nextline-区别"></a> next() 与 nextLine() 区别</h6><ul><li><p><code>next()</code>:</p><ol><li>一定要读取到有效字符后才可以结束输入。</li><li>对输入有效字符之前遇到的空白，next() 方法会自动将其去掉。</li><li>只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li><li>next() 不能得到带有空格的字符串。</li></ol></li><li><p><code>nextLine()</code>：</p><ol><li>以Enter为结束符,也就是说 nextLine()方法返回的是输入回车之前的所有字符。</li><li>可以获得空白。</li></ol></li></ul><p>另外，如果要输入 <code>int</code> 或 <code>float</code> 类型的数据，在 <code>Scanner</code> 类中也有支持，但是在输入之前最好先使用 <code>hasNextXxx()</code> 方法进行验证，再使用 <code>nextXxx()</code> 来读取。</p><h3 id="文件读写"><a class="markdownIt-Anchor" href="#文件读写"></a> 文件读写</h3><h4 id="fileinputstream"><a class="markdownIt-Anchor" href="#fileinputstream"></a> FileInputStream</h4><p><code>FileInputStream</code> 用于从文件读取数据。</p><p>可以使用字符串类型的文件名来创建一个输入流对象来读取文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InputStream f = <span class="keyword">new</span> FileInputStream(<span class="string">"/home/steve/testFile.txt"</span>);</span><br></pre></td></tr></table></figure><p>也可以使用一个文件对象来创建一个输入流对象来读取文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"/home/steve/testFile.txt"</span>);</span><br><span class="line">InputStream out = <span class="keyword">new</span> FileInputStream(f);</span><br></pre></td></tr></table></figure><h5 id="操作"><a class="markdownIt-Anchor" href="#操作"></a> 操作</h5><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>public void close() throws IOException</code></td><td>关闭此文件输入流并释放与此流有关的所有系统资源。</td></tr><tr><td><code>protected void finalize()throws IOException</code></td><td>这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。</td></tr><tr><td><code>public int read(int r)throws IOException</code></td><td>从 InputStream 对象读取指定字节的数据。返回为整数值。返回下一字节数据，如果已经到结尾则返回-1。</td></tr><tr><td><code>public int read(byte[] r) throws IOException</code></td><td>从输入流读取r.length长度的字节。返回读取的字节数。如果是文件结尾则返回-1。</td></tr><tr><td><code>public int available() throws IOException</code></td><td>返回下一次对此输入流调用的方法可以不受阻塞地从此输入流读取的字节数。返回一个整数值。</td></tr></tbody></table><h4 id="fileoutputstream"><a class="markdownIt-Anchor" href="#fileoutputstream"></a> FileOutputStream</h4><p>同样可以用路径字符串和文件对象来构造：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OutputStream f = <span class="keyword">new</span> FileOutputStream(<span class="string">"/home/steve/testFile.txt"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"/home/steve/testFile.txt"</span>);</span><br><span class="line">OutputStream f = <span class="keyword">new</span> FileOutputStream(f);</span><br></pre></td></tr></table></figure><h5 id="操作-2"><a class="markdownIt-Anchor" href="#操作-2"></a> 操作</h5><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>public void close() throws IOException</code></td><td>关闭此文件输入流并释放与此流有关的所有系统资源。</td></tr><tr><td><code>protected void finalize()throws IOException</code></td><td>这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。</td></tr><tr><td><code>public void write(int w)throws IOException</code></td><td>把指定的字节写到输出流中。</td></tr><tr><td><code>public void write(byte[] w)</code></td><td>把指定数组中w.length长度的字节写到OutputStream中。</td></tr></tbody></table><h4 id="实例"><a class="markdownIt-Anchor" href="#实例"></a> 实例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mine.java.tour;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileStream</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Logger l = Logger.getLogger(<span class="string">"Test"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 byte 以二进制的形式读写文件</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ioByByte</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">l.info(<span class="string">"通过 byte 以二进制的形式读写文件:"</span>);</span><br><span class="line"><span class="keyword">try</span> (</span><br><span class="line">OutputStream ostream = <span class="keyword">new</span> FileOutputStream(<span class="string">"test.txt"</span>);</span><br><span class="line">InputStream istream = <span class="keyword">new</span> FileInputStream(<span class="string">"test.txt"</span>);</span><br><span class="line">) &#123;</span><br><span class="line"><span class="comment">// 写入文件</span></span><br><span class="line"><span class="keyword">byte</span> toBeWritten[] = &#123;<span class="number">0x43</span>, <span class="number">0x44</span>, <span class="number">0x46</span>, <span class="number">0x4d</span>, <span class="number">0x4c</span>, <span class="number">0x52</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i : toBeWritten) &#123;</span><br><span class="line">ostream.write(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 从文件中读取</span></span><br><span class="line"><span class="keyword">int</span> fileSize = istream.available();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fileSize; i++) &#123;</span><br><span class="line">System.out.print((<span class="keyword">char</span>)istream.read());</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">l.severe(<span class="string">"IOException: "</span> + e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 读写中文(Unicode)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ioUnicode</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">l.info(<span class="string">"读写中文(Unicode):"</span>);</span><br><span class="line">File fileForIO = <span class="keyword">new</span> File(<span class="string">"测试.txt"</span>);</span><br><span class="line"><span class="keyword">if</span> (!fileForIO.exists()) &#123;</span><br><span class="line">fileForIO.createNewFile();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 写</span></span><br><span class="line">OutputStream ostream = <span class="keyword">new</span> FileOutputStream(fileForIO);</span><br><span class="line">OutputStreamWriter writer = <span class="keyword">new</span> OutputStreamWriter(ostream, <span class="string">"UTF-8"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">writer.append(<span class="string">"中文"</span>);</span><br><span class="line">writer.append(<span class="string">"\n"</span>);</span><br><span class="line">writer.append(<span class="string">"English"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">l.severe(<span class="string">"Fail to write: "</span> + e);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (writer != <span class="keyword">null</span>) writer.close();</span><br><span class="line"><span class="keyword">if</span> (ostream != <span class="keyword">null</span>) ostream.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 读</span></span><br><span class="line">InputStream istream = <span class="keyword">new</span> FileInputStream(fileForIO);</span><br><span class="line">InputStreamReader reader = <span class="keyword">new</span> InputStreamReader(istream, <span class="string">"UTF-8"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"><span class="keyword">while</span> (reader.ready()) &#123;</span><br><span class="line">sb.append((<span class="keyword">char</span>)reader.read());</span><br><span class="line">&#125;</span><br><span class="line">String result = sb.toString();</span><br><span class="line">System.out.println(result);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">l.severe(<span class="string">"Fail to read: "</span> + e);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (reader != <span class="keyword">null</span>) reader.close();</span><br><span class="line"><span class="keyword">if</span> (istream != <span class="keyword">null</span>) istream.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">ioByByte();</span><br><span class="line">ioUnicode();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行这个程序，输出如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5月 03, 2019 8:31:07 下午 mine.java.tour.FileStream ioByByte</span><br><span class="line">信息: 通过 byte 以二进制的形式读写文件:</span><br><span class="line">CDFMLR</span><br><span class="line">5月 03, 2019 8:31:08 下午 mine.java.tour.FileStream ioUnicode</span><br><span class="line">信息: 读写中文(Unicode):</span><br><span class="line">中文</span><br><span class="line">English</span><br></pre></td></tr></table></figure><p>~~😂讽刺的是，~~它的作用和下面这段 Python 代码差不多：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"Test.txt"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">"CDFMLR"</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"Test.txt"</span>, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(f.read())</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"测试.txt"</span>, <span class="string">"w"</span>, encoding=<span class="string">"UTF-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">"中文\nEnglish"</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"测试.txt"</span>, <span class="string">"r"</span>, encoding=<span class="string">"UTF-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(f.read())</span><br></pre></td></tr></table></figure><hr><p>相关代码：</p><p><a href="./src/SystemIn.java">SystemIn.java</a></p><p><a href="./src/FileStream.java">FileStream.java</a></p><p><a href="./src/TryScanner.java">TryScanner.java</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-13-接口</title>
      <link href="/2019/04/24/Java/Day13_Java_Interface/"/>
      <url>/2019/04/24/Java/Day13_Java_Interface/</url>
      
        <content type="html"><![CDATA[<h1 id="java-接口"><a class="markdownIt-Anchor" href="#java-接口"></a> Java 接口</h1><p>根据设计，抽象方法指定一个<em>契约</em>（通过方法名、参数和返回类型）但未提供可重用的代码。当在抽象类的一个子类中实现行为的方式与另一个子类中不同时，抽象方法（在抽象类上定义）就会很有用。</p><p>当在应用程序中需要一组可分组到一起的常见行为（例如 <code>java.util.List</code>），但它们存在两个或多个实现时，可以考虑使用<em>接口</em> 定义该行为。</p><p><strong>接口</strong> 像是<strong>仅</strong>包含抽象方法的抽象类；它们<strong>仅</strong>定义契约，而不定义实现。</p><h2 id="定义接口"><a class="markdownIt-Anchor" href="#定义接口"></a> 定义接口</h2><p>接口声明看起来像类声明，但使用了 <code>interface</code> 关键字：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">InterfaceName</span> </span>&#123;</span><br><span class="line">    <span class="function">returnType <span class="title">methodName</span><span class="params">(argumentList)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口中定义的方法没有方法主体。接口的实现者负责提供方法主体（与抽象方法一样）。</p><h2 id="实现接口"><a class="markdownIt-Anchor" href="#实现接口"></a> 实现接口</h2><p>要在类上定义一个接口，则需要<em>实现</em> 该接口，这意味着提供一个方法主体来进一步提供履行接口契约的行为。</p><p>可以使用 <code>implements</code> 关键字实现接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Manager</span> <span class="keyword">extends</span> <span class="title">Employee</span> <span class="keyword">implements</span> <span class="title">BonusEligible</span>, <span class="title">StockOptionRecipient</span> </span>&#123;</span><br><span class="line">  <span class="comment">// And so on</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>implements</code> 操作类似 继承用的 extends，接口是使用 <code>implements</code> 关键字，二者不同的是，接口可以有好多个，但继承只能有一个。</p><p>然后，我们要在 implements 了接口的类里实现该接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Manager</span> <span class="keyword">extends</span> <span class="title">Employee</span> <span class="keyword">implements</span> <span class="title">StockOptionRecipient</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Manager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processStockOptions</span> <span class="params">(<span class="keyword">int</span> numberOfOptions, BigDecimal price)</span> </span>&#123;</span><br><span class="line">    log.info(<span class="string">"I can't believe I got "</span> + number + <span class="string">" options at $"</span> +</span><br><span class="line">    price.toPlainString() + <span class="string">"!"</span>); </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现该接口时，需要提供该接口上的一个或多个方法的行为。注意实现的方法必须与接口中的匹配（名称、参数、返回值），还需要添加 <code>public</code> 访问修饰符。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-12-异常</title>
      <link href="/2019/04/23/Java/Day12_Java_Exception/"/>
      <url>/2019/04/23/Java/Day12_Java_Exception/</url>
      
        <content type="html"><![CDATA[<h1 id="java-异常处理"><a class="markdownIt-Anchor" href="#java-异常处理"></a> Java 异常处理</h1><blockquote><p>没有程序能够始终正常运行，Java 语言的设计者也知道这一点。Java 平台提供了内置机制来处理代码未准确地按计划运行的情形。</p></blockquote><p><strong>异常</strong> 是在程序执行期间发生的破坏正常的程序指令流的事件。</p><p><strong>异常处理</strong> 可以使用 <code>try</code> 和 <code>catch</code> 代码块（以及 <code>finally</code>）捕获错误。</p><h2 id="异常类型"><a class="markdownIt-Anchor" href="#异常类型"></a> 异常类型</h2><p>在 Java 中，异常的层次结构图如下：</p><p><img src="http://ww1.sinaimg.cn/large/006y8mN6gy1g673rbxe34j30i50b4dk9.jpg" alt="4970765-1437c4660dd95f3e"></p><ul><li><code>Throwable</code><ul><li><code>Error</code>: 运行时环境发生的错误。例如，JVM 内存溢出。一般地，程序不会从错误中恢复。</li><li><code>Exception</code>: 程序本身可以处理的异常<ul><li><code>IOException</code></li><li><code>RuntimeException</code></li></ul></li></ul></li></ul><h3 id="异常分层结构"><a class="markdownIt-Anchor" href="#异常分层结构"></a> 异常分层结构</h3><p>Java 语言包含一个完整的异常分层结构，它由许多类型的异常组成，这些异常划分为两大主要类别：</p><ul><li><strong>已检查的异常(<em>checked exceptions</em>)</strong>：已由编译器检查（表示编译器确定它们已在您代码中的某处处理过）。一般而言，这些异常是 <code>java.lang.Exception</code> 的直接子类。</li><li><strong>未检查的异常</strong>（也称为<em>运行时异常</em>，<em>unchecked / runtime exceptions</em>）：未由编译器检查。这些是 <code>java.lang.RuntimeException</code> 的子类。</li></ul><h2 id="使用-try-catch-和-finally"><a class="markdownIt-Anchor" href="#使用-try-catch-和-finally"></a> 使用 <code>try</code>、<code>catch</code> 和 <code>finally</code></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// Try to execute</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (ExceptionType e) &#123;</span><br><span class="line">  <span class="comment">// Catch exception</span></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">// Always executes</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>⚠️【注意】<code>ExceptionType</code> 要换成具体的错误类型：如 <code>RuntimeException</code>、<code>IOException</code> 。</p><p><code>try</code>、<code>catch</code> 和 <code>finally</code> 代码块共同形成了一张捕获异常的网:</p><ul><li>首先，<code>try</code> 语句限定可能抛出异常的代码;</li><li>捕获的异常会放到 <code>catch</code> 代码块（或称 <em>异常处理函数</em>） 中。捕获到异常时，可以尝试优雅地进行恢复，也可以退出程序（或方法）;</li><li>在所有尝试和捕获都完成后，会继续执行 <code>finally</code> 代码块，无论是否发生了异常;</li></ul><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mine.java.tour;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exception</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Logger l = Logger.getLogger(<span class="string">"Try-Catch-Finally"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Integer foo = <span class="keyword">null</span>;</span><br><span class="line">System.out.println(<span class="string">"foo: "</span> + foo.toString());</span><br><span class="line">&#125; <span class="keyword">catch</span> (RuntimeException e) &#123;</span><br><span class="line">l.severe(<span class="string">"Caught exception: "</span> + e);</span><br><span class="line">System.out.println(<span class="string">"catch"</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"finally"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行这个程序会得到如下结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5月 02, 2019 11:57:04 上午 mine.java.tour.Exception main</span><br><span class="line">严重: Caught exception: java.lang.NullPointerException</span><br><span class="line">catch</span><br><span class="line">finally</span><br></pre></td></tr></table></figure><h3 id="多个-catch-代码块"><a class="markdownIt-Anchor" href="#多个-catch-代码块"></a> 多个 <code>catch</code> 代码块</h3><p>可以拥有多个 <code>catch</code>代码块，但必须采用某种特定方式来搭建它们。</p><p>如果所有异常都是其他异常的子类，那么子类会按照 <code>catch</code> 代码块的顺序放在父类前面。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (IndexOutOfBoundsException e) &#123;</span><br><span class="line">    System.err.println(<span class="string">"IndexOutOfBoundsException: "</span> + e.getMessage());</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    System.err.println(<span class="string">"Caught IOException: "</span> + e.getMessage());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="用一个-catch-捕获多个类型的错误"><a class="markdownIt-Anchor" href="#用一个-catch-捕获多个类型的错误"></a> 用一个 <code>catch</code> 捕获多个类型的错误</h3><p>在 Java SE 7 以后，一个 <code>catch</code> 语句可以处理不止一个类型的异常。这个特性可以让我们避免一直写重复的代码，也让我们没有理由去catch一个过度宽泛的错误类型（例如，我们本来应该逐一处理各种不同的问题，但为了避免麻烦，直接 <code>catch(RuntimeException e)</code>）。</p><p>我们可以把 catch 的小括号里的单个 ExceptionType 替换为逐个列出需要这个语句块处理的错误类型，每个类型之间用 竖线（ <code>|</code> ）分隔。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">catch</span> (IOException|SQLException ex) &#123;</span><br><span class="line">    logger.log(ex);</span><br><span class="line">    <span class="keyword">throw</span> ex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【注】在用一个 catch 捕获多个错误的时候，这个 catch 的参数会隐含地带上 <code>final</code> 属性。例如在上面的例子中，catch 的参数 ex 是一个 <code>final</code> 的变量，因此，不能在 catch 语句块里给它赋值！</p><h2 id="throws-和-throw"><a class="markdownIt-Anchor" href="#throws-和-throw"></a> <code>throws</code> 和 <code>throw</code></h2><ul><li><code>throws</code> : 方法可能抛出异常的声明(用在声明方法时，表示该方法可能要抛出异常)。</li></ul><p>Checked exception 通过在声明一个方法时使用 <code>throws</code> 关键字加上一个可能的异常列表 来向编译器声明：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomething</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="keyword">throws</span> Exception1, Exception1, ... </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>throws Exception1, Exception1, ...</code>  只是告诉编译器这个方法可能会抛出这些异常，方法的调用者可能要处理这些异常，而这些可能异常是该函数体产生的。</p><ul><li><code>throw</code> 是具体向外抛异常的动作，它抛出一个异常实例。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">className</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deposit</span><span class="params">(<span class="keyword">double</span> amount)</span> <span class="keyword">throws</span> RemoteException</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">// Method implementation</span></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RemoteException();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//Remainder of class definition</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="try-with-resources-代码块"><a class="markdownIt-Anchor" href="#try-with-resources-代码块"></a> <code>try-with-resources</code> 代码块</h2><p>当我们在 try 中使用一些资源时，不论出错与否我们都应该在最后关闭它，所以可以在finally 中完成这个关闭操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> String <span class="title">readFirstLineFromFileWithFinallyBlock</span><span class="params">(String path)</span></span></span><br><span class="line"><span class="function">                                                     <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(path));</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> br.readLine();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (br != <span class="keyword">null</span>) br.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Java SE 7 开始，还有一种更简单办法来解决问题，Java 可以自动关闭资源：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> String <span class="title">readFirstLineFromFile</span><span class="params">(String path)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> (BufferedReader br =</span><br><span class="line">                   <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(path))) &#123;</span><br><span class="line">        <span class="keyword">return</span> br.readLine();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 try 后面加小括号，里面声明需要的资源，在结束异常检测后（在 try 代码块超出范围时），Java 将自动处理这个资源的关闭问题。</p><p>注意，这种自动关闭的资源必须实现 java.lang.AutoCloseable 接口；如果尝试在一个没有实现该接口的资源类上实现此语法，会出错。</p><hr><p>相关代码：</p><p><a href="./src/Exception.java">Exception.java</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-11-集合</title>
      <link href="/2019/04/22/Java/Day11_Java_Collections/"/>
      <url>/2019/04/22/Java/Day11_Java_Collections/</url>
      
        <content type="html"><![CDATA[<h1 id="java-集合"><a class="markdownIt-Anchor" href="#java-集合"></a> Java 集合</h1><blockquote><p>大多数真实应用程序都会处理像文件、变量、来自文件的记录或数据库结果集这样的集合。</p></blockquote><p>最常见的集合就是数组，我们之前已经单独讨论过它，现在我们主要研究其他的集合类型。</p><h2 id="列表-list"><a class="markdownIt-Anchor" href="#列表-list"></a> 列表 <code>List</code></h2><p><code>List</code> 是一种有序集合，也称为<em>序列</em>。</p><p><code>List</code> 集合只能包含对象（不能包含像 <code>int</code> 这样的原语类型）。</p><p>要使用 List，我们需要先把它 import 到程序中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br></pre></td></tr></table></figure><p><code>List</code> 是一个接口，所以不能直接实例化它（即，不可以 <code>new List&lt;E&gt;</code> ！），要声明一个 <code>List</code> ，使用如下语法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; listOfStrings = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; listOfStrings = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br></pre></td></tr></table></figure><p>这样，我们声明了一个种比较常用的 List —— <code>ArrayList</code>。</p><blockquote><p>【注】</p><ol><li>要使用上面的代码，首先要 ：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">import</span> java.util.List;</span><br><span class="line">&gt; <span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><ol start="2"><li>我们将 <code>ArrayList</code> 对象赋给了一个 <code>List</code> 类型的变量。在 Java 编程中，可以将某种类型的变量赋给另一种类型，只要被赋值的变量是赋值变量所实现的超类或接口。</li></ol></blockquote><h3 id="正式类型"><a class="markdownIt-Anchor" href="#正式类型"></a> 正式类型</h3><p>前面的代码段中尖括号（ <code>&lt;&gt;</code>） 中的类型被称为<em>正式类型（formal type）</em>，即这个 List 是一个包含何种类型的集合。</p><p>如前例中正式类型为 <code>String</code>，这个<code>List</code> 仅能包含 <code>String</code> 实例。</p><p>如果把正式类型写为<code>&lt;Object&gt;</code>，就意味着可将任何实体放在该 <code>List</code> 中。</p><h3 id="使用列表"><a class="markdownIt-Anchor" href="#使用列表"></a> 使用列表</h3><ul><li>将实体放入  <code>List</code>  中<ul><li><code>add(E element)</code> 方法将元素 element 添加到 <code>List</code> 的末尾处。</li><li><code>add(int index, E e</code> 方法将元素 element 添加到 <code>List</code> 的索引为 <code>index</code> 处（<code>index &lt;= List.size()</code>）。</li></ul></li><li>询问  <code>List</code> 目前有多大<ul><li>要询问 <code>List</code> 有多大，可调用 <code>size()</code></li></ul></li><li>从  <code>List</code> 中获取实体<ul><li>要从 <code>List</code> 中<strong>检索</strong>某一项，可调用 <code>get()</code> 并向它传递想要的项的索引</li></ul></li><li>从  <code>List</code> 中删除实体<ul><li>要从 <code>List</code> 中<strong>删除</strong>某一项，可调用 <code>remove()</code> 并向它传递想要的项的索引</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Logger l = Logger.getLogger(<span class="string">"Test"</span>)</span><br><span class="line"><span class="comment">// 声明 List</span></span><br><span class="line">List&lt;Integer&gt; listOfIntegers = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="comment">// 插入数据</span></span><br><span class="line">listOfIntegers.add(Integer.valueOf(<span class="number">238</span>));</span><br><span class="line">listOfIntegers.add(<span class="number">0</span>, Integer.valueOf(<span class="number">987</span>));</span><br><span class="line"><span class="comment">// 查看大小</span></span><br><span class="line">l.info(<span class="string">"Current List size: "</span> + listOfIntegers.size());</span><br><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">l.info(<span class="string">"Item at index 0 is: "</span> listOfIntegers.get(<span class="number">0</span>));</span><br><span class="line"><span class="comment">// 删除元素</span></span><br><span class="line">listOfIntegers.remove(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>相关代码: <a href="./src/UsrList.java">UsrList.java</a></p><p>关于 List 的更多说明，详见 <a href="https://docs.oracle.com/en/java/javase/12/docs/api/java.base/java/util/List.html" target="_blank" rel="noopener">JDK文档</a>。</p><h2 id="迭代变量-iterable"><a class="markdownIt-Anchor" href="#迭代变量-iterable"></a> 迭代变量 <code>Iterable</code></h2><p>如果一个集合实现了 <code>java.lang.Iterable</code>，那么该集合被称为<em>迭代变量集合</em>。</p><p><code>Iterable</code> 可从一端开始，逐项地处理集合，直到处理完所有项。</p><p>它的使用形式就是在 循环 中提及过的 for-echo 循环：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (objectType varName : collectionReference) &#123;</span><br><span class="line">    <span class="comment">// Start using objectType (via varName) right away...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为 <code>List</code> 扩展了 <code>java.util.Collection</code>（它实现 <code>Iterable</code>），所以可以使用简写语法来迭代任何 <code>List</code> :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; listOfIntegers = obtainSomehow();</span><br><span class="line">Logger l = Logger.getLogger(<span class="string">"Test"</span>);</span><br><span class="line"><span class="keyword">for</span> (Integer i : listOfIntegers) &#123;</span><br><span class="line">    l.info(<span class="string">"Integer value is : "</span> + i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码实现的效果和如下的 for 循环处理等效：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; listOfIntegers = obtainSomehow();</span><br><span class="line">Logger l = Logger.getLogger(<span class="string">"Test"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> aa = <span class="number">0</span>; aa &lt; listOfIntegers.size(); aa++) &#123;</span><br><span class="line">    Integer I = listOfIntegers.get(aa);</span><br><span class="line">    l.info(<span class="string">"Integer value is : "</span> + i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="集-set"><a class="markdownIt-Anchor" href="#集-set"></a> 集 <code>Set</code></h2><p><code>Set</code> 是一种没有重复元素的集合结构。它可保证其元素中的唯一性，但不关心元素的顺序。</p><p><code>List</code> 可包含同一个对象数百次，而 <code>Set</code> 仅可包含某个特定实例一次。</p><p><code>Set</code> 也仅可包含对象，不能直接包含内置类型。</p><p>与 <code>List</code> 一样，不能直接实例化 <code>Set</code> (不能 <code>new Set&lt;E&gt;()</code>) ，但可以用继承自 <code>Set</code> 的 <code>HashSet</code> 等来实现。</p><h4 id="操作-set"><a class="markdownIt-Anchor" href="#操作-set"></a> 操作 <code>Set</code></h4><ul><li>增<ul><li><code>add(E e)</code></li></ul></li><li>删<ul><li><code>remove(Object o)</code></li></ul></li><li>获取大小<ul><li><code>size()</code></li></ul></li><li>获取实体<ul><li>使用在 “迭代变量 (<code>Iterable</code>)” 中介绍的 for-each 循环可以把元素从 <code>Set</code> 中取出来。但注意对象可能按照不同于添加它们的顺序打印被取出来。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TrySet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] arg)</span> </span>&#123;</span><br><span class="line">Logger l = Logger.getLogger(<span class="string">"Tset"</span>);</span><br><span class="line"></span><br><span class="line">Set&lt;Integer&gt; setOfIntegers = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">setOfIntegers.add(Integer.valueOf(<span class="number">12</span>));</span><br><span class="line">setOfIntegers.add(Integer.valueOf(<span class="number">20</span>));</span><br><span class="line">setOfIntegers.add(Integer.valueOf(<span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">setOfIntegers.add(Integer.valueOf(<span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">l.info(setOfIntegers.toString());</span><br><span class="line"></span><br><span class="line">setOfIntegers.remove(Integer.valueOf(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">l.info(<span class="string">""</span> + setOfIntegers.size());</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Integer i : setOfIntegers) &#123;</span><br><span class="line">i += <span class="number">100</span>;</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">l.info(setOfIntegers.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">... TrySet main</span><br><span class="line">信息: [20, 5, 12]</span><br><span class="line">... TrySet main</span><br><span class="line">信息: 2</span><br><span class="line">105</span><br><span class="line">112</span><br><span class="line">... TrySet main</span><br><span class="line">信息: [5, 12]</span><br></pre></td></tr></table></figure><h2 id="映射-map"><a class="markdownIt-Anchor" href="#映射-map"></a> 映射 <code>Map</code></h2><p><code>Map</code> 是一种方便的集合构造，可以使用它将一个对象（<em>键</em>）与另一个对象（<em>值</em>）相关联。</p><p><code>Map</code> 的键必须是唯一的，而且可在以后用于检索值。</p><p>和 List、Set 一样，<code>Map</code> 集合仅可包含对象，且 <code>Map</code> 是一个接口，所以不能直接实例化它，我们常用 <code>HashMap</code> 来实现一个 <code>Map</code>。</p><h4 id="常用操作"><a class="markdownIt-Anchor" href="#常用操作"></a> 常用操作</h4><ul><li>添加元素：<code>put(K key, V value)</code></li><li>取出元素：<code>get(Object key)</code></li><li>删除元素：<code>remove (Object key, [Object value])</code></li><li>获取大小：<code>size()</code></li><li>获取一个 Key 的 <code>Set</code>：<code>keySet()</code>，可以利用这个方法，结合使用 Set 和 Map，实现遍历 <code>Map</code>。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明</span></span><br><span class="line">Map&lt;String, Integer&gt; mapOfIntegers = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="comment">// 添加</span></span><br><span class="line">mapOfIntegers.put(<span class="string">"168"</span>, Integer.valueOf(<span class="number">168</span>));</span><br><span class="line"><span class="comment">// 取值</span></span><br><span class="line">Integer oneHundred68 = mapOfIntegers.get(<span class="string">"168"</span>);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Set&lt;String&gt; keys = mapOfIntegers.keySet();</span><br><span class="line">Logger l = Logger.getLogger(<span class="string">"Test"</span>);</span><br><span class="line"><span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">    Integer  value = mapOfIntegers.get(key);</span><br><span class="line">    l.info(<span class="string">"Value keyed by '"</span> + key + <span class="string">"' is '"</span> + value + <span class="string">"'"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相关代码：<a href="./src/TryMap.java">TryMap.java</a></p><hr><p>相关代码：</p><p><a href="./src/UsrList.java">TryList.java</a></p><p><a href="./src/TrySet.java">TrySet.java</a></p><p><a href="./src/TryMap.java">TryMap.java</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-10-数组</title>
      <link href="/2019/04/21/Java/Day10_Java_Array/"/>
      <url>/2019/04/21/Java/Day10_Java_Array/</url>
      
        <content type="html"><![CDATA[<h1 id="java-数组"><a class="markdownIt-Anchor" href="#java-数组"></a> Java 数组</h1><p>Java 语言中提供的数组是用来存储<strong>固定大小</strong>的<strong>同类型元素</strong>的。</p><h2 id="声明数组变量"><a class="markdownIt-Anchor" href="#声明数组变量"></a> 声明数组变量</h2><p>欲使用数组，首先必须声明数组变量，用来存放数组对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar;   <span class="comment">// 首选的方法</span></span><br><span class="line"><span class="comment">/* 或 */</span></span><br><span class="line">dataType arrayRefVar[];  <span class="comment">// 效果相同，但不是首选方法，这种风格来自 C/C++，只是为了让 C/C++ 程序员能够快速理解java语言</span></span><br></pre></td></tr></table></figure><h2 id="创建数组"><a class="markdownIt-Anchor" href="#创建数组"></a> 创建数组</h2><p>与其他类型相似，我们可以用 <code>new</code> 创建一个数组对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrayRefVar = <span class="keyword">new</span> dataType[arraySize];</span><br></pre></td></tr></table></figure><p>与 C 不同的是，arraySize 可以是一个变量，而不必使用字面值常量。</p><p>或者，如果我们预先知道了数组的内容，可以像 C 一样用 数组的字面值常量 (<code>{...}</code>) 来创建一个数组：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String [] names;</span><br><span class="line">names = &#123;<span class="string">"James"</span>, <span class="string">"Larry"</span>, <span class="string">"Tom"</span>, <span class="string">"Lacy"</span>&#125;;</span><br></pre></td></tr></table></figure><p>正如其他类型的变量，我们常把声明和创建写在一起：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar = <span class="keyword">new</span> dataType[arraySize];</span><br></pre></td></tr></table></figure><h2 id="使用数组"><a class="markdownIt-Anchor" href="#使用数组"></a> 使用数组</h2><h3 id="数组大小"><a class="markdownIt-Anchor" href="#数组大小"></a> 数组大小</h3><p>对于一个数组 <code>arrayRefVar</code> ，我们可以使用 <code>arrayRefVar.length</code> 来获取其长度。</p><h3 id="索引访问"><a class="markdownIt-Anchor" href="#索引访问"></a> 索引访问</h3><p>数组的元素是通过索引访问的。数组索引从 <code>0</code> 开始 到 <code>arrayRefVar.length-1</code>。</p><p>例如，我们用一个长度为 n 的数组来表示出 <em>斐波那契数列</em> 的前 n 项，然后把它们输出：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FibonacciArray</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 创建数组</span></span><br><span class="line"><span class="keyword">int</span> size = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span>[] fib = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 填装数列</span></span><br><span class="line">fib[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">fib[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; size; i++) &#123;</span><br><span class="line">fib[i] = fib[i-<span class="number">1</span>] + fib[i-<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; size; i++) &#123;</span><br><span class="line">System.out.println(fib[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组迭代"><a class="markdownIt-Anchor" href="#数组迭代"></a> 数组迭代</h3><p>正如上面的程序，我们常用循环来处理一个数组，我们可以使用传统的 for 或者是 for-each 循环来迭代一个数组：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line"><span class="comment">// for</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    arr[i] = i * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// for-each</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> element: arr) &#123;</span><br><span class="line">    System.out.println(element);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组与函数"><a class="markdownIt-Anchor" href="#数组与函数"></a> 数组与函数</h3><p>我们可以把一个数组看成是和其他任何实例一样的对象，所以我们当然也可以把它当作参数传递给函数，或作为函数的返回值返回。</p><h4 id="数组作为函数的返回值"><a class="markdownIt-Anchor" href="#数组作为函数的返回值"></a> 数组作为函数的返回值</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] returnArray(<span class="keyword">int</span> base) &#123;</span><br><span class="line"><span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; result.length; i++) &#123;</span><br><span class="line">result[i] = base &lt;&lt; i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数组作为函数的参数"><a class="markdownIt-Anchor" href="#数组作为函数的参数"></a> 数组作为函数的参数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i: arr) &#123;</span><br><span class="line">System.out.print(i + <span class="string">", "</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>事实上，我们常用到的 <code>main</code> 函数，就是使用数组作为函数的参数的良好例子。</p><p><code>main</code> 是这样的：<code>public static void main(String[] args) { ... }</code>, 它接收一个 String 的数组作为参数，这个数组的元素就是在运行 java 程序时给出的命令行参数。<br>例如 <code>java Example.java Arg1 Arg2</code>，对应的args将是：<code>{&quot;Arg1&quot;, &quot;Arg2&quot;}</code>。</p><p>参考示例代码 <a href="./src/ArrayAndFunction.java">ArrayAndFunction.java</a>。</p><h2 id="多维数组"><a class="markdownIt-Anchor" href="#多维数组"></a> 多维数组</h2><p>我们可以声明一个元素是数组的数组，即多维数组。<br>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[][] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>][<span class="number">3</span>];</span><br></pre></td></tr></table></figure><p>这将生成一个有两个元素的数组，这两个元素又分别是包含 3 个 int 的数组。</p><p>我们可以这样使用它：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultArr</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[][] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a[i].length; j++) &#123;</span><br><span class="line">a[i][j] = i*<span class="number">10</span> + j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i[]: a) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j: i) &#123;</span><br><span class="line">System.out.println(j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arrays-类"><a class="markdownIt-Anchor" href="#arrays-类"></a> Arrays 类</h2><p><code>Arrays</code> 类（<code>java.util.Arrays</code>）是 Java 提供的一个处理数组的类，它包含了一系列常用的数组操作，可以对内建类型的数组方便地操作。</p><p>要使用 <code>Arrays</code> 类，首先要导入它，即在代码开头使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br></pre></td></tr></table></figure><p>然后，就可以调用它的这些主要的方法：</p><ul><li><code>Arrays.fill(ArrayObject, [begin, end,] Num)</code></li></ul><p>把 <code>Num</code> 赋值给 <code>ArrayObject</code> 中下标属于 <code>[begin, end)</code> (可选，缺省为整个数组) 的元素。</p><ul><li><code>Arrays.sort(ArrayObject, [begin, end])</code></li></ul><p>对 <code>ArrayObject</code> 中下标属于 <code>[begin, end)</code> (可选，缺省为整个数组) 的元素排序。</p><ul><li><code>Arrays.equals(Arr1, Arr2)</code></li></ul><p>判断数组 <code>Arr1</code> 和 <code>Arr2</code> 是否相同。</p><ul><li><code>Arrays.binarySearch(ArrayObject, Key)</code></li></ul><p>在 数组 <code>ArrayObject</code> 中用 <strong>二分搜索</strong>（注意要排序后的才有意义）搜索值Key，<br>找到会返回首个对应的索引，<br>找不到会返回负值。</p><ul><li><code>Arrays.toString(ArrayObject)</code></li></ul><p>用字符串来表示一个数组（如 <code>{1, 2, 3}</code> 表示为 <code>&quot;[1, 2, 3]&quot;</code>），<br><strong>返回</strong>得到的字符串。</p><p>用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UseArrays</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span>[] b = &#123;<span class="number">9</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">7</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// toString</span></span><br><span class="line">System.out.println(Arrays.toString(a));</span><br><span class="line">System.out.println(Arrays.toString(b));</span><br><span class="line"></span><br><span class="line"><span class="comment">// fill</span></span><br><span class="line">Arrays.fill(a, <span class="number">6</span>);</span><br><span class="line">System.out.println(Arrays.toString(a));</span><br><span class="line"></span><br><span class="line">Arrays.fill(a, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>);</span><br><span class="line">System.out.println(Arrays.toString(a));</span><br><span class="line"></span><br><span class="line"><span class="comment">// sort</span></span><br><span class="line">Arrays.sort(b, <span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">System.out.println(Arrays.toString(b));</span><br><span class="line"></span><br><span class="line">Arrays.sort(b);</span><br><span class="line">System.out.println(Arrays.toString(b));</span><br><span class="line"></span><br><span class="line"><span class="comment">// equals</span></span><br><span class="line">System.out.println(</span><br><span class="line">Arrays.equals(a, a)</span><br><span class="line">);</span><br><span class="line">System.out.println(</span><br><span class="line">Arrays.equals(a, b)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// binarySearch</span></span><br><span class="line">System.out.println(</span><br><span class="line">Arrays.binarySearch(b, <span class="number">3</span>)</span><br><span class="line">);</span><br><span class="line">System.out.println(</span><br><span class="line">Arrays.binarySearch(b, <span class="number">99</span>)</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[0, 0, 0, 0, 0]</span><br><span class="line">[9, 2, 1, 3, 7]</span><br><span class="line">[6, 6, 6, 6, 6]</span><br><span class="line">[6, 6, 8, 8, 6]</span><br><span class="line">[9, 1, 2, 3, 7]</span><br><span class="line">[1, 2, 3, 7, 9]</span><br><span class="line">true</span><br><span class="line">false</span><br><span class="line">2</span><br><span class="line">-6</span><br></pre></td></tr></table></figure><p>Arrays 类还有很多方法，可以参考 <a href="https://docs.oracle.com/javase/10/docs/api/java/util/Arrays.html" target="_blank" rel="noopener">官方文档</a></p><hr><p>相关代码:</p><ul><li><a href="./src/FibonacciArray.java">FibonacciArray.java</a></li><li><a href="./src/ArrayAndFunction.java">ArrayAndFunction.java</a></li><li><a href="./src/MultArr.java">MultArr.java</a></li><li><a href="./src/UseArrays.java">UseArrays.java</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-9-条件</title>
      <link href="/2019/04/20/Java/Day9_Java_Condition/"/>
      <url>/2019/04/20/Java/Day9_Java_Condition/</url>
      
        <content type="html"><![CDATA[<h1 id="java-条件语句"><a class="markdownIt-Anchor" href="#java-条件语句"></a> Java 条件语句</h1><h2 id="if-else-语句"><a class="markdownIt-Anchor" href="#if-else-语句"></a> if-else 语句</h2><p>Java 的 <code>if</code> 条件语句和 C 完全一致。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (expression_0) &#123;</span><br><span class="line">    <span class="comment">// statements</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (expression_1) &#123;</span><br><span class="line">    <span class="comment">// statements</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// statements</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><s>无需解释</s></p><h2 id="switch-case-语句"><a class="markdownIt-Anchor" href="#switch-case-语句"></a> switch-case 语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(expression)&#123;</span><br><span class="line">    <span class="keyword">case</span> value_0 :</span><br><span class="line">       <span class="comment">//语句</span></span><br><span class="line">       <span class="keyword">break</span>;   <span class="comment">//可选</span></span><br><span class="line">    <span class="keyword">case</span> value_1 :</span><br><span class="line">       <span class="comment">//语句</span></span><br><span class="line">       <span class="keyword">break</span>;   <span class="comment">//可选</span></span><br><span class="line">    <span class="comment">//你可以有任意数量的case语句</span></span><br><span class="line">    <span class="keyword">default</span> :   <span class="comment">//可选</span></span><br><span class="line">       <span class="comment">//语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Java 中的 <code>switch</code> 大体上和 C 的相同，但也有不同的地方。值得一提的是如下几点：</p><ul><li>同 C 一样，<ul><li>case 语句中的值的数据类型必须与变量的数据类型相同，而且只能是常量或者字面常量。</li><li>同时需要注意 <code>case</code> 后一直执行到 <code>break</code> 才会停止（或者执行到全部结束），不会在一个 case 结束后自动停止！</li></ul></li><li>与 C 不同的是，<ul><li>Java 中 <code>switch</code> 后面的 expression 可以是 <code>byte</code>、<code>short</code>、<code>int</code> 或者 <code>char</code>。从 Java SE 7 开始，switch 支持字符串 <code>String</code> 类型了。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-8-循环</title>
      <link href="/2019/04/19/Java/Day8_Java_Loop/"/>
      <url>/2019/04/19/Java/Day8_Java_Loop/</url>
      
        <content type="html"><![CDATA[<h1 id="java-循环"><a class="markdownIt-Anchor" href="#java-循环"></a> Java 循环</h1><p>Java中有三种主要的循环结构：</p><ul><li><code>while</code> 循环</li><li><code>do...while</code> 循环</li><li><code>for</code> 循环</li></ul><h2 id="while-循环"><a class="markdownIt-Anchor" href="#while-循环"></a> <code>while</code> 循环</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while( 布尔表达式 ) &#123;</span><br><span class="line">    // 循环内容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="dowhile-循环"><a class="markdownIt-Anchor" href="#dowhile-循环"></a> <code>do...while</code> 循环</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">do &#123;</span><br><span class="line">    // 循环内容</span><br><span class="line">&#125; while( 布尔表达式 );</span><br></pre></td></tr></table></figure><h2 id="for-循环"><a class="markdownIt-Anchor" href="#for-循环"></a> <code>for</code> 循环</h2><p>和 C++ 11 一样，Java有两种 for 循环，一种是类似与 C 的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for( 初始化; 布尔表达式; 更新 ) &#123;</span><br><span class="line">    // 代码语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一种用于数组迭代的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for(type element: array)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.println(element);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>声明语句：声明新的局部变量，该变量的类型必须和数组元素的类型匹配。其作用域限定在循环语句块，其值与此时数组元素的值相等。<br>表达式：表达式是要访问的数组名，或者是返回值为数组的方法。</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">      <span class="keyword">int</span> [] numbers = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> x : numbers )&#123;</span><br><span class="line">         System.out.print( x );</span><br><span class="line">         System.out.print(<span class="string">","</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">      String [] names = &#123;<span class="string">"James"</span>, <span class="string">"Larry"</span>, <span class="string">"Tom"</span>, <span class="string">"Lacy"</span>&#125;;</span><br><span class="line">      <span class="keyword">for</span>( String name : names ) &#123;</span><br><span class="line">         System.out.print( name );</span><br><span class="line">         System.out.print(<span class="string">","</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环控制"><a class="markdownIt-Anchor" href="#循环控制"></a> 循环控制</h2><p><code>break</code>、<code>continue</code> 在 Java 中也同样有效。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-7-运算</title>
      <link href="/2019/04/18/Java/Day7_Java_Operators/"/>
      <url>/2019/04/18/Java/Day7_Java_Operators/</url>
      
        <content type="html"><![CDATA[<h1 id="java-运算符"><a class="markdownIt-Anchor" href="#java-运算符"></a> Java 运算符</h1><p>Java 中的运算符与 C 中基本一致。</p><h2 id="算术运算符"><a class="markdownIt-Anchor" href="#算术运算符"></a> 算术运算符</h2><table><thead><tr><th>操作符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td><code>+</code></td><td>加法 : 相加运算符两侧的值</td><td><code>A + B</code> 等于 30</td></tr><tr><td><code>-</code></td><td>减法 : 左操作数减去右操作数</td><td><code>A – B</code> 等于 -10</td></tr><tr><td><code>*</code></td><td>乘法 : 相乘操作符两侧的值</td><td><code>A * B</code> 等于200</td></tr><tr><td><code>/</code></td><td>除法 : 左操作数除以右操作数</td><td><code>B / A</code> 等于2</td></tr><tr><td><code>++</code></td><td>自增: 操作数的值增加1</td><td><code>B++</code> 或 <code>++B</code> 等于 21</td></tr><tr><td><code>--</code></td><td>自减: 操作数的值减少1</td><td><code>B--</code> 或 <code>--B</code> 等于 19</td></tr></tbody></table><h2 id="关系运算符"><a class="markdownIt-Anchor" href="#关系运算符"></a> 关系运算符</h2><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td><code>==</code></td><td>检查如果两个操作数的值是否相等，如果相等则条件为真。</td><td><code>(A == B)</code>为假。</td></tr><tr><td><code>!=</code></td><td>检查如果两个操作数的值是否相等，如果值不相等则条件为真。</td><td><code>(A != B)</code> 为真。</td></tr><tr><td><code>&gt;</code></td><td>检查左操作数的值是否大于右操作数的值，如果是那么条件为真。</td><td><code>(A &gt; B)</code>为假。</td></tr><tr><td><code>&lt;</code></td><td>检查左操作数的值是否小于右操作数的值，如果是那么条件为真。</td><td><code>(A &lt; B)</code>为真。</td></tr><tr><td><code>&gt;=</code></td><td>检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。</td><td><code>(A &gt;= B)</code>为假。</td></tr><tr><td><code>&lt;=</code></td><td>检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。</td><td><code>(A &lt;= B)</code>为真。</td></tr></tbody></table><h2 id="逻辑运算符"><a class="markdownIt-Anchor" href="#逻辑运算符"></a> 逻辑运算符</h2><table><thead><tr><th>操作符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td><code>&amp;&amp;</code></td><td>称为逻辑与运算符。当且仅当两个操作数都为真，条件才为真。</td><td><code>(A &amp;&amp; B)</code> 为假。</td></tr><tr><td><code>||</code></td><td>称为逻辑或操作符。如果任何两个操作数任何一个为真，条件为真。</td><td><code>A || B)</code> 为真。</td></tr><tr><td><code>!</code></td><td>称为逻辑非运算符。用来反转操作数的逻辑状态。如果条件为true，则逻辑非运算符将得到false。</td><td><code>!(A &amp;&amp; B)</code> 为真。</td></tr></tbody></table><h2 id="位运算符"><a class="markdownIt-Anchor" href="#位运算符"></a> 位运算符</h2><table><thead><tr><th>操作符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td><code>＆</code></td><td>如果相对应位都是1，则结果为1，否则为0</td><td><code>(A＆B)</code>，得到12，即0000 1100</td></tr><tr><td><code>|</code></td><td>如果相对应位都是0，则结果为0，否则为1</td><td><code>(A | B)</code>得到61，即 0011 1101</td></tr><tr><td><code>^</code></td><td>如果相对应位值相同，则结果为0，否则为1</td><td><code>(A ^ B)</code>得到49，即 0011 0001</td></tr><tr><td><code>~</code></td><td>按位取反运算符翻转操作数的每一位，即0变成1，1变成0。</td><td><code>(〜A)</code>得到-61，即1100 0011</td></tr><tr><td><code>&lt;&lt;</code></td><td>按位左移运算符。左操作数按位左移右操作数指定的位数。</td><td><code>A &lt;&lt; 2</code> 得到240，即 1111 0000</td></tr><tr><td><code>&gt;&gt;</code></td><td>按位右移运算符。左操作数按位右移右操作数指定的位数。</td><td><code>A &gt;&gt; 2</code> 得到15即 1111</td></tr><tr><td><code>&gt;&gt;&gt;</code></td><td>按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。</td><td><code>A&gt;&gt;&gt;2</code> 得到15即0000 1111</td></tr></tbody></table><h2 id="赋值运算符"><a class="markdownIt-Anchor" href="#赋值运算符"></a> 赋值运算符</h2><table><thead><tr><th>操作符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td><code>=</code></td><td>简单的赋值运算符，将右操作数的值赋给左侧操作数</td><td><code>C = A + B</code> 将把A + B得到的值赋给C</td></tr><tr><td><code>+=</code></td><td>加和赋值操作符，它把左操作数和右操作数相加赋值给左操作数</td><td><code>C += A</code> 等价于C = C + A</td></tr></tbody></table><p>类似 <code>+=</code> ，其他的<em>算数运算符</em>、<em>位运算符</em>、<em>逻辑运算符</em>都可以加在 <code>=</code> 前面。</p><h2 id="条件运算符"><a class="markdownIt-Anchor" href="#条件运算符"></a> 条件运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">variable x = (expression) ? value_if_true : value_if_false;</span><br></pre></td></tr></table></figure><h2 id="instanceof-运算符"><a class="markdownIt-Anchor" href="#instanceof-运算符"></a> <code>instanceof</code> 运算符</h2><p>该运算符用于操作对象实例，检查该对象是否是一个特定类型（类类型或接口类型）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">variable <span class="keyword">instanceof</span> class_or_interface_type_name;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String name = &quot;James&quot;;</span><br><span class="line">boolean result = name instanceof String; // 由于 name 是 String 类型，所以返回真</span><br></pre></td></tr></table></figure><h2 id="运算符的优先级"><a class="markdownIt-Anchor" href="#运算符的优先级"></a> 运算符的优先级</h2><p>详见<a href="http://www.runoob.com/java/java-operators.html" target="_blank" rel="noopener">参考</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-6-修饰符</title>
      <link href="/2019/04/17/Java/Day6_Java_Modifier/"/>
      <url>/2019/04/17/Java/Day6_Java_Modifier/</url>
      
        <content type="html"><![CDATA[<h1 id="java-修饰符"><a class="markdownIt-Anchor" href="#java-修饰符"></a> Java 修饰符</h1><blockquote><p>修饰符用来定义类、方法或者变量，通常放在语句的最前端。</p></blockquote><p>Java 中的<strong>修饰符</strong>主要分为两类：</p><ul><li>访问修饰符：Java 通过访问控制符来保护对类、变量、方法和构造方法的访问；</li><li>非访问修饰符：Java 为了实现一些其他的功能而设定的修饰符；</li></ul><h2 id="访问修饰符"><a class="markdownIt-Anchor" href="#访问修饰符"></a> 访问修饰符</h2><p>Java中，可以使用访问控制符来保护对类、变量、方法和构造方法的访问。Java 支持 4 种不同的访问权限。</p><ul><li><code>default</code> (缺省值）: 在同一包内可见，不使用任何修饰符。使用对象：类、接口、变量、方法。</li><li><code>private</code> : 在同一类内可见。使用对象：变量、方法。 注意：不能修饰类（外部类）</li><li><code>public</code> : 对所有类可见。使用对象：类、接口、变量、方法</li><li><code>protected</code> : 对同一包内的类和所有子类可见。使用对象：变量、方法。 注意：不能修饰类（外部类）。<ul><li>子类与基类在同一包中：被声明为 <code>protected</code> 的变量、方法和构造器能被同一个包中的任何其他类访问；</li><li>子类与基类不在同一包中：那么在子类中，子类实例可以访问其从基类继承而来的 <code>protected</code> 方法，而不能访问基类实例的 <code>protected</code> 方法。</li></ul></li></ul><table><thead><tr><th>修饰符</th><th>当前类</th><th>同一包内</th><th>子孙类(同一包)</th><th>子孙类(不同包)</th><th>其他包</th></tr></thead><tbody><tr><td>public</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td><td>Y</td></tr><tr><td>protected</td><td>Y</td><td>Y</td><td>Y</td><td>Y/N</td><td>N</td></tr><tr><td>default</td><td>Y</td><td>Y</td><td>Y</td><td>N</td><td>N</td></tr><tr><td>private</td><td>Y</td><td>N</td><td>N</td><td>N</td><td>N</td></tr></tbody></table><p>⚠️【注意】</p><ol><li>在不写任何修饰符的情况下（如 <code>int a = 1;</code>），<strong>接口</strong> 里的变量都隐式声明为 <code>public static final</code>,而接口里的方法默认情况下访问权限为 <code>public</code>。</li><li><code>protected</code> 可以修饰数据成员，构造方法，方法成员，不能修饰类（内部类除外）。接口及接口的成员变量和成员方法不能声明为 <code>protected</code>。详见<a href="http://www.runoob.com/w3cnote/java-protected-keyword-detailed-explanation.html" target="_blank" rel="noopener">参考</a> 。</li></ol><h4 id="访问控制符的继承"><a class="markdownIt-Anchor" href="#访问控制符的继承"></a> 访问控制符的继承</h4><ul><li>父类中声明为 <code>public</code> 的方法在子类中也必须为 <code>public</code> 。</li><li>父类中声明为 <code>protected</code> 的方法在子类中要么声明为 <code>protected</code> ，要么声明为 <code>public</code> ，不能声明为 <code>private</code> 。</li><li>父类中声明为 <code>private</code> 的方法，不能够被继承。</li></ul><h2 id="非访问修饰符"><a class="markdownIt-Anchor" href="#非访问修饰符"></a> 非访问修饰符</h2><h4 id="static-修饰符"><a class="markdownIt-Anchor" href="#static-修饰符"></a> <code>static</code> 修饰符</h4><ul><li><p>静态变量：<br><code>static</code> 关键字用来声明独立于对象的静态变量，无论一个类实例化多少对象，它的静态变量只有一份拷贝。 静态变量也被称为类变量。局部变量不能被声明为 <code>static</code> 变量。</p></li><li><p>静态方法：<br><code>static</code> 关键字用来声明独立于对象的静态方法。静态方法不能使用类的非静态变量。静态方法从参数列表得到数据，然后计算这些数据。</p></li></ul><p>对类变量和方法的访问可以直接使用 <code>classname.variablename</code> 和 <code>classname.methodname</code> 的方式访问。</p><h4 id="final-修饰符"><a class="markdownIt-Anchor" href="#final-修饰符"></a> <code>final</code> 修饰符</h4><ul><li><code>final</code> 变量:<br>常量，一旦赋值后，不能被重新赋值。</li><li><code>final</code> 类:<br>不能被继承，没有类能够继承 <code>final</code> 类的任何特性。</li><li><code>final</code> 方法:<br>类中的 final 方法可以被子类继承，但是不能被子类修改。<br>声明 final 方法的主要目的是防止该方法的内容被修改。</li></ul><p><code>final</code> 修饰符通常和 static 修饰符一起使用来创建类常量。</p><h4 id="abstract-修饰符"><a class="markdownIt-Anchor" href="#abstract-修饰符"></a> <code>abstract</code> 修饰符</h4><ul><li>抽象类：<br>抽象类不能用来实例化对象，声明抽象类的唯一目的是为了将来对该类进行扩充。</li></ul><p>一个类不能同时被 abstract 和 final 修饰。</p><p>抽象类可以包含抽象方法和非抽象方法。</p><p>任何继承抽象类的子类必须实现父类的所有抽象方法，除非该子类也是抽象类。</p><ul><li>抽象方法：<br>抽象方法是一种没有任何实现的方法，该方法的的具体实现由子类提供。</li></ul><p>抽象方法不能被声明成 final 和 static。</p><p>⚠️【注意】如果一个类包含抽象方法，那么该类一定要声明为抽象类，否则将出现编译错误。</p><h4 id="synchronized-修饰符"><a class="markdownIt-Anchor" href="#synchronized-修饰符"></a> <code>synchronized</code> 修饰符</h4><p><code>synchronized</code> 关键字声明的方法同一时间只能被一个线程访问。</p><h4 id="transient-修饰符"><a class="markdownIt-Anchor" href="#transient-修饰符"></a> <code>transient</code> 修饰符</h4><p>详见 <a href="http://www.runoob.com/java/java-modifier-types.html" target="_blank" rel="noopener">参考</a>。</p><h4 id="volatile-修饰符"><a class="markdownIt-Anchor" href="#volatile-修饰符"></a> <code>volatile</code> 修饰符</h4><p>详见 <a href="http://www.runoob.com/java/java-modifier-types.html" target="_blank" rel="noopener">参考</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-5-变量</title>
      <link href="/2019/04/16/Java/Day5_Java_Variable/"/>
      <url>/2019/04/16/Java/Day5_Java_Variable/</url>
      
        <content type="html"><![CDATA[<h1 id="java-中的变量类型"><a class="markdownIt-Anchor" href="#java-中的变量类型"></a> Java 中的变量类型</h1><h2 id="局部变量"><a class="markdownIt-Anchor" href="#局部变量"></a> <strong>局部变量</strong></h2><blockquote><p>在<em>方法</em>或<em>语句块</em>中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量就会自动销毁。</p></blockquote><ul><li>局部变量声明在方法、构造方法或者语句块中；</li><li>局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量将会被销毁；</li><li>访问修饰符不能用于局部变量；</li><li>局部变量只在声明它的方法、构造方法或者语句块中可见；</li><li>局部变量是在栈上分配的。</li><li>局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。</li></ul><h2 id="成员变量实例变量"><a class="markdownIt-Anchor" href="#成员变量实例变量"></a> <strong>成员变量(实例变量)</strong></h2><blockquote><p>成员变量是定义在类中，<em>方法体之外</em>的变量。这种变量在创建对象的时候实例化。成员变量可以被类中方法、构造方法和特定类的语句块访问。</p></blockquote><ul><li>实例变量声明在一个类中，但在方法、构造方法和语句块之外；</li><li>当一个对象被实例化之后，每个实例变量的值就跟着确定；</li><li>实例变量在对象创建的时候创建，在对象被销毁的时候销毁；</li><li>实例变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息；</li><li>实例变量可以声明在使用前或者使用后；</li><li>访问修饰符可以修饰实例变量；</li><li>实例变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见；</li><li>实例变量具有默认值。数值型变量的默认值是<code>0</code>，布尔型变量的默认值是<code>false</code>，引用类型变量的默认值是<code>null</code>。变量的值可以在声明时指定，也可以在构造方法中指定；</li><li>实例变量可以直接通过变量名访问。但在静态方法以及其他类中，就应该使用完全限定名：<code>ObejectReference.VariableName</code>。</li></ul><h2 id="类变量"><a class="markdownIt-Anchor" href="#类变量"></a> <strong>类变量</strong></h2><blockquote><p>类变量也声明在类中，方法体之外，但必须声明为 <code>static</code> 类型。</p></blockquote><ul><li>类变量也称为静态变量，在类中以 <code>static</code> 关键字声明，但必须在方法之外。</li><li>无论一个类创建了多少个对象，类只拥有类变量的一份拷贝。</li><li>静态变量除了被声明为常量外很少使用。常量是指声明为 <code>public</code> / <code>private</code>, <code>final</code> 和 <code>static</code> 类型的变量。常量初始化后不可改变。</li><li>静态变量储存在静态存储区。经常被声明为常量，很少单独使用 <code>static</code> 声明变量。</li><li>静态变量在第一次被访问时创建，在程序结束时销毁。</li><li>与实例变量具有相似的可见性。但为了对类的使用者可见，大多数静态变量声明为 <code>public</code> 类型。</li><li>默认值和实例变量相似。数值型变量默认值是 <code>0</code>，布尔型默认值是 <code>false</code>，引用类型默认值是 <code>null</code>。变量的值可以在声明的时候指定，也可以在构造方法中指定。此外，静态变量还可以在静态语句块中初始化。</li><li>静态变量可以通过：<code>ClassName.VariableName</code> 的方式访问。</li><li>类变量被声明为 <code>public static final</code> 类型时，类变量名称一般建议使用大写字母。如果静态变量不是 <code>public</code> 和 <code>final</code> 类型，其命名方式与实例变量以及局部变量的命名方式一致。</li></ul><h4 id="关于-类变量-的说明"><a class="markdownIt-Anchor" href="#关于-类变量-的说明"></a> 关于 <strong>类变量</strong> 的说明：</h4><blockquote><p>The static keyword in Java is used for memory management mainly. We can apply java static keyword with variables, methods, blocks and nested class. The static keyword belongs to the class than an instance of the class. The static can be: Variable (also known as a class variable) Method (also known as a class method) Block.</p></blockquote><p>（部分翻译）</p><blockquote><p>Java 中的 <code>static</code> 关键字主要用于 <em>memory management</em>（谷歌翻译给出的翻译是“内存管理”, 但我对这个词的理解是：安排出一个内存空间来，供类的实例之间共享某个量）。我们可以将 java 的 <code>static</code> 关键字施用于变量、方法、语句块和嵌套类。<code>static</code> 定义的对象是属于整个类的, 而不是某个类的实例。</p></blockquote><p>普通的变量属于类的某一个特定的实例，但用 <code>static</code> 关键字修饰的变量将属于一个类。也就是说，我们通过类的某一个实例去修改一个一般的变量值，将只有这个实例中的值被修改，其他实例不受影响；而若是修改一个 <code>static</code> 关键字修饰的<strong>类变量</strong>，这个类的所有实例的这个值都会被修改。</p><p>说起来比较麻烦，可以看一段示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Static</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Example foo = <span class="keyword">new</span> Example();</span><br><span class="line">Example bar = <span class="keyword">new</span> Example();</span><br><span class="line"></span><br><span class="line">foo.staticVar = foo.normalVar = <span class="string">"foobar"</span>;</span><br><span class="line"></span><br><span class="line">System.out.println(foo.staticVar + <span class="string">"\t"</span> + foo.normalVar);</span><br><span class="line">System.out.println(bar.staticVar + <span class="string">"\t"</span> + bar.normalVar);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> String staticVar = <span class="string">"Example"</span>;</span><br><span class="line">String normalVar = <span class="string">"Example"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foobarfoobar</span><br><span class="line">foobarExample</span><br></pre></td></tr></table></figure><p>可以看到，我们只改变了 <code>foo</code> 实例的值，但由 <code>static</code> 修饰的类变量 <code>staticVar</code> 的改变在 <code>bar</code> 中也出现了，而普通的成员变量则不然。</p><p>利用这种特性，我们可以实现一种可以统计自己的实例个数的类，详见 <a href="src/CountingClass.java"><code>CountingClass.java</code></a></p><hr><p>相关代码：</p><p><a href="src/Static.java"><code>Static.java</code></a><br><a href="src/CountingClass.java"><code>CountingClass.java</code></a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-4-基本数据类型</title>
      <link href="/2019/04/15/Java/Day4_Java_Types/"/>
      <url>/2019/04/15/Java/Day4_Java_Types/</url>
      
        <content type="html"><![CDATA[<h1 id="java-基本数据类型"><a class="markdownIt-Anchor" href="#java-基本数据类型"></a> Java 基本数据类型</h1><p>Java 的两大数据类型:</p><ul><li>内置数据类型</li><li>引用数据类型</li></ul><h2 id="内置数据类型"><a class="markdownIt-Anchor" href="#内置数据类型"></a> 内置数据类型</h2><p>对于每一种 数据类型 都有一个 <strong>包装类</strong>，如：<code>void</code>类型的包装类是 <code>java.lang.Void</code>。</p><p>对于数值类型的包装类，我们都可以从中获取对应类型的二进制位数、取值范围。</p><table><thead><tr><th>原语</th><th>对应的 JDK 类</th></tr></thead><tbody><tr><td>boolean</td><td>java.lang.Boolean</td></tr><tr><td>byte</td><td>java.lang.Byte</td></tr><tr><td>char</td><td>java.lang.Character</td></tr><tr><td>short</td><td>java.lang.Short</td></tr><tr><td>int</td><td>java.lang.Integer</td></tr><tr><td>long</td><td>java.lang.Long</td></tr><tr><td>float</td><td>java.lang.Float</td></tr><tr><td>double</td><td>java.lang.Double</td></tr></tbody></table><p>具体的例子，见 <a href="./src/PrimitiveTypes.java"><code>PrimitiveTypes.java</code></a></p><p>下面，分类介绍 Java 中的内置数据类型：</p><h3 id="void"><a class="markdownIt-Anchor" href="#void"></a> void</h3><p>代表空的值的类型。</p><h3 id="整数型"><a class="markdownIt-Anchor" href="#整数型"></a> 整数型</h3><table><thead><tr><th>类型</th><th>说明</th><th>范围</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td><code>byte</code></td><td>8位, 有符号, 以二进制补码表示的整数</td><td><code>-128</code>~<code>127</code></td><td><code>0</code></td><td>用在大型数组中节约空间</td></tr><tr><td><code>short</code></td><td>16位, 有符号, 以二进制补码表示的整数</td><td><code>-32768</code>~<code>32767</code></td><td><code>0</code></td><td></td></tr><tr><td><code>int</code></td><td>32位, 有符号, 以二进制补码表示的整数</td><td><code>-2147483648</code>~<code>2147483647</code></td><td><code>0</code></td><td>一般地整型变量默认为 int 类型</td></tr><tr><td><code>long</code></td><td>64位, 有符号, 以二进制补码表示的整数</td><td><code>-2^63</code>~<code>2^63-1</code></td><td><code>0L</code></td><td>字面值常量是数后面加&quot;L&quot;(&quot;L&quot;理论上不分大小写，但小写不易分辩，最好大写)</td></tr></tbody></table><p>整型字面值常量都可以用十(正常书写)、八(以<code>0</code>开头)、十六(以<code>0x</code>开头)进制表示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int decimal = 100;</span><br><span class="line">int octal = 0114;</span><br><span class="line">int hexadecimal = 0x64;</span><br></pre></td></tr></table></figure><h3 id="浮点型"><a class="markdownIt-Anchor" href="#浮点型"></a> 浮点型</h3><blockquote><p>浮点数不能用来表示精确的值。</p></blockquote><table><thead><tr><th>类型</th><th>说明</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td><code>float</code></td><td>单精度、32位、符合 IEEE 754 标准的浮点数</td><td><code>0.0f</code></td><td>float 在储存大型浮点数组的时候可节省内存空间</td></tr><tr><td><code>double</code></td><td>双精度、64 位、符合IEEE 754标准的浮点数</td><td><code>0.0d</code></td><td>浮点数的默认类型为double类型</td></tr></tbody></table><h3 id="字符型"><a class="markdownIt-Anchor" href="#字符型"></a> 字符型</h3><table><thead><tr><th>类型</th><th>说明</th><th>范围</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td><code>char</code></td><td>char类型是一个单一的 16 位 Unicode 字符</td><td><code>\u0000</code>~<code>\uffff</code></td><td>字面值常量是单引号里字符(如：<code>'A'</code>)</td><td></td></tr></tbody></table><h3 id="布尔型"><a class="markdownIt-Anchor" href="#布尔型"></a> 布尔型</h3><table><thead><tr><th>类型</th><th>说明</th><th>取值</th><th>默认值</th></tr></thead><tbody><tr><td><code>boolean</code></td><td>表示一位的信息</td><td><code>true</code> 和 <code>false</code></td><td><code>false</code></td></tr></tbody></table><h2 id="引用数据类型"><a class="markdownIt-Anchor" href="#引用数据类型"></a> 引用数据类型</h2><blockquote><p>引用类型指向一个对象，指向对象的变量是引用变量。</p></blockquote><p>对象、数组都是引用数据类型。</p><p>所有引用类型的默认值都是 <code>null</code>。</p><p>引用变量一旦声明后，类型就不能被改变了，但一个引用变量可以用来引用任何与之兼容的类型。</p><h2 id="java-变量"><a class="markdownIt-Anchor" href="#java-变量"></a> Java 变量</h2><p>声明一个变量，需要使用如下的格式的语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type varName;</span><br></pre></td></tr></table></figure><p>也可以在声明的同时，对它初始化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type varName = initialValue;</span><br></pre></td></tr></table></figure><p>【注】初始化一个对象时，使用：<code>ClassName instanceName = new ClassName();</code></p><h3 id="常量"><a class="markdownIt-Anchor" href="#常量"></a> 常量</h3><p>常量在程序运行时是不能被修改的。</p><h4 id="字面值常量"><a class="markdownIt-Anchor" href="#字面值常量"></a> 字面值常量</h4><p>字面值常量，就是直接在程序里写一个值，比如 <code>100</code>, <code>-100.0</code>, <code>'A'</code>…<br>这个东西很好理解，特殊的已经在上面的内置类型表格中有说明了。</p><p>字面值常量可以赋给任何内置类型的变量。</p><h4 id="声明常量"><a class="markdownIt-Anchor" href="#声明常量"></a> 声明常量</h4><p>我们也可以像声明变量一样声明一个常量。</p><p>在 Java 中，使用 <code>final</code> 关键字来修饰常量，声明方式和变量类似：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">final double PI = 3.1415927;</span><br></pre></td></tr></table></figure><p>按照惯例，常量名应该用<strong>全部大写</strong>的名称表示。</p><h4 id="字符串常量"><a class="markdownIt-Anchor" href="#字符串常量"></a> 字符串常量</h4><p>和其他语言一样，Java的字符串常量也是包含在两个引号之间的字符序列，其中可以使用转义字符，也可以含有Unicode字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;Hello World&quot;</span><br><span class="line">&quot;two\nlines&quot;</span><br><span class="line">&quot;\&quot;This is in quotes\&quot;&quot;</span><br><span class="line">&quot;\u0001&quot;</span><br></pre></td></tr></table></figure><p>常用的转义字符如下：</p><table><thead><tr><th>符号</th><th>字符含义</th></tr></thead><tbody><tr><td><code>\n</code></td><td>换行 (0x0a)</td></tr><tr><td><code>\r</code></td><td>回车 (0x0d)</td></tr><tr><td><code>\f</code></td><td>换页符(0x0c)</td></tr><tr><td><code>\b</code></td><td>退格 (0x08)</td></tr><tr><td><code>\0</code></td><td>空字符 (0x20)</td></tr><tr><td><code>\t</code></td><td>制表符</td></tr><tr><td><code>\&quot;</code></td><td>双引号</td></tr><tr><td><code>\'</code></td><td>单引号</td></tr><tr><td><code>\\</code></td><td>反斜杠</td></tr><tr><td><code>\ddd</code></td><td>八进制字符 (ddd)</td></tr><tr><td><code>\uxxxx</code></td><td>16进制Unicode字符 (xxxx)</td></tr></tbody></table><h3 id="类型转换"><a class="markdownIt-Anchor" href="#类型转换"></a> 类型转换</h3><p>Java 中类型的转换有以下规则：</p><ol><li>不能对boolean类型进行类型转换。</li><li>不能把对象类型转换成不相关类的对象。</li><li>在把容量大的类型转换为容量小的类型时必须使用强制类型转换。</li><li>转换过程中可能导致溢出或损失精度。</li><li>浮点数到整数的转换是通过舍弃小数得到，而不是四舍五入。</li></ol><h4 id="自动类型转换"><a class="markdownIt-Anchor" href="#自动类型转换"></a> 自动类型转换</h4><p>在自动类型转换中，类型总是从<strong>低级</strong>到<strong>高级</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">低  ----------------------------------------&gt;  高</span><br><span class="line"></span><br><span class="line">byte, short, char —&gt; int —&gt; long —&gt; float —&gt; double</span><br></pre></td></tr></table></figure><p>⚠️【注意】在进行整数运算时，如果是两个比int类型小的类型做运算，java在编译的时候就会将它们统一强转成int类型。当有比int类型大的类型运算时，会自动转换成它们中最大类型那个。</p><h4 id="强制类型转换"><a class="markdownIt-Anchor" href="#强制类型转换"></a> 强制类型转换</h4><p>通过下面这种语句可以强制类型转化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(type)value</span><br></pre></td></tr></table></figure><p>⚠️【注意】转换的数据类型必须是兼容的。</p><h4 id="数据类型转换的补充"><a class="markdownIt-Anchor" href="#数据类型转换的补充"></a> 数据类型转换的补充</h4><h5 id="1-包装类过渡类型转换"><a class="markdownIt-Anchor" href="#1-包装类过渡类型转换"></a> 1、包装类过渡类型转换</h5><p>一般情况下，我们首先声明一个变量，然后生成一个对应的包装类，就可以利用包装类的各种方法进行类型转换了。</p><p>例如：</p><p>当希望把float型转换为double型时：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> f1 = <span class="number">100.00f</span>;</span><br><span class="line">Float F1 = <span class="keyword">new</span> Float(f1);</span><br><span class="line"><span class="keyword">double</span> d1 = F1.doubleValue();     <span class="comment">//F1.doubleValue()为Float类的返回double值型的方法</span></span><br></pre></td></tr></table></figure><p>简单类型的变量转换为相应的包装类，可以利用包装类的构造函数。<br>即：<code>Boolean(boolean value)、Character(char value)</code>、<code>Integer(int value)</code>、<code>Long(long value)</code>、<code>Float(float value)</code>、<code>Double(double value)</code>。</p><p>而在各个包装类中，总有形为 <code>××Value()</code> 的方法，来得到其对应的简单类型数据。<br>利用这种方法，也可以实现不同数值型变量间的转换。<br>例如，对于一个双精度实型类，<code>intValue()</code> 可以得到其对应的整型变量，而 <code>doubleValue()</code> 可以得到其对应的双精度实型变量。</p><h5 id="2-字符串与其它类型间的转换"><a class="markdownIt-Anchor" href="#2-字符串与其它类型间的转换"></a> 2、字符串与其它类型间的转换</h5><h6 id="其它类型向字符串的转换"><a class="markdownIt-Anchor" href="#其它类型向字符串的转换"></a> 其它类型向字符串的转换</h6><ol><li>调用类的串转换方法: <code>X.toString();</code></li><li>自动转换: <code>X+&quot;&quot;;</code></li><li>使用String的方法: <code>String.valueOf(X);</code></li></ol><p>⚠️【注意】在使用 <code>2</code> 时需要注意：<strong>任何字符类型与字符串相加，结果都是拼接。</strong><br>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="keyword">null</span>;</span><br><span class="line">s += <span class="string">"hello"</span>;</span><br><span class="line">System.out.println(s);  <span class="comment">// 输出 nullhello</span></span><br></pre></td></tr></table></figure><h6 id="字符串作为值向其它类型的转换"><a class="markdownIt-Anchor" href="#字符串作为值向其它类型的转换"></a> 字符串作为值,向其它类型的转换</h6><ol><li>先转换成相应的封装器实例,再调用对应的方法转换成其它类型</li></ol><p>例如，字符串 <code>&quot;32.1&quot;</code> 转换 <code>double</code> 型的值的格式为: <code>new Float(&quot;32.1&quot;).doubleValue()</code></p><p>也可以用: <code>Double.valueOf(&quot;32.1&quot;).doubleValue()</code></p><ol start="2"><li>静态parseXXX方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="string">"1"</span>;</span><br><span class="line"><span class="keyword">byte</span> b = Byte.parseByte( s );</span><br><span class="line"><span class="keyword">short</span> t = Short.parseShort( s );</span><br><span class="line"><span class="keyword">int</span> i = Integer.parseInt( s );</span><br><span class="line"><span class="keyword">long</span> l = Long.parseLong( s );</span><br><span class="line">Float f = Float.parseFloat( s );</span><br><span class="line">Double d = Double.parseDouble( s );</span><br></pre></td></tr></table></figure><h5 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h5><ol><li>只有 boolean 不参与数据类型的转换</li><li>自动类型的转换：<ul><li>常数在表数范围内是能够自动类型转换的</li><li>数据范围小的能够自动数据类型大的转换</li><li>由浮点类型转换成整数类型不会自动转换的，不然将会丢失精度。</li><li>引用类型能够自动转换为父类的</li><li>基本类型和它们包装类型是能够互相转换的</li></ul></li><li>强制类型转换：用圆括号括起来目标类型，置于变量前</li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-3-类和对象</title>
      <link href="/2019/04/14/Java/Day3_Java_Class/"/>
      <url>/2019/04/14/Java/Day3_Java_Class/</url>
      
        <content type="html"><![CDATA[<h1 id="java-中的类和对象"><a class="markdownIt-Anchor" href="#java-中的类和对象"></a> Java 中的类和对象</h1><blockquote><p>类可以看成是创建Java对象的模板</p></blockquote><h2 id="类的定义"><a class="markdownIt-Anchor" href="#类的定义"></a> 类的定义</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类中变量的类型"><a class="markdownIt-Anchor" href="#类中变量的类型"></a> 类中变量的类型</h2><ul><li><p><strong>局部变量</strong>：在<em>方法</em>或<em>语句块</em>中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量就会自动销毁。</p></li><li><p><strong>成员变量(实例变量)</strong>：成员变量是定义在类中，<em>方法体之外</em>的变量。这种变量在创建对象的时候实例化。成员变量可以被类中方法、构造方法和特定类的语句块访问。</p></li><li><p><strong>类变量</strong>：类变量也声明在类中，方法体之外，但必须声明为 <code>static</code> 类型。</p></li></ul><blockquote><p>这里只是简单介绍，详见 <a href="./Day5_Java_Variable.md">Day5_Java_Variable.md</a></p></blockquote><h2 id="构造方法"><a class="markdownIt-Anchor" href="#构造方法"></a> 构造方法</h2><p>构造方法的名称必须与类同名，一个类可以有多个构造方法。</p><p>在创建一个对象的时候，至少要调用一个构造方法。<br>如果没有显式地为类定义构造方法，Java编译器将会为该类提供一个默认构造方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Dog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"构造Dog"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重载方法"><a class="markdownIt-Anchor" href="#重载方法"></a> 重载方法</h2><p>创建两个具有相同名称和不同参数列表（即不同的参数数量或类型）的方法时，就拥有了一个<em>重载</em> 方法。</p><p>在运行时，JRE 基于传递给它的参数来决定调用您的重载方法的哪个变体。</p><p>我们甚至可以在一个方法中调用另一个同名的重载方法。</p><p>但要注意：在使用重载方法时，</p><ul><li>不能仅通过更改一个方法的返回类型来重载它。</li><li>不能拥有两个具有相同名称和相同参数列表的方法。</li></ul><h2 id="继承"><a class="markdownIt-Anchor" href="#继承"></a> 继承</h2><p>要表示一个类继承自某一个超类，我们可以在声明类时，在 className 后加上 <code>extends</code>，例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> <span class="keyword">extends</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"><span class="comment">// Employee 继承自 Person</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(String name, <span class="keyword">int</span> age, <span class="keyword">int</span> height, <span class="keyword">int</span> weight,</span></span></span><br><span class="line"><span class="function"><span class="params">  String eyeColor, String gender)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(name, age, height, weight, eyeColor, gender);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在构造函数中，调用 <code>super([args])</code> 来初始化父类。</p><h3 id="重写方法"><a class="markdownIt-Anchor" href="#重写方法"></a> 重写方法</h3><p>如果一个子类提供其父类中定义的方法的自有实现，这被称为<em>方法重写</em>。</p><p>重写的形式类似于重载，但需要加上一个 <code>@Override</code>。例如，当父类中有一个 <code>foo()</code> 方法时，我们可以在子类中这样重写它：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">foo</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">super</span>.foo();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【注】这段代码是使用 Eclipse 自动生成的，它只是调用了父类中的方法（<code>super.foo()</code>），没有任何改变，但实际中我们不会这么使用。</p><p>重写后，<strong>在类中</strong>直接使用 <code>method()</code>调用重写后的函数，但我们任然可以通过 <code>super.method()</code> 调用父类中的（重写前的）方法。</p><h2 id="创建对象"><a class="markdownIt-Anchor" href="#创建对象"></a> 创建对象</h2><p>对象是根据类创建的。<br>创建对象需要以下三步：</p><ul><li>声明：声明一个对象，包括对象名称和对象类型。</li><li>实例化：使用关键字 <code>new</code> 来创建一个对象。</li><li>初始化：使用 <code>new</code> 创建对象时，会调用构造方法初始化对象。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Dog Dog0 = <span class="keyword">new</span> Dog();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="访问实例变量和方法"><a class="markdownIt-Anchor" href="#访问实例变量和方法"></a> 访问实例变量和方法</h2><ul><li>访问实例的变量：<code>实例名.变量名</code></li><li>调用实例的方法：<code>实例名.方法名()</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">String name;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">(String food)</span> </span>&#123;</span><br><span class="line">System.out.println(name + <span class="string">" is eating "</span> + food + <span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Dog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">name = <span class="string">"Dog"</span>;</span><br><span class="line">age = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"构造()："</span>);</span><br><span class="line">System.out.println(name + <span class="string">"\t"</span> + age);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Dog</span><span class="params">(String dogName, <span class="keyword">int</span> dogAge)</span> </span>&#123;</span><br><span class="line">name = dogName;</span><br><span class="line">age = dogAge;</span><br><span class="line">System.out.println(<span class="string">"构造(name, age)："</span>);</span><br><span class="line">System.out.println(name + <span class="string">"\t"</span> + age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Dog Dog0 = <span class="keyword">new</span> Dog();</span><br><span class="line">Dog Dog1 = <span class="keyword">new</span> Dog(<span class="string">"FooBar"</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问变量 </span></span><br><span class="line">Dog0.name = <span class="string">"Ana"</span>;</span><br><span class="line">System.out.println(Dog0.name);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问方法</span></span><br><span class="line">Dog1.eat(<span class="string">"cat"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行👆上面代码将输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">构造()：</span><br><span class="line">Dog0</span><br><span class="line">构造(name, age)：</span><br><span class="line">FooBar3</span><br><span class="line">Ana</span><br><span class="line">FooBar is eating cat.</span><br></pre></td></tr></table></figure><h2 id="比较对象"><a class="markdownIt-Anchor" href="#比较对象"></a> 比较对象</h2><p>Java 语言提供了两种比较对象的方法：</p><ul><li><code>==</code> 运算符</li><li><code>equals()</code> 方法</li></ul><h3 id="使用-比较对象"><a class="markdownIt-Anchor" href="#使用-比较对象"></a> 使用 <code>==</code> 比较对象</h3><p><code>==</code> 语法比较对象是否相等，只有在 <code>a</code> 和 <code>b</code> 相等时，<code>a == b</code> 才返回 <code>true</code>。</p><p>对于内置基本类型，需要<em>它们的值相等</em>。</p><p>对于对象，需要两个对象引用<em>同一个对象实例</em>。</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Equals</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Logger l = Logger.getLogger(<span class="string">"Test"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">12</span>,</span><br><span class="line">j = <span class="number">12</span>,</span><br><span class="line">k = <span class="number">99</span>;</span><br><span class="line">        </span><br><span class="line">Integer a = <span class="keyword">new</span> Integer(<span class="number">12</span>);</span><br><span class="line">Integer b = a;</span><br><span class="line">Integer c = <span class="keyword">new</span> Integer(<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">l.info(<span class="string">"i == j: "</span> + (i == j));</span><br><span class="line">l.info(<span class="string">"i == k: "</span> + (i == k));</span><br><span class="line"></span><br><span class="line">l.info(<span class="string">"a == b: "</span> + (a == b));</span><br><span class="line">l.info(<span class="string">"a == c: "</span> + (a == c));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行这段代码将得到如下结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i == j: true</span><br><span class="line">i == k: false</span><br><span class="line">a == b: true</span><br><span class="line">a == c: false</span><br></pre></td></tr></table></figure><p>⚠️【注】若使用 <code>a = Integer.valueOf(12);</code> 与 <code>c = Integer.valueOf(12);</code> 分别得到 a 和 c，则 <code>a == c</code> 将是 <code>true</code> ！</p><h3 id="使用-equals-比较对象"><a class="markdownIt-Anchor" href="#使用-equals-比较对象"></a> 使用 <code>equals()</code> 比较对象</h3><blockquote><p><code>equals()</code> 是每种 Java 语言对象都可以自由使用的方法，因为它被定义为 <code>java.lang.Object</code> 的一个实例方法（每个 Java 对象都继承该对象）。</p></blockquote><p>调用 <code>equals()</code> 的方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.equals(b);</span><br></pre></td></tr></table></figure><p>此语句调用对象 <code>a</code> 的 <code>equals()</code> 方法，向它传递对象 <code>b</code> 的引用。</p><p>默认情况下，Java 程序使用 <code>==</code> 语法检查两个对象是否相同。但是因为 <code>equals()</code> 是一种方法，所以它可以被重写。这样，对于任何对象，我们都可定义适合的 <code>equals()</code> 的含义。</p><p>【注】在重写 <code>equals()</code> 时，我们可以利用 <code>object.hashCode()</code>（ to return a hash code value for the object.）</p><hr><p>相关代码：</p><p><a href="./src/Dog.java"><code>Dog.java</code></a></p><p>参考：</p><p><a href="https://www.runoob.com/java/java-object-classes.html" target="_blank" rel="noopener">菜鸟教程 | Java 对象和类</a></p><p><a href="https://www.ibm.com/developerworks/cn/java/j-perry-next-steps-with-objects/index.html" target="_blank" rel="noopener">Java 编程入门 |  第 13 单元：对象的后续处理 </a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-2-面向对象</title>
      <link href="/2019/04/13/Java/Day2_OOP/"/>
      <url>/2019/04/13/Java/Day2_OOP/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象思想"><a class="markdownIt-Anchor" href="#面向对象思想"></a> 面向对象思想</h1><h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2><p>随着计算机技术的发展，我们想用计算机来解决越来越复杂的问题。问题越复杂，解决问题需要的抽象层往往越高。</p><p>编程语言的的发展，也顺应着这样的趋势。一开始的汇编语言只是对计算机硬件的简单抽象，C语言又对其进行了进一步的抽象，使其更加贴近问题而不是硬件；到了 Java，面向对象编程(OOP)的思想已近很成熟了，这是一种更加抽象的语言，对计算机硬件的表达更少，而对问题的描述更多。</p><h2 id="认识面向对象"><a class="markdownIt-Anchor" href="#认识面向对象"></a> 认识面向对象</h2><ul><li>什么是<em>对象</em>？</li></ul><p>对象就是一个存在的东西！</p><p>在面向过程的编程中，我们需要把一个问题转换成一系列的数据和操作数据的算法，同时我们还需要考虑这些数据和算法如何用计算机可以理解的方式表达出来，即遵照基础机器的表达方式。</p><p>对象的概念可为我们带来极大的便利。它在概念上允许我们将各式各样数据和功能封装到一起。这样便可恰当表达“问题空间”的概念，不用刻意遵照基础机器的表达方式。</p><ul><li>什么是<em>面向对象的程序设计</em>？</li></ul><p>面向对象编程，就是把一切问题的部分抽象成对象，用那些通用的特征和行为来描述他们，然后再处理这些对象之间的沟通，得到完整的问题描述，并通过给这些对象一些，信息让他们最终给出一个解。</p><ul><li><p>“纯粹”的面向对象程序设计方法是什么样的？</p><ol><li>所有东西都是对象。可将对象想象成一种新型变量；</li><li>程序是一大堆对象的组合；通过消息传递，各对象知道自己该做些什么。</li><li>每个对象都有自己的存储空间，可容纳其他对象。</li><li>每个对象都有一种类型。</li><li>同一类所有对象都能接收相同的消息。</li></ol></li></ul><h2 id="对象的接口"><a class="markdownIt-Anchor" href="#对象的接口"></a> 对象的接口</h2><p>所有对象，尽管各有特色，都属于某一系列对象的一部分，这些对象具有通用的特征和行为。</p><p>“接口”（Interface）就是把一种类型的对象的共同特征抽象出来，并将其表示。（大多数语言中我们使用关键字 <code>class</code> 来描述）</p><p>“类型”决定了接口，而“类”是那个接口的一种特殊实现方式。</p><p>接口建立的同时，也规定了可对一个特定的对象发出哪些请求。所以建好一个类后，可根据情况生成许多对象。随后，可将那些对象作为要解决问题中存在的元素进行处理。</p><h2 id="实现方案的隐藏"><a class="markdownIt-Anchor" href="#实现方案的隐藏"></a> 实现方案的隐藏</h2><p>在面向对象的程序设计的过程中，我们时常需要<em>控制对成员的访问</em>。</p><p>一方面，防止调用类的程序员接触到内部数据类型的设计思想。<br>另一方面，允许库设计人员修改内部结构，不用担心它会对客户程序员造成什么影响。</p><p>在我们的接口中，要实现这样的访问控制，把一部分设计细节隐藏起来，便需要一种机制来实现对访问的控制，在 Java 中这种控制用关键字 <code>public</code>，<code>private</code>，<code>protected</code> 以及暗示性的 <code>friendly</code>来实现：</p><ul><li>“public”（公共）意味着后续的定义任何人均可使用。</li><li>“private”（私有）意味着除您自己、类型的创建者以及那个类型的内部函数成员，其他任何人都不能访问后续的定义信息。</li><li>“protected”（受保护的）与“private”相似，只是一个继承的类可访问受保护的成员，但不能访问私有成员。继承的问题不久就要谈到。</li><li>“friendly”（友好的）涉及“包装”或“封装”（Package）的概念——即Java用来构建库的方法。若某样东西是“友好的”，意味着它只能在这个包装的范围内使用（所以这一访问级别有时也叫作“包装访问”）。</li></ul><h2 id="方案的重复使用"><a class="markdownIt-Anchor" href="#方案的重复使用"></a> 方案的重复使用</h2><p>创建并测试好一个类后，它应（从理想的角度）代表一类事物，是可以重复在很多地方使用的。</p><p>为重复使用一个类，最简单的办法是仅直接使用那个类的对象。同时也能将那个类的一个对象置入一个新类，这种类中置入类的方法成为“组织”或“包含”，比如“一辆车包含了一个变速箱”。</p><h2 id="继承重新使用接口"><a class="markdownIt-Anchor" href="#继承重新使用接口"></a> 继承：重新使用接口</h2><p>我们费尽心思做出一种数据类型后，假如不得不又新建一种类型，令其实现大致相同的功能，那会是一件非常令人灰心的事情。<br>但若能利用现成的数据类型，对其进行“克隆”，再根据情况进行添加和修改，情况就显得理想多了。“继承”正是针对这个目标而设计的。</p><blockquote><p>在 Java 语言中，继承是通过 <code>extends</code> 关键字实现的。</p></blockquote><p>使用继承时，相当于创建了一个新的类，不过这个“克隆”类（正式名称叫作继承类或者子类）中一开始就包含了原始类（正式名称叫作基础类、超类或父类）中的所有成员（<code>private</code>会被隐藏起来，禁止访问）与接口。</p><p>于此同时，在继承过程中，若<strong>父类</strong>发生了变化，<strong>子类</strong>也会反映出这种变化。</p><p>在完成继承后，可向<strong>父类</strong>的对象发送的所有消息亦可原样发给<strong>子类</strong>的对象。如果不对<strong>子类</strong>做任何修改，<strong>子类对象</strong>接收到一条特定的消息后，也总有一个<strong>父类</strong>提供的“方法”能够执行。这意味着<strong>子类</strong>具有与<strong>父类</strong>相同的类型和行为！</p><p>然而，在绝大多数情况下，我们希望子类和父类有所区别（不然为什么要建立一个子类呢？），实现这个效果，我们有一下方法可用：</p><ul><li>为衍生类添加新函数（功能）</li></ul><p>如果需要子类拥有父类没有的功能，只需要给子类增加新的方法（函数）就行了。</p><ul><li>改变（“改善”）基础类一个现有函数的行为（重载）</li></ul><p>为改善一个函数，只需为衍生类的函数建立一个新定义即可。我们的目标是：“尽管使用的函数接口未变，但它的新版本具有不同的表现”。</p><h2 id="多形对象的互换使用"><a class="markdownIt-Anchor" href="#多形对象的互换使用"></a> 多形对象的互换使用</h2><p><img src="https://java.quanke.name/1-2.gif" alt="1-2.gif"></p><p>举个例子，我们构建一个 <code>Shape</code> 类，<code>Shape</code> 类拥有 <code>draw()</code>, <code>erase()</code>, <code>move()</code> 等方法；<br>然后我们在构建几个 <code>Shape</code> 的子类（继承自 <code>Shape</code>）的类：<code>Circle</code>, <code>Line</code>, <code>Triangle</code>；<br>对每个子类，我们都会根据实际情况重载对应的方法。</p><p>这时，如果我们构建一个 doStuff 函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">void doStuff(Shape s) &#123;</span><br><span class="line">    s.erase();</span><br><span class="line">    // ...</span><br><span class="line">    s.draw();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它可以接收任何 Shape 包括其子类进行操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Circle c = new Circle();</span><br><span class="line">Triangle t = new Triangle();</span><br><span class="line">Line  l = new Line();</span><br><span class="line">doStuff(c);</span><br><span class="line">doStuff(t);</span><br><span class="line">doStuff(l);</span><br></pre></td></tr></table></figure><p>在这里，我们把 Shape 的子类，当作 Shape 使用，这称为“<strong>上溯造型</strong>”，这样做常常可以避免检查一个对象到底是何种具体类型。</p><p>值得注意的是，即使 Circle、Line、Triangle 用不同的 erase、draw 的具体实现方式，doStuff 还是可以很好得完成工作。我们可以理解为 doStuff 只是在告诉 Shape ：“你是一种几何形状，我知道你能将自己删掉，即erase()；请自己采取那个行动，并自己去控制所有的细节吧”，而不是对 Circle 做某种操作，对 Triangle 做某种操作…</p><h4 id="动态绑定"><a class="markdownIt-Anchor" href="#动态绑定"></a> 动态绑定</h4><p>我们在使用上述代码时，不论我们传给 doStuff 的是那种具体类型，它总能调用我们想要的函数。</p><p>像这样将一条消息发给对象时，如果不知道对方对具体类型是什么，但采取的行动同样是正确的，这种情况称作“<strong>多形性</strong>”，实现“多形性”的办法叫做“<strong>动态绑定</strong>”。</p><p>对于动态绑定，编译器会自己处理细节，我们只需要知道会发生什么。</p><p>在 Java 中，我们无需使用关键字来实现 动态绑定，它将是自动的。</p><h4 id="抽象的基础类和接口"><a class="markdownIt-Anchor" href="#抽象的基础类和接口"></a> 抽象的基础类和接口</h4><p><strong>基础类</strong> 只是为自己的衍生类提供一个接口的类（上溯造型成它），我们不希望实际创建这种类的实例对象。<br>这时，我们就可以把这个类声明成“抽象的”。</p><blockquote><p>在 Java 中，我们使用 关键字 <code>abstract</code> 来说明一个类是抽象的。编译器将阻止创建<strong>抽象类</strong>的实例。</p></blockquote><p><strong><code>interface</code> 关键字</strong> 将抽象类的概念延伸，它完全禁止所有函数的定义。</p><hr><p>【注】这篇文章，是学习《Thinking in Java》的笔记与摘录整理而成的。</p><p>由于找到的这本书太老，加上一些翻译上的问题，所以有些地方的表述可能和现在的主流方式不同（如书中对“重载”、“多态”等词的表述😂）。</p><p>这部分主要学习那种思想，就不纠结这些遣词造句是的细节了。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-1-基础语法</title>
      <link href="/2019/04/12/Java/Day1_Java_Basic/"/>
      <url>/2019/04/12/Java/Day1_Java_Basic/</url>
      
        <content type="html"><![CDATA[<h1 id="java-基础语法"><a class="markdownIt-Anchor" href="#java-基础语法"></a> Java 基础语法</h1><p><code>Java</code>  是一门<strong>面向对象</strong>的<strong>解释型</strong>编程语言。</p><p><strong>面向对象</strong> 意味着我们应该把一个 Java 程序看作一系列对象的集合，我们的工作就是构建这些对象，并通过调用彼此的方法来让各种对象协同工作，解决实际的问题。</p><p><strong>解释型</strong> 意味着：</p><p>Java编译程序生成字节码（<em>byte-code</em>），而不是通常的机器码。<br>相同的代码设计成可有效地传送程序到多个平台。</p><h2 id="基本语法"><a class="markdownIt-Anchor" href="#基本语法"></a> 基本语法</h2><ul><li>Java 大小写敏感</li><li>Java 源文件名必须和类名相同（如果文件名和类名不相同则会导致编译错误）</li><li>Java 程序由 <code>public static void main(String []args)</code>方法开始执行。</li></ul><h2 id="标识符合法的变量名"><a class="markdownIt-Anchor" href="#标识符合法的变量名"></a> 标识符（合法的变量名）</h2><ul><li>Java 标识符可以包含以下字符：<ul><li><em>字母</em>：<code>A</code>-<code>Z</code>、<code>a</code>-<code>z</code></li><li><em>数字</em>：<code>0</code>-<code>9</code></li><li><em>符号</em>：<code>$</code>、<code>_</code></li></ul></li><li>首字符不能是<em>数字</em></li><li>Java 标识符大小写敏感</li><li>关键字不能用作标识符</li></ul><h2 id="关键字保留字"><a class="markdownIt-Anchor" href="#关键字保留字"></a> 关键字（保留字）</h2><table><thead><tr><th>关键字</th><th>含义</th></tr></thead><tbody><tr><td>abstract</td><td>表明类或者成员方法具有抽象属性</td></tr><tr><td>assert</td><td>断言，用来进行程序调试</td></tr><tr><td>boolean</td><td>基本数据类型之一，声明布尔类型的关键字</td></tr><tr><td>break</td><td>提前跳出一个块</td></tr><tr><td>byte</td><td>基本数据类型之一，字节类型</td></tr><tr><td>case</td><td>用在switch语句之中，表示其中的一个分支</td></tr><tr><td>catch</td><td>用在异常处理中，用来捕捉异常</td></tr><tr><td>char</td><td>基本数据类型之一，字符类型</td></tr><tr><td>class</td><td>声明一个类</td></tr><tr><td>const</td><td>保留关键字，没有具体含义</td></tr><tr><td>continue</td><td>回到一个块的开始处</td></tr><tr><td>default</td><td>默认，例如，用在switch语句中，表明一个默认的分支</td></tr><tr><td>do</td><td>用在do-while循环结构中</td></tr><tr><td>double</td><td>基本数据类型之一，双精度浮点数类型</td></tr><tr><td>else</td><td>用在条件语句中，表明当条件不成立时的分支</td></tr><tr><td>enum</td><td>枚举</td></tr><tr><td>extends</td><td>表明一个类型是另一个类型的子类型，这里常见的类型有类和接口</td></tr><tr><td>final</td><td>用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变，用来定义常量</td></tr><tr><td>finally</td><td>用于处理异常情况，用来声明一个基本肯定会被执行到的语句块</td></tr><tr><td>float</td><td>基本数据类型之一，单精度浮点数类型</td></tr><tr><td>for</td><td>一种循环结构的引导词</td></tr><tr><td>goto</td><td>保留关键字，没有具体含义</td></tr><tr><td>if</td><td>条件语句的引导词</td></tr><tr><td>implements</td><td>表明一个类实现了给定的接口</td></tr><tr><td>import</td><td>表明要访问指定的类或包</td></tr><tr><td>instanceof</td><td>用来测试一个对象是否是指定类型的实例对象</td></tr><tr><td>int</td><td>基本数据类型之一，整数类型</td></tr><tr><td>interface</td><td>接口</td></tr><tr><td>long</td><td>基本数据类型之一，长整数类型</td></tr><tr><td>native</td><td>用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的</td></tr><tr><td>new</td><td>用来创建新实例对象</td></tr><tr><td>package</td><td>包</td></tr><tr><td>private</td><td>一种访问控制方式：私用模式</td></tr><tr><td>protected</td><td>一种访问控制方式：保护模式</td></tr><tr><td>public</td><td>一种访问控制方式：共用模式</td></tr><tr><td>return</td><td>从成员方法中返回数据</td></tr><tr><td>short</td><td>基本数据类型之一,短整数类型</td></tr><tr><td>static</td><td>表明具有静态属性</td></tr><tr><td>strictfp</td><td>用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范[1]</td></tr><tr><td>super</td><td>表明当前对象的父类型的引用或者父类型的构造方法</td></tr><tr><td>switch</td><td>分支语句结构的引导词</td></tr><tr><td>synchronized</td><td>表明一段代码需要同步执行</td></tr><tr><td>this</td><td>指向当前实例对象的引用</td></tr><tr><td>throw</td><td>抛出一个异常</td></tr><tr><td>throws</td><td>声明在当前定义的成员方法中所有需要抛出的异常</td></tr><tr><td>transient</td><td>声明不用序列化的成员域</td></tr><tr><td>try</td><td>尝试一个可能抛出异常的程序块</td></tr><tr><td>void</td><td>声明当前成员方法没有返回值</td></tr><tr><td>volatile</td><td>表明两个或者多个变量必须同步地发生变化</td></tr><tr><td>while</td><td>用在循环结构中</td></tr></tbody></table><h2 id="注释"><a class="markdownIt-Anchor" href="#注释"></a> 注释</h2><p>Java 中的注释和 C 语言相同，有<code>/* ... */</code> 和 <code>// ...</code> 两种。</p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">多行</span></span><br><span class="line"><span class="comment">注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 行中注释 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 行尾注释</span></span><br></pre></td></tr></table></figure><h2 id="java-包"><a class="markdownIt-Anchor" href="#java-包"></a> Java 包</h2><p>包主要用来对类和接口进行分类。当开发Java程序时，可能编写成百上千的类，因此很有必要对类和接口进行分类。</p><h3 id="package-语句"><a class="markdownIt-Anchor" href="#package-语句"></a> <code>package</code> 语句</h3><p><code>package</code> 指定的信息直接将生成的 <code>class</code> 文件生成到对应目录下。如 <code>package aaa.bbb.ccc</code> 编译器就将该 <code>.java</code> 文件下的各个类生成到 <code>./aaa/bbb/ccc/</code> 这个目录。</p><h3 id="import-语句"><a class="markdownIt-Anchor" href="#import-语句"></a> <code>import</code> 语句</h3><p><code>import</code> 是为了简化使用 <code>package</code> 之后的实例化的代码。假设 <code>./aaa/bbb/ccc/</code> 下的 <code>A</code> 类:</p><p>假如没有 <code>import</code>，实例化A类为：<code>new aaa.bbb.ccc.A()</code>;</p><p>使用 <code>import aaa.bbb.ccc.A</code> 后，就可以直接使用 <code>new A()</code> 了;<br>也就是编译器匹配并扩展了 <code>aaa.bbb.ccc.</code> 这串字符串。</p><p>例如，下面的命令行将会命令编译器载入 <code>java_installation/java/io</code> 路径下的所有类:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br></pre></td></tr></table></figure><h2 id="源文件声明规则"><a class="markdownIt-Anchor" href="#源文件声明规则"></a> 源文件声明规则</h2><ul><li>一个源文件中只能有一个 <code>public</code> 类（非 <code>public</code> 的不限）</li><li>源文件的名称应该和 <code>public</code> 类的类名保持一致。（源文件中 public 类的类名是 Employee，那么源文件应该命名为Employee.java）</li><li>如果一个类定义在某个包中，那么 <code>package</code> 语句应该在源文件的首行。</li><li>如果源文件包含import语句，那么应该放在 <code>package</code> 语句和 <code>类定义</code> 之间。如果没有package语句，那么import语句应该在源文件中最前面。</li><li><code>import</code> 语句和 <code>package</code> 语句对源文件中定义的所有类都有效。在同一源文件中，不能给不同的类不同的包声明。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-0-起步</title>
      <link href="/2019/04/11/Java/Day0_Java_Begining/"/>
      <url>/2019/04/11/Java/Day0_Java_Begining/</url>
      
        <content type="html"><![CDATA[<h1 id="java-起步"><a class="markdownIt-Anchor" href="#java-起步"></a> Java 起步</h1><h2 id="java-简介废话"><a class="markdownIt-Anchor" href="#java-简介废话"></a> Java 简介（废话）</h2><p>Java 是由Sun Microsystems公司于1995年5月推出的高级程序设计语言（现属于Oracle）。<br>Java可运行于多个平台，如Windows, Mac OS，及其他多种UNIX版本的系统。</p><h2 id="java-开发环境配置"><a class="markdownIt-Anchor" href="#java-开发环境配置"></a> Java 开发环境配置</h2><h3 id="jdk-java-development-kit"><a class="markdownIt-Anchor" href="#jdk-java-development-kit"></a> JDK (Java Development Kit)</h3><blockquote><p>Java 是一种跨平台的编程语言，想要让你的计算机能够运行 Java 程序那么就需要安装 JRE，而想要开发 Java 程序，那么就需要安装 JDK。</p></blockquote><ul><li><a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">官网下载JDK</a></li><li>安装</li><li>配置（<a href="https://docs.oracle.com/en/java/javase/12/install/installation-jdk-microsoft-windows-platforms.html" target="_blank" rel="noopener">Windows 下需要配置几个环境变量</a>）</li></ul><h3 id="eclipse-ide"><a class="markdownIt-Anchor" href="#eclipse-ide"></a> Eclipse (IDE)</h3><blockquote><p>Eclipse 是一个很好的 Java 开发环境。</p></blockquote><ul><li><a href="https://www.eclipse.org" target="_blank" rel="noopener">官网</a>下载</li><li>安装</li></ul><h2 id="hello-world"><a class="markdownIt-Anchor" href="#hello-world"></a> Hello World</h2><h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; </span><br><span class="line">System.out.println(<span class="string">"Hello, world!"</span>); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="运行方法"><a class="markdownIt-Anchor" href="#运行方法"></a> 运行方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim HelloWorld.java </span><br><span class="line">$ javac hello.java </span><br><span class="line">$ java HelloWorld</span><br></pre></td></tr></table></figure><p><strong><code>javac</code></strong> 后面跟着的是java文件的文件名，例如 <code>HelloWorld.java</code>。 该命令用于将 java 源文件编译为 class 字节码文件，如： <code>javac HelloWorld.java</code>。<br>运行javac命令后，如果成功编译没有错误的话，会出现一个 <code>HelloWorld.class</code> 的文件。</p><p><strong><code>java</code></strong> 后面跟着的是java文件中的类名(后面不加<code>.class</code>)，如: <code>java HelloWorld</code>。</p><p>⚠️【注意】文件名必须和类名一致！否则会出现如下错误：<br><code>错误: 类 HelloWorld 是公共的, 应在名为 HelloWorld.java 的文件中声明</code></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-9.2-awk</title>
      <link href="/2017/01/12/Linux/linux-9-2-Awk/"/>
      <url>/2017/01/12/Linux/linux-9-2-Awk/</url>
      
        <content type="html"><![CDATA[<h1 id="awk"><a class="markdownIt-Anchor" href="#awk"></a> awk</h1><h2 id="awk命令的通用语法格式"><a class="markdownIt-Anchor" href="#awk命令的通用语法格式"></a> awk命令的通用语法格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">awk &apos;&#123;commands&#125;&apos;</span><br><span class="line">    commands为一个或多个命令</span><br><span class="line">    常用选项：</span><br><span class="line">        -f，表明awk命令将从该标志之后的文件中读取指令而不是从命令行读取；</span><br><span class="line">        -Fc，这个标志表明字段之间的分隔符是c而不是默认的空白字符（如制表键、一个或多个空格符）。</span><br></pre></td></tr></table></figure><p>常用点：</p><ul><li><strong>print</strong>：将一行接一行地打印出文件中的所有数据行。</li></ul><p>可用 <code>print str1 str2 int1,int2...</code></p><p>也可<code>print(A,B,C,...)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ who | awk &apos;&#123; print &#125;&apos;</span><br><span class="line">        ==直接使用「who」</span><br></pre></td></tr></table></figure><p>awk 中也可以用 c 风格的 printf()：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">printf(&quot;Total: %s\n&quot;,totalsize)</span><br><span class="line">    用printf注意&apos;\n&apos;</span><br></pre></td></tr></table></figure><h2 id="n字段变量"><a class="markdownIt-Anchor" href="#n字段变量"></a> <code>$n</code>：字段变量</h2><p>在文件和Linux命令的结果显示中:</p><pre><code>    每行信息被指定的分隔符分隔成若干个字段，    每个字段都被赋予一个唯一的标识符。    如，字段1的标识符是 `$1`，字段2的标识符是 `$2` 等。    特殊地，有变量 `$0` 表示整行 「`$0=re('^\*$')`」</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ who | awk &apos;&#123; print $1 &#125;&apos;</span><br><span class="line">    列出who命令显示结果中每行的第1个字段，即目前登录Linux系统的用户名</span><br><span class="line">$ who | awk &apos;&#123; print &quot;User  &quot; $1 &quot; is on terminal line &quot; $2&#125;&apos;</span><br><span class="line">    再上一个命令的基础上加入一些解释性的话</span><br><span class="line">$ awk &apos;&#123; print &quot;Employee  &quot; $2 &quot; has salary &quot; $4&#125;&apos; emp.data</span><br><span class="line">    emp.data文件中的第2个字段为员工姓，第4个字段为工资，</span><br><span class="line">    在员工姓前加上Employee，</span><br><span class="line">    在员工的姓和工资之间加上has salary字符串</span><br><span class="line">$ egrep &apos;foo|bar&apos; /etc/passwd | awk -F: &apos;&#123; print $1&quot; has &quot; $7 &quot; as loggin shell.&quot; &#125;&apos;</span><br><span class="line">        # 在/etc/passwd中所有的字段都是以:分隔的。</span><br><span class="line">  获取某些用户登录时使用的shell：</span><br><span class="line">    egrep命令从/etc/passwd文件中抽取包含foo或bar的数据行；</span><br><span class="line">    awk命令把冒号看成字段的分隔符并将列出第1个（用户名）和第7个字段（登录时的shell），</span><br><span class="line">    同时还将在显示结果中加入一些描述信息以帮助阅读和理解；</span><br><span class="line">$ awk -F: &apos;&#123; print $7 &#125;&apos; /etc/passwd | sort | uniq -c</span><br><span class="line">    获取系统上各个shell分别被几个用户默认使用</span><br><span class="line">$ grep /bin/ /etc/passwd | awk -F: &apos;&#123; print $1&quot; &quot; $7 &#125;&apos; | sed &apos;/sync/d&apos; | sort</span><br><span class="line">    获取哪些用户在登录时使用的shell是存放在/bin目录中以及这个shell的名字；</span><br><span class="line">    并且有个用/bin/sync的sync用户，不让它出现在显示的结果；</span><br><span class="line">    最后进行排序。</span><br><span class="line">$ who | awk &apos;&#123; print $6&quot;: &quot;$0&#125;&apos;</span><br><span class="line">     在每个用户记录的最前面显示这个用户登录Linux系统所使用的计算机</span><br><span class="line">     # who显示结果中的最后一个字段是用户登录Linux系统所使用的计算机的IP地址，如果为空表示是本机登录</span><br></pre></td></tr></table></figure><h2 id="nf-nr变量"><a class="markdownIt-Anchor" href="#nf-nr变量"></a> <code>NF</code>、<code>NR</code>变量</h2><ul><li><code>NF</code></li></ul><p>若 在命令表达式中使用没有 <code>$</code> 符号的NF变量：</p><pre><code>     `NF` 将显示一行记录中**有多少个字段**。</code></pre><p>若 在命令表达式中使用带有<code>$</code>符号的NF变量，</p><pre><code>     `$NF` 将显示一行记录中**最后一个字段**(即，第NF个字段 -&gt; 最后一个字段)</code></pre><ul><li><code>NR</code></li></ul><p>变量 <code>NR</code> 用来追踪所显示的数据行的数目，即<strong>显示数据行的编号</strong>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ who | awk &apos;&#123; print NF &#125;&apos;</span><br><span class="line">    列出who命令显示结果中每一行的字段数（列数）</span><br><span class="line">$ who | awk &apos;&#123; print $NF &#125;&apos;</span><br><span class="line">    列出who命令显示结果中每一行的最后一个字段</span><br><span class="line">$ egrep &apos;bin|sbin&apos; /etc/passwd | awk -F: &apos;&#123; print $NF &#125;&apos; | sort | uniq -c | sort -n</span><br><span class="line">    egrep    ：从/etc/passwd文件中抽取包含bin或sbin的数据行</span><br><span class="line">    awk      ：把冒号看成字段的分隔符，列出每一行的最后一个字段</span><br><span class="line">    sort     ：将那些字段进行排序</span><br><span class="line">    uniq -c  ：合并相同行，并在每行前面冠以该行出现次数</span><br><span class="line">    sort -n  ：按次数的大小进行排序。</span><br><span class="line">$ ls -l ~/wolf | awk &apos;&#123; print NR&quot;: &quot;$0&#125;&apos;        # 用N给每行一个编号</span><br><span class="line">1: total 16</span><br><span class="line">2: drwxrwxr-x  2 dog dog 4096 Jan 25  2009 boywolf</span><br><span class="line">3: -rw-rw-r--  1 dog dog   84 Dec 22 19:07 delete_disable\</span><br><span class="line">......</span><br></pre></td></tr></table></figure><ul><li>awk的command中print可打印 <code>\n</code>, <code>\t</code> 等</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ls -lF /boot | awk &apos;&#123; print $5 &quot;\t&quot; $9&#125;&apos; | sort -rn | head -3</span><br><span class="line">    列出/boot目录中每一个文件的文件名和大小，文件的大小在前，而文件名随后，文件大小和文件名由制表键隔开。</span><br><span class="line">    按大小反序排列（从大到小）</span><br><span class="line">    把其中最大的3个文件</span><br></pre></td></tr></table></figure><h2 id="awk中计算"><a class="markdownIt-Anchor" href="#awk中计算"></a> awk中计算</h2><p>变量使用前不用声明</p><p>使用c语言的运算符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ls -lF /boot | awk &apos;&#123; totalsize += $5; print totalsize &#125;&apos;</span><br><span class="line">    获取/boot目录中所有文件大小的总和</span><br><span class="line">    （将得到累加过程中每一步的totalsize值）</span><br><span class="line">为得到最终结果，不输出中间值：</span><br><span class="line">$ ls -lF /boot | awk &apos;&#123; totalsize += $5; print totalsize &#125;&apos; | tail -1</span><br><span class="line">    除了使用tail命令之外，一种更好的方法是在awk命令中使用END关键字：</span><br><span class="line">$ ls -lF /boot | awk &apos;&#123; totalsize += $5&#125; END &#123; print totalsize &#125;&apos;</span><br></pre></td></tr></table></figure><h2 id="end-关键字"><a class="markdownIt-Anchor" href="#end-关键字"></a> <code>END</code> 关键字：</h2><p>在最后一步执行END后的{statements}，如上例最后一个命令。</p><h2 id="将-commands表达式放入文件"><a class="markdownIt-Anchor" href="#将-commands表达式放入文件"></a> 将 <code>commands</code>表达式放入文件</h2><ul><li>用cat</li></ul><p>框中为要输入的（注意末尾新行键入EOF后回车（&lt;&lt;EOF）可以自动退出）</p><p>（直接用cat &gt; script2写完后ctrl+D也可以）</p><p>用此法会有写完后文件中“$5”字样缺失的问题。</p><ul><li>用vi直接写完保存更好（不用写EOF，也没有$n缺失的问题）</li></ul><p>保存入文件后可以：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -lF /boot | awk -f script1</span><br></pre></td></tr></table></figure><ul><li>将awk写入shell脚本</li></ul><p>将一些经常使用的命令放入一个正文文件，这个文件就是所谓的shell脚本文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">写入：（注意用&quot;&quot;把命令括起来，否则将把&quot;$(ls ...)&quot;写入）</span><br><span class="line">$ echo &quot;ls -lF /boot | awk -f script1&quot; &gt; boot_size</span><br><span class="line">调用：</span><br><span class="line">$ bash boot_size</span><br><span class="line">$ sh boot_size</span><br><span class="line">$ ksh boot_size</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="awk中使用if条件-for循环与-c-语言相似"><a class="markdownIt-Anchor" href="#awk中使用if条件-for循环与-c-语言相似"></a> awk中使用if条件、for循环与 C 语言相似</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk  &apos;&#123; if (length($4) == 3  ) print $0 &#125;&apos; emp.data | wc -l</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6b0tm7hpgj30go04qjrv.jpg" alt="IMG_1074"></p><p><code>count[length($1)]++</code>：将第1个字段的长度作为数组元素的下标，并将这个数组元素的个数加1再重新存回到原来的数组元素中。（似动态语言）</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-9.1-sed</title>
      <link href="/2017/01/11/Linux/linux-9-1-Sed/"/>
      <url>/2017/01/11/Linux/linux-9-1-Sed/</url>
      
        <content type="html"><![CDATA[<h1 id="sed"><a class="markdownIt-Anchor" href="#sed"></a> sed</h1><p>利用被称为管道操作符的|，多个命令由管道符连成了管道线。</p><p>在UNIX或Linux系统中，流过管道线的信息（数据）就叫做流（stream）;</p><p>为了编辑或修改一条管道中的信息，就使用流编辑器（stream editor）;</p><p>这是sed这个命令的名字的由来。</p><p>sed编辑文件，将结果输出到1，不改变原文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed [选项] &apos;以引号括起来的命令表达式&apos; [输入文件]</span><br><span class="line">    -e &lt;expression&gt;：e是expression, 以选项中指定的script来处理输入的文本文件，后接表达式</span><br><span class="line">    -f &lt;file&gt;：以选项中指定的script文件来处理输入的文本文件。</span><br><span class="line">    -i：直接在文件中替换，不在终端输出</span><br><span class="line">            -i常和 备份原本文件的-l 配合使用。</span><br><span class="line">    在sed命令中使用多个命令表达式，这命令表达式中间要使用分号（;）分隔开</span><br></pre></td></tr></table></figure><p><span style="color: rgb(51, 51, 51);">在一个文件中指定数据行的范围内抽取某一字符串并用新的模式替代它：</span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -e &apos;s/旧模式/新模式/标志&apos; file</span><br><span class="line">        s是substitute，</span><br><span class="line">        两个最有用的标志分别是g和n。</span><br><span class="line">            g是globally，表示要替代每一行中所出现的全部模式。（无g只换每行的头一个）</span><br><span class="line">            n告诉sed只替代前n行中所出现的模式。</span><br></pre></td></tr></table></figure><p>e.g.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grep CLERK emp.fmt | sed -e &apos;s/ /;/g;s/CLERK/ASSISTANT MANAGER/g&apos;</span><br><span class="line">    1. grep将所有带CLERK的行找出；</span><br><span class="line">    2. sed 将所有的空格（分隔符）都转换成分号（;）；</span><br><span class="line">    3. sed 将所有的CLERK字符串都替换成ASSISTANT MANAGER；</span><br></pre></td></tr></table></figure><p>删除某行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ sed &apos;nd&apos; file</span><br><span class="line">    在显示结果中删除第n行</span><br><span class="line">$ sed &apos;m,nd&apos; file</span><br><span class="line">    在显示结果中删除第m到n行</span><br><span class="line">$ sed &apos;/str/d&apos; file</span><br><span class="line">    删除所有带str的行</span><br><span class="line">$ sed &apos;/^$/d&apos; file</span><br><span class="line">    删除所有空行        # re(&quot;^$&quot;) means a line without any word.(只有开始符^和结尾符$的行)</span><br><span class="line">$ sed &apos;1,/str/d&apos; file</span><br><span class="line">    删除从第1行开始直到包含有str的数据行（包括有str的那行）</span><br></pre></td></tr></table></figure><p>e.g.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">（1）电子邮件和一些应用程序显示的每一行信息都是以&gt;开始的，使用下面的一条sed命令来做到这一点：</span><br><span class="line">$ sed &apos;/^$/d;s/^/&gt; /g&apos; source &gt;result</span><br><span class="line">    第1个命令表达式/^$/d表示要删除所有的空行，</span><br><span class="line">    第2个命令表达式s/^/&gt;/表示将开始符号替换成大于符号和空格符，</span><br><span class="line">    最后的&gt;result表示将sed命令的结果存入result文件。</span><br><span class="line">------------------------------------------------------------------------------------------</span><br><span class="line">（2）在删除所有空行的同时，删除所有包含了“cal“的行，并将所有的字符串“tie“变成“fox“,将结果保存：</span><br><span class="line">$ sed &apos;/^$/d;/cal/d;s/tie/fox/g&apos; source &gt;result</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-9.0-grep</title>
      <link href="/2017/01/10/Linux/linux-9-0-Grep/"/>
      <url>/2017/01/10/Linux/linux-9-0-Grep/</url>
      
        <content type="html"><![CDATA[<h1 id="grepegrepfgrep"><a class="markdownIt-Anchor" href="#grepegrepfgrep"></a> grep/egrep/fgrep</h1><p>grep、egrep、fgrep：搜索文件中满足特定模式(pattern)或字符串的内容，将结果输出到1，不改变原文件。</p><p>（UNIX中的patterns被称为 <em>Regular Expressions</em>）</p><blockquote><p>grep=“Global，Regular Expressions，Print”，即“在文件全局中用正则表达式搜索结果打印输出”</p></blockquote><p>grep、egrep能在一个或多个文件等内容中搜索某一特定的Character Pattern（R.E.）。</p><h3 id="grep"><a class="markdownIt-Anchor" href="#grep"></a> grep</h3><p>grep命令支持以下几种正则表达式的元字符（regular expression metacharacters），即通配符：</p><ul><li><code>c*</code> ：将匹配0个（即空白）或多个字符c（c为任一字符）。</li><li><code>.</code> ：将匹配任何一个字符而且只能是一个字符。</li><li><code>[xyz]</code> ：将匹配方括号中的任意一个字符。</li><li><code>[^xyz]</code>  ：将匹配不包括方括号中的字符的所有字符。</li><li><code>^</code> ：锁定行的开头。</li><li><code>$</code> ：锁定行的结尾。</li></ul><p>在基本正则表达式中：</p><p>如元字符<code>*</code>、<code>+</code>、<code>{</code>、<code>|</code>、<code>(</code> 和 <code>)</code> 已经失去了它们原来的含义，</p><p>如果要恢复它们原本的含义要在之前冠以反斜线’\’，如 <code>\*</code>、<code>\+</code>、<code>\{</code>、<code>\|</code>、<code>\(</code> 和 <code>\)</code>。</p><p>grep命令是用来在每一个文件中或标准输出上搜索特定的模式。</p><p>当使用grep命令时，包含一个指定字符模式的每一行都会被打印在屏幕上，</p><p>使用grep命令并不改变文件中的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">grep 选项 模式 文件名</span><br><span class="line">        选项可以改变grep命令的搜寻方式：</span><br><span class="line">            -c：仅列出包含模式的行的数量。</span><br><span class="line">            -i：忽略模式中的字母大小写。</span><br><span class="line">            -l：列出带有匹配行的文件名。</span><br><span class="line">            -n：在每行的最前面列出行号。</span><br><span class="line">            -v：列出没有匹配模式的行。</span><br><span class="line">            -w：把表达式作为一个完整的单字来搜寻，忽略那些部分匹配的行。</span><br><span class="line">[⚠️]除了-w选项之外，其他的每个选项都可以在egrep和fgrep命令中使用。</span><br><span class="line">[⚠️]如果是搜索多个文件，grep命令的结果只显示在文件中发现匹配模式的文件名，而搜索的是单一的文件，grep命令的结果将显示每一个包含匹配模式的行。</span><br></pre></td></tr></table></figure><p><em>e.g.</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ grep CLERK emp.data        #显示包含了CLERK的行</span><br><span class="line">7369    SMITH   CLERK   800     17-DEC-80</span><br><span class="line">7876    ADAMS  CLERK   1100    23-MAY-87</span><br><span class="line">$ grep -c CLERK emp.data        # 只显示用几个满足行</span><br><span class="line">2</span><br><span class="line">$ grep ^78 emp.data      # 列出在emp.data文件中所有以78开始的数据行</span><br><span class="line">$ grep &apos;1..0&apos; emp.data    #&apos;1..0&apos;表示以1开始随后是两个任意字符最后是0的字符串。</span><br><span class="line">$ grep &apos;[12]..0&apos;        # &apos;[12]..0&apos;表示以1或2开始随后是两个任意字符最后是0的字符串。</span><br><span class="line">$ grep -l root group passwd hosts    # 在当前目录中的group、passwd和hosts 3个文件中搜索模式root并列出包含这一模式的文件名。</span><br><span class="line">$ grep &apos;/bash$&apos; passwd    # 列出在passwd文件中所有以/bash结尾的行（Get所有默认使用bash的用户）。</span><br><span class="line">$ ps -e | grep ftp    # 获取目前系统使用的ftp服务的进程名</span><br><span class="line">$ ps -e | grep ora    # To know is Oracle Database runing</span><br></pre></td></tr></table></figure><h3 id="egrep"><a class="markdownIt-Anchor" href="#egrep"></a> egrep</h3><p align="left"><span style="color: rgb(253, 4, 4);">/* egrep 在RHEL等Linux上其实是「grep -E」的别名 \*/</span></p><p align="left">egrep的语法格式与grep命令相同，</p>但egrep是用来在一个或多个文件的内容中利用**扩展的正则表达式**的元字符搜索特定的模式。<p>egrep所增加的元字符：</p><ul><li>+：匹配一个或多个前导字符。</li><li>a|b：匹配a或b。</li><li>(RE)：匹配括号中的正则表达式RE。</li></ul><p>e.g.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ egrep &apos;[1-5]+000&apos; emp.data        # 匹配1000，2000，3000，4000，5000</span><br><span class="line">$ egrep &apos;S[A-Z]+MAN&apos; emp.fmt        # 匹配“Sxx...xxMAN”</span><br><span class="line">$ egrep &apos;E(S|R) &apos; emp.fmt           # 在每一行数据中搜寻字母E后面紧跟着S或R</span><br></pre></td></tr></table></figure><h3 id="fgrep"><a class="markdownIt-Anchor" href="#fgrep"></a> fgrep</h3><p><span style="color: rgb(253, 4, 4);">/* fgrep 在RHEL等Linux上其实是「grep -F」的别名 */</span></p><p>fgrep也用来在一个或多个文件中搜索与指定字符串匹配的行。</p><p>搜索文件fgrep的速度要比grep快，</p><p>fgrep可以一次迅速地搜索多个模式。</p><p>与grep不同，fgrep命令不能搜索任何正则表达式，</p><p>即将<strong>通配符当作普通字符</strong>来处理（按该字符的字面意思来处理）。</p><p>搜索文件命令fgrep不能使用特殊字符，只能搜索确定的模式。</p><p>fgrep既可以在命令行上键入搜索的模式，</p><p>也可以使用-f选项从文件中读取要搜索的模式。</p><p>e.g.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat emp.fmt | fgrep -f conditions</span><br><span class="line">    # 等价于</span><br><span class="line">$  fgrep -f conditions.txt emp.fmt</span><br><span class="line"># grep也可以如以上二者操作: 列出emp.fmt文件中所有与conditions.txt文件中内容相匹配的数据行。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-8-邮件系统</title>
      <link href="/2017/01/09/Linux/linux-8-Mail/"/>
      <url>/2017/01/09/Linux/linux-8-Mail/</url>
      
        <content type="html"><![CDATA[<h1 id="邮件系统"><a class="markdownIt-Anchor" href="#邮件系统"></a> 邮件系统</h1><h2 id="使用-mail-命令发送邮件"><a class="markdownIt-Anchor" href="#使用-mail-命令发送邮件"></a> 使用 <code>mail</code> 命令发送邮件：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ mail -s &quot;主题&quot; 目标 [&lt; 内容]</span><br><span class="line">        目标：可以是本机上的用户名；</span><br><span class="line">            也可以是一般的邮件地址；</span><br><span class="line">        若使用重定向输入内容，Enter后直接发送，不回显；</span><br><span class="line">        若不重定向，键入命令后从stdin读邮件正文（类似于“cat &gt; file”）。</span><br><span class="line">    </span><br><span class="line">        要结束邮件内容，在一个空白行输入一个点(&apos;.&apos;)，然后Enter；</span><br><span class="line">        之后会出现“Cc: ”（Carbon copy，副本）填写抄送目标，Enter；</span><br><span class="line">        之后，mail发送邮件并退出。</span><br></pre></td></tr></table></figure><p>e.g.    <strong>foo</strong> 用户发送邮件给 <strong>bar</strong> 用户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[foo@Example ~]$ mail -s &quot;A Testing Mail&quot; bar        # To bar</span><br><span class="line">Hi Bar,</span><br><span class="line">Its a testing mail.        # 正文</span><br><span class="line">From foo</span><br><span class="line">.                          # 结束</span><br><span class="line">Cc:                        # Enter，发送，退出</span><br><span class="line">[foo@Example ~]</span><br></pre></td></tr></table></figure><h2 id="阅读电子邮件"><a class="markdownIt-Anchor" href="#阅读电子邮件"></a> 阅读电子邮件</h2><ul><li>收件箱：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l /var/spool/mail</span><br><span class="line">        Linux为每个用户准备了一个邮箱（file）</span><br><span class="line">        以存放用户的邮件（including all mails）</span><br><span class="line">$ cat /var/spool/mail/USER_NAME</span><br><span class="line">        查看某用户的所有邮件（收件箱）</span><br></pre></td></tr></table></figure><ul><li>显示收件箱中的邮件列表：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[User@Example ~]$ mail        # to get a mail list.</span><br><span class="line">Heirloom Mail version 12.4 7/29/08.  Type ? for help.</span><br><span class="line">&quot;/var/spool/mail/User&quot;: 2 messages 2 new</span><br><span class="line">&gt;N  1 Mail Delivery System  Thu Aug 23 12:46  80/2695  &quot;Undelivered Mail Retu&quot;</span><br><span class="line"> N  2 Mail Delivery System  Thu Aug 23 12:52  94/3407  &quot;Undelivered Mail Retu&quot;</span><br><span class="line">&amp; 2        # Enter the number after &apos;N&apos; to see the E-mail which you want.</span><br><span class="line">Head</span><br><span class="line">......        # Details.</span><br><span class="line">End</span><br><span class="line">&amp; x    # Enter &#123;x&#125; to keep that mail in Mail-Box,</span><br><span class="line">       # while &#123;q&#125; to move it to Trush-Box(mbox,a file to keep removed mail in $HOME).</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-7.1-管道(|)操作</title>
      <link href="/2017/01/07/Linux/linux-7-1-Pipes/"/>
      <url>/2017/01/07/Linux/linux-7-1-Pipes/</url>
      
        <content type="html"><![CDATA[<h1 id="管道操作"><a class="markdownIt-Anchor" href="#管道操作"></a> 管道(|)操作</h1><h2 id="管道"><a class="markdownIt-Anchor" href="#管道"></a> <code>|</code>：管道：</h2><p>“<span style="color: rgb(9, 175, 255);">$ </span><span style="color: rgb(9, 175, 255);">cmd1 | cmd2</span>” ：将cmd1的<strong>输出</strong>  <u>重定向</u> 为cmd2的<strong>输入。</strong></p><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6b05sda96j31kw0km75u.jpg" alt="ink-image"></p><p>使用管道符号将两个命令组合起来就相当于使用水管接头将水龙头与高压水枪接在一起，还可以先将水龙头来的水送到热水炉加温后再送到高压水枪，使用水管接头将3个现有的正常工作器系统组合成一个新的功能更强的系统。</p><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6b05sl6pxj30go01i0so.jpg" alt="IMG_1047"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ who | wc -l</span><br><span class="line">        显示工作用户数</span><br><span class="line">$ cat /etc/passwd | wc -l</span><br><span class="line">        显示注册用户数</span><br><span class="line">$ ls -lF /bin | more</span><br><span class="line">        用more显示ls的大量信息（可翻页）</span><br></pre></td></tr></table></figure><h2 id="xargs将管道导入的数据转换成后面命令的输入参数"><a class="markdownIt-Anchor" href="#xargs将管道导入的数据转换成后面命令的输入参数"></a> <code>| xargs</code>”：将管道导入的数据转换成后面命令的输入参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cat bd.txt</span><br><span class="line">a.txt</span><br><span class="line">b.txt</span><br><span class="line">c.txt</span><br><span class="line">$ cat bd.txt | xargs rm -f        # 删除a.txt，b.txt，c.txt</span><br></pre></td></tr></table></figure><h2 id="tee命令分流输出t型管道"><a class="markdownIt-Anchor" href="#tee命令分流输出t型管道"></a> <code>|tee</code>：命令分流输出：（T型管道）</h2><p>将前一个命令的输出结果直接输入给后一个命令，同时还要将前面命令的结果存入一个文件。</p><blockquote><p>tee命令的功能就是将标准输入复制给每一个指定的文件和标准输出。</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6b10dk5pcj31kw0km40s.jpg" alt="ink-image"></p><p>T型管道的概念来自生活中的自来水管的T型接头。在一个公厕的水管阀门上接了一个T型接头将“免费”的水进行了分流，同时接入了洗车的高压水枪和抽水马桶。</p><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6b10nyojhj30bu043weo.jpg" alt="IMG_1048"></p><p>e.g.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cut -f1 -d: /etc/passwd | tee passwd.cut | sort -r | tee passwd.sort | more</span><br><span class="line">        从/etc/passwd中剪出注册用户名列表，通过在sort -r命令之前和之后加入管道符和tee命令的方式将排序之前和之后的数据分别存入passwd.cut和passwd.sort文件。</span><br><span class="line">        tee passwd.cut命令将由管道送过来的数据存入passwd.cut文件，同时还通过管道将这些数据送给下一个命令进行处理（sort -r命令进行反向排序）。tee passwd.sort命令将由管道送过来的数据（反向排序后的用户名）存入passwd.sort文件，同时还通过管道将这些数据送给下一个命令进行处理（more命令进行分页显示）。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-7.0-文件描述符与重定向</title>
      <link href="/2017/01/06/Linux/linux-7-0-IORedirections/"/>
      <url>/2017/01/06/Linux/linux-7-0-IORedirections/</url>
      
        <content type="html"><![CDATA[<h1 id="文件描述符与重定向"><a class="markdownIt-Anchor" href="#文件描述符与重定向"></a> 文件描述符与重定向</h1><h2 id="文件描述决定从哪里读输入向哪里写-输出-与-错误"><a class="markdownIt-Anchor" href="#文件描述决定从哪里读输入向哪里写-输出-与-错误"></a> 文件描述：决定从哪里读输入，向哪里写 输出 与 错误</h2><p><strong>文件描述符：</strong></p><p>由 <code>$ ls -l /dev/std*</code> 可见:</p><ul><li><code>0</code> ：stdin</li><li><code>1</code> ：stdout</li><li><code>2</code> ：stderr</li></ul><h2 id="输出重定向"><a class="markdownIt-Anchor" href="#输出重定向"></a> 输出重定向：</h2><ul><li><code>cmd [1|2]&gt; file</code> ：覆盖源文件，无则建</li><li><code>cmd [1|2\]&gt;&gt; file</code> ：追加，无则建</li></ul><blockquote><ol><li>不会自动递归补全路径</li><li><code>[1|2]</code>，文件描述符（stdin|stderr），缺省为 <code>1</code>，与 <code>&gt;</code> 之间无空格</li></ol></blockquote><ul><li><code>$ ls &gt; outfile 2&gt;&amp;1</code> -&gt;    将stdout、stderr一同重定向到 <code>outfile</code></li></ul><blockquote><p><code>1</code> 省略，<code>2</code> 重定向到 <code>1</code> 指向的文件</p></blockquote><ul><li><code>cmd &amp;&gt; file</code> ：把0，1，2都重定向至file。（<code>&amp;</code> 代表 <code>0&amp;1&amp;2</code>）</li></ul><blockquote><p>用<code>&amp;&gt;</code>可能会在文文件中产生一些无用的信息</p></blockquote><h2 id="输入重定向"><a class="markdownIt-Anchor" href="#输入重定向"></a> 输入重定向（<code>&lt;</code>）：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tr &apos;A-Z&apos; &apos;a-z&apos; &lt; w.txt &gt; u.txt        # 将w中的大写-&gt;小写，放入u中</span><br><span class="line">                # 0 -&gt; w.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-6-计算与逃逸</title>
      <link href="/2017/01/05/Linux/linux-6-Computation/"/>
      <url>/2017/01/05/Linux/linux-6-Computation/</url>
      
        <content type="html"><![CDATA[<h1 id="计算与逃逸"><a class="markdownIt-Anchor" href="#计算与逃逸"></a> 计算与逃逸</h1><ol><li>用Linux命令进行数字运算</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ $a1=1;a2=2;        # 定义变量，一行可多个</span><br><span class="line">$ echo $a1           # 输出a1的值</span><br><span class="line">$ echo $[$a1+$a2]    # 输出a1+a2的值</span><br><span class="line"># 可用运算有：</span><br><span class="line">     + - * / % **    # 同Python，对整数用／要去尾</span><br></pre></td></tr></table></figure><ol start="2"><li><code>\</code>——逃逸符号</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;$6830&quot;        # 未定义的空变量$6</span><br><span class="line">830        # output</span><br><span class="line">$ echo &quot;\$6830&quot;       # 用“\”逃逸符号还原“$”</span><br><span class="line">$6830      # output</span><br></pre></td></tr></table></figure><p>'\'还可以放在命令最后表续行（在下一行继续输入该命令）</p><ol start="3"><li><p><code>'str'</code>、<code>&quot;str&quot;</code>：文字 -&gt; 字符串</p><ul><li><code>'abc'</code>   ：禁止所有命令行拓展功能</li><li><code>&quot;abc&quot;</code>  ：允许以下拓展：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line">`</span><br><span class="line">\</span><br><span class="line">!</span><br></pre></td></tr></table></figure></li><li><p>利用拓展：</p></li></ol><p>将一个命令的输出作为另一个的参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;Today is `date`&quot;</span><br><span class="line">等价于</span><br><span class="line">$ echo &quot;Today is $(date)&quot;</span><br><span class="line">即：</span><br><span class="line">    用“ `cmd` ”或“ $(cmd) ”实现：</span><br><span class="line">        print(&apos;Today is %s&apos; % cmd())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-5-快捷操作</title>
      <link href="/2017/01/04/Linux/linux-5-ShellShortcuts/"/>
      <url>/2017/01/04/Linux/linux-5-ShellShortcuts/</url>
      
        <content type="html"><![CDATA[<h1 id="快捷操作"><a class="markdownIt-Anchor" href="#快捷操作"></a> 快捷操作</h1><h2 id="快速命令"><a class="markdownIt-Anchor" href="#快速命令"></a> 快速命令</h2><ul><li>认识默认bash提示符：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[`whoami` @ `uname -n`   `pwd`]</span><br></pre></td></tr></table></figure><ul><li>用<code>{Tab}</code>补全命令。</li></ul><p>若有多个可选方案，按一次不显示，按两次显示全部。</p><ul><li>Linux 通配符</li></ul><table><thead><tr><th>通配符</th><th>作用</th></tr></thead><tbody><tr><td>*</td><td>匹配0或多个字符</td></tr><tr><td>?</td><td>匹配一个字符</td></tr><tr><td>[xyz]</td><td>匹配括号中的任意一个字符</td></tr><tr><td>[x-y]</td><td>匹配x～y范围内所有字符</td></tr><tr><td>[^a-z]</td><td>除a～z的字符</td></tr><tr><td>[^xyz]</td><td>除括号中的任意字符</td></tr></tbody></table><ul><li>使用<code>{}</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ touch &#123;a,b&#125;</span><br><span class="line">        分别touch文件a和b</span><br><span class="line">$ touch a.&#123;b,c&#125;</span><br><span class="line">        分别touch文件a.b和a.c</span><br><span class="line">$ touch &#123;a,b&#125;.&#123;c,d&#125;</span><br><span class="line">        分别touch文件a.c和a.d和b.c和b.d</span><br></pre></td></tr></table></figure><ul><li><p><code>history</code>命令：列出用户最近输入过的命令</p><p>​左边是命令的编号</p><p>​用<code>$ !&lt;n&gt;</code>：重新运行编号为<code>&lt;n&gt;</code>的命令</p></li><li><p><code>^x^y</code>：将上一命令中的x改为y后重新执行</p></li><li><p><code>{上下箭头}</code>：在以前使用过的命令中移动</p></li><li><p><code>{ctrl+r}</code>在命令的历史中查找:</p><ul><li>出现<code>(reverse-i-search)':</code></li><li>输入关键字</li><li>出现命令，回车执行</li></ul></li><li><p>先按<code>{Esc}</code>再按<code>{.}</code> 或 同时按<code>{Alt+.}</code>：提取上一命令的最后一个参数</p></li></ul><h2 id="终端快捷键"><a class="markdownIt-Anchor" href="#终端快捷键"></a> 终端快捷键</h2><ul><li><code>ctrl+A</code>: 光标移到命令行<strong>开头</strong>处</li><li><code>ctrl+E</code>: 光标移到命令行<strong>结尾</strong>处</li><li><code>ctrl+U</code>: 向前<strong>删除内容</strong>至提示符</li><li><code>ctrl+K</code>: 向后<strong>删除内容</strong>至结尾</li><li><code>ctrl+左|右</code>: 向左右<strong>移动</strong>一个字</li></ul><h2 id="gnome终端快捷键"><a class="markdownIt-Anchor" href="#gnome终端快捷键"></a> Gnome终端快捷键</h2><ul><li><code>ctrl+shift+T</code>: 开启新选项卡</li><li><code>ctrl+PgUp/PgDn</code>: 切换到上/下个选项卡</li><li><code>alt+N</code>: 切换到第N个选项卡</li><li><code>ctrl+shift+C/V</code>: 复制，粘贴</li><li><code>ctrl+shift+W</code>: 关闭一个选项卡</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-4.2-正文处理</title>
      <link href="/2017/01/03/Linux/linux-4-2-TextHandle/"/>
      <url>/2017/01/03/Linux/linux-4-2-TextHandle/</url>
      
        <content type="html"><![CDATA[<h1 id="正文处理"><a class="markdownIt-Anchor" href="#正文处理"></a> 正文.处理</h1><h2 id="unix2dos-dos2unixunix-与-dos-正文转化"><a class="markdownIt-Anchor" href="#unix2dos-dos2unixunix-与-dos-正文转化"></a> <code>unix2dos</code>, <code>dos2unix</code>：Unix 与 DOS 正文转化</h2><p>UNIX 系统的正文（纯文字）格式中只用换行符<code>\n</code>作为行结束符；</p><p>DOS &amp; Windows 系统的正文中是以回车符 <code>\r</code> 和换行符 <code>\n</code> 作为行结束符；</p><p>用 <code>cat -A filename</code> 可见二者区别。</p><p>将 DOS 格式的文件转换成 UNIX 格式的文件用 <code>dos2unix file_name</code>；</p><p>将 UNIX 格式的文件转换成 DOS 格式的文件用 <code>unix2dos file_name</code>；</p><h2 id="diff-sdiff比较两个文件的差别"><a class="markdownIt-Anchor" href="#diff-sdiff比较两个文件的差别"></a> <code>diff</code>, <code>sdiff</code>：比较两个文件的差别</h2><h3 id="diff-file_1-file_2只输出两者不同点"><a class="markdownIt-Anchor" href="#diff-file_1-file_2只输出两者不同点"></a> <code>diff file_1 file_2</code>：只输出两者不同点</h3><p>显示结果中：</p><ul><li>字母c为 比较，比较某行二者不同点；</li><li>字母d是 不同，显示一文无一文有的；</li><li>“&lt;”表示第1个文件中的数据行。</li><li>“&gt;”表示第2个文件中的数据行。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ diff letters.upper letters</span><br><span class="line">2c2        # 第1个文件的第2行与第2个文件的第2行比较。</span><br><span class="line">&lt; B        # 第1个文件的第2行为B。</span><br><span class="line">---</span><br><span class="line">&gt; b        # 第2个文件的第2行为b。</span><br><span class="line">6c6        # 第1个文件的第6行与第2个文件的第6行比较。</span><br><span class="line">&lt; F        # 第1个文件的第6行为F。</span><br><span class="line">---</span><br><span class="line">&gt; f        # 第2个文件的第6行为f。</span><br><span class="line">8d7        # 第1个文件一共有8行，而第2个文件一共有7行。</span><br><span class="line">&lt; H        # 第1个文件的第8行（也是最后一行）为H。</span><br></pre></td></tr></table></figure><h3 id="sdiff-file_1-file_2side-by-side-输出两者所有行标示不同"><a class="markdownIt-Anchor" href="#sdiff-file_1-file_2side-by-side-输出两者所有行标示不同"></a> <code>sdiff file_1 file_2</code>：side-by-side 输出两者所有行，标示不同</h3><p>显示结果中：</p><ul><li><p>“|”左侧表示第1个文件中的数据行。</p></li><li><p>“|”右侧表示第2个文件中的数据行。</p></li><li><p>“&lt;”表示第1个文件中的数据行（当第1个文件中有数据，但第2个文件中没有时）。</p></li><li><p>“&gt;”表示第2个文件中的数据行（当第2个文件中有数据，但第1个文件中没有时）。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sdiff letters.upper letters</span><br><span class="line">A                             A</span><br><span class="line">B                            | b            # 第1个文件中为B，第2个文件中为b。</span><br><span class="line">C                             C </span><br><span class="line">D                             D</span><br><span class="line">E                             E</span><br><span class="line">F                            | f            # 第1个文件中为F，第2个文件中为f。</span><br><span class="line">G                             G</span><br><span class="line">H                             &lt;            # 第1个文件中为H，第2个文件中的这一行为空。</span><br></pre></td></tr></table></figure><blockquote><p><code>sdiff</code> 命令的显示结果更容易阅读。<br>但是如果比较的两个文件很大，而其中的差别又很少，使用 <code>diff</code> 命令可能更好些。</p></blockquote><h2 id="aspell-look检查单词的拼写"><a class="markdownIt-Anchor" href="#aspell-look检查单词的拼写"></a> <code>aspell</code>, <code>look</code>：检查单词的拼写</h2><p>aspell，look 的字典是 <code>/usr/share/dict/words</code></p><h3 id="aspell"><a class="markdownIt-Anchor" href="#aspell"></a> <code>aspell</code></h3><p><code>aspell</code> 是Linux系统上的一个交互式的英语拼写检查程序，该程序通过一个简单的菜单驱动的界面来提供改正英文单词的建议。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ aspell check file_name</span><br><span class="line">        Enter后，</span><br><span class="line">        光标停留在第1个有拼写错误的单词上，</span><br><span class="line">        并在终端窗口下部给出一些可供选择的正确单词；</span><br><span class="line">        输入某个单词前面的编号来选择这个单词，</span><br><span class="line">        系统就会立即修改光标所在处的单词；</span><br><span class="line">        之后光标将移到下一个有拼写错误的单词。</span><br><span class="line">$ aspell list &lt; file_name</span><br><span class="line">            以非交互的方式在终端窗口中列出某个文件中的全部有拼法错误的英语单词</span><br></pre></td></tr></table></figure><p>• <code>look &lt;sth&gt;</code>：列出所有以sth开头的英语单词以供选择。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ look progra</span><br><span class="line">prograde</span><br><span class="line">program</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h2 id="expand-fmt-pr-重新格式化正文"><a class="markdownIt-Anchor" href="#expand-fmt-pr-重新格式化正文"></a> <code>expand</code>, <code>fmt</code>, <code>pr</code>: 重新格式化正文</h2><h3 id="expand将tab化为空格"><a class="markdownIt-Anchor" href="#expand将tab化为空格"></a> <code>expand</code>：将Tab化为空格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ expand [-t 1] data.tab &gt; data.spaces</span><br><span class="line">        -t n：表示将制表键转换成n个空格符。</span><br></pre></td></tr></table></figure><h3 id="fmt-格式化文本"><a class="markdownIt-Anchor" href="#fmt-格式化文本"></a> <code>fmt</code>: 格式化文本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ fmt -u -w48 news &gt; news.fmt</span><br><span class="line">        fmt将它的输入格式化成一些段落，</span><br><span class="line">        其中段落宽度是使用-wn选项来定义的（w为width，n为字符的数目，系统默认宽度为75个字符）。</span><br><span class="line">        利用-u选项将文件中的空格统一化（每个单词之间使用一个空格分隔，每个句子之间使用两个空格分隔）。</span><br><span class="line">            </span><br><span class="line">        fmt命令将它的输入中的空行当作段落分隔符看待。</span><br></pre></td></tr></table></figure><h3 id="pr按照打印机的格式重新编排纯文本文件中的内容"><a class="markdownIt-Anchor" href="#pr按照打印机的格式重新编排纯文本文件中的内容"></a> <code>pr</code>：按照打印机的格式重新编排纯文本文件中的内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ pr file</span><br><span class="line">        pr命令的默认输出为每页66行，其中56行为正文内容，并包括表头。</span><br><span class="line">        若没有指定列表头（Header），系统默认使用文件名作为列表头，并在每页的页首部分显示。</span><br><span class="line">        另外，每页的页首部分还有页码和时间(inode.M_time)。</span><br><span class="line">$ pr -h&quot;English Dictionary on Linux&quot; -l18 -5 /usr/share/dict/words | more</span><br><span class="line">        -h选项为列表头（Header），</span><br><span class="line">        在h后面使用双引号括起来的就是要显示的表头信息，</span><br><span class="line">        -l选项用来定义每页的行数，-l18表示每页都有18行，</span><br><span class="line">                （-l选项后的数目不能太小，如果太小pr命令会忽略这一选项）</span><br><span class="line">        -5表示每页打印5列。</span><br><span class="line">        </span><br><span class="line">---------------------------</span><br><span class="line">        </span><br><span class="line"># Output：</span><br><span class="line"></span><br><span class="line">2006-10-08 02:00           English Dictionary on Linux            Page 1</span><br><span class="line">&amp;c             &apos;prentice      &apos;shun          &apos;tis          &apos;un</span><br><span class="line">&apos;d             &apos;re            &apos;slid          &apos;twas         &apos;ve</span><br><span class="line">......</span><br><span class="line">2006-10-08 02:00           English Dictionary on Linux            Page 2</span><br><span class="line">-acal          -acy          -age          -ana           -ar</span><br><span class="line">-acea          -ad           -agogue       -ance          -arch</span><br><span class="line">--More--</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-4.1-正文文本操作</title>
      <link href="/2017/01/02/Linux/linux-4-1-TextOperate/"/>
      <url>/2017/01/02/Linux/linux-4-1-TextOperate/</url>
      
        <content type="html"><![CDATA[<h1 id="正文文本操作"><a class="markdownIt-Anchor" href="#正文文本操作"></a> 正文文本操作</h1><h3 id="tr字符转换"><a class="markdownIt-Anchor" href="#tr字符转换"></a> <code>tr</code>：字符转换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tr &apos;A-Z&apos; &apos;a-z&apos; &lt; w.txt &gt; u.txt        # 将w中的大写-&gt;小写，放入u中</span><br><span class="line">$ tr -d &quot;\r&quot; &lt; dept.data &gt; dept.data.unix        # 将DOS格式的正文文件（以回车“\r”符和换行“\n”符结束一行）转换成Linux格式的文件（只用换行符“\n”来结束一行）</span><br></pre></td></tr></table></figure><h3 id="cut从文件中剪出一个字段列至1stdout"><a class="markdownIt-Anchor" href="#cut从文件中剪出一个字段列至1stdout"></a> <code>cut</code>：从文件中剪出一个字段(列)至1(stdout)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cut [options] [file]</span><br><span class="line">        -f：说明(定义)字段(列)</span><br><span class="line">        -c：要剪切的字符：</span><br><span class="line">                「-c4-7」：剪下每行4～7的字符</span><br><span class="line">        -d：说明(定义)字段的分隔符(默认为Tab)</span><br><span class="line">                「-d,」：以“,”为分隔符</span><br><span class="line">$ cut -f2 emp.data</span><br><span class="line">        显示emp.data中的第二列至stdout</span><br></pre></td></tr></table></figure><h3 id="paste粘贴"><a class="markdownIt-Anchor" href="#paste粘贴"></a> <code>paste</code>：粘贴</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ paste  -d,  name.txt  score.txt  &gt;  student.txt</span><br><span class="line">        -d：说明(定义)字段的分隔符(默认为Tab)</span><br><span class="line">                「-d,」：以“,”为分隔符</span><br><span class="line">        &gt; ：横向合并文件：</span><br><span class="line">            |Mike|         |99|          |Mike,99|</span><br><span class="line">            |Jake|    +    |98|    -&gt;    |Jake,98|</span><br><span class="line">            |Anny|         |97|          |Anny,97|</span><br></pre></td></tr></table></figure><h3 id="uniq去掉文件中相邻的重复行"><a class="markdownIt-Anchor" href="#uniq去掉文件中相邻的重复行"></a> <code>uniq</code>：去掉文件中相邻的重复行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ uniq [opts] [file]</span><br><span class="line">        -c：在显示的行前冠以该行出现的次数</span><br><span class="line">        -d：只显示重复行</span><br><span class="line">        -i：忽略字符的大小写</span><br><span class="line">        -u：只显示唯一的行</span><br></pre></td></tr></table></figure><h3 id="sort排序"><a class="markdownIt-Anchor" href="#sort排序"></a> <code>sort</code>：排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ sort [opt] [file]</span><br><span class="line">         -r：反向排序</span><br><span class="line">         -f：忽略大小写</span><br><span class="line">         -n：按数字顺序排序</span><br><span class="line">          -u：去掉重复行</span><br><span class="line">          -t c：以字符c为分割符</span><br><span class="line">          -k N1,[N2]：按N1-&gt;N2字段排序</span><br></pre></td></tr></table></figure><h3 id="col-tab转空格"><a class="markdownIt-Anchor" href="#col-tab转空格"></a> <code>col</code>: Tab转空格：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ col -x &lt; e.tabs &gt;e.spaces</span><br><span class="line">        将e.tabs中的Tab字符(^I)化为空格存在e.spaces中</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-4.0-正文浏览</title>
      <link href="/2017/01/01/Linux/linux-4-0-TextRead/"/>
      <url>/2017/01/01/Linux/linux-4-0-TextRead/</url>
      
        <content type="html"><![CDATA[<h1 id="正文浏览"><a class="markdownIt-Anchor" href="#正文浏览"></a> 正文浏览</h1><blockquote><p>正文，即字符串 / 纯文本文件的内容。</p></blockquote><h3 id="cat浏览正文文件内容"><a class="markdownIt-Anchor" href="#cat浏览正文文件内容"></a> <code>cat</code>：浏览正文文件内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cat [options] [files]</span><br><span class="line">    -A：显示内容，包括不可见的特殊字符</span><br><span class="line">    -s：将两个及以上的空行省略为一个空行</span><br><span class="line">    -b：加入行号</span><br><span class="line">$ cat &gt; filename</span><br><span class="line">    创建新文本文件，写入内容</span><br><span class="line">    空行&#123;Ctr+d&#125;，保存退出        # &#123;Ctr+c&#125;:强行终止</span><br><span class="line">            [注意]：用cat打开二进制文件会造成终端停止工作，可开启一个新的终端以解决。</span><br></pre></td></tr></table></figure><pre><code>       ⚠️ \[注意\]：用 cat 打开二进制文件可能会造成终端停止工作，可开启一个新的终端以解决。</code></pre><h3 id="head浏览文件头几行"><a class="markdownIt-Anchor" href="#head浏览文件头几行"></a> <code>head</code>：浏览文件头几行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ head [-n x] file</span><br><span class="line">    浏览文件头x行</span><br><span class="line">    若省去[-n x]则显示头10行</span><br></pre></td></tr></table></figure><h3 id="tail浏览文件后几行"><a class="markdownIt-Anchor" href="#tail浏览文件后几行"></a> <code>tail</code>：浏览文件后几行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ tail file</span><br><span class="line">    浏览文件后10行</span><br><span class="line">$ tail -[n]x  file</span><br><span class="line">    显示从末尾算起的x行</span><br><span class="line">    有无n都一样</span><br><span class="line">$ tail +[n]x  file</span><br><span class="line">    显示从文件第x行之后的内容</span><br><span class="line">    有无n都一样</span><br><span class="line">$tail -f file</span><br><span class="line">    “-f“ == ”--follow“</span><br><span class="line">    当一个正文文件内容发生变化时，把变化显示出来</span><br><span class="line">    &#123;ctrl+c&#125;退出</span><br><span class="line"># tail -f /var/log/messages</span><br><span class="line">    监视日志</span><br></pre></td></tr></table></figure><h3 id="wcword-count字数统计"><a class="markdownIt-Anchor" href="#wcword-count字数统计"></a> <code>wc</code>：(word count)字数统计</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ wc [-options] file</span><br><span class="line">    显示文件 行、单词、字符 数</span><br><span class="line">        无选项依次显示l，w，c</span><br><span class="line">        -l：行数</span><br><span class="line">        -w：单词数</span><br><span class="line">        -c：字符数</span><br></pre></td></tr></table></figure><h3 id="more-file可翻页地浏览文件"><a class="markdownIt-Anchor" href="#more-file可翻页地浏览文件"></a> <code>more [file]</code>：可翻页地浏览文件</h3><p>在more中键入：</p><ul><li><p><code>{空格}</code>：下一页</p></li><li><p><code>{Enter}</code>：移动一行</p></li><li><p><code>{b}</code>：上一页</p></li><li><p><code>{h}</code>：帮助</p></li><li><p><code>{/str}</code>：向前搜索str</p></li><li><p><code>{n}</code>：发现这个字符串的下一次出现</p></li><li><p><code>{q}</code>：退出 more</p></li><li><p><code>{v}</code>：在当前行启动 vi</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-3.1.3-文件归档与压缩</title>
      <link href="/2016/12/30/Linux/linux-3-1-3-Archiving/"/>
      <url>/2016/12/30/Linux/linux-3-1-3-Archiving/</url>
      
        <content type="html"><![CDATA[<h1 id="文件归档与压缩"><a class="markdownIt-Anchor" href="#文件归档与压缩"></a> 文件归档与压缩</h1><h2 id="归档"><a class="markdownIt-Anchor" href="#归档"></a> 归档</h2><p>归档（archiving）就是将许多文件（或目录）打包成一个文件。</p><p>归档的目的就是方便备份、还原及文件的传输操作。</p><p>Linux操作系统的标准归档命令是tar（tape archive）。</p><p>tar命令的功能是将多个文件（也可有目录）放在一起存放到一个磁带或磁盘归档文件中，</p><p>并且将来可以根据需要只还原归档文件中的某些指定的文件。</p><p>tar命令默认并不进行文件的压缩。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">tar [选项]... [归档文件名]...</span><br><span class="line">    必须至少使用如下选项中的一个：</span><br><span class="line">        c：创建一个新的tar文件。</span><br><span class="line">        t：列出tar文件中内容的目录。</span><br><span class="line">        x：从tar文件中抽取文件。</span><br><span class="line">        f：指定归档文件或磁带（也可能是软盘）设备（一般都要选）</span><br><span class="line">            （在RHEL 4之前的版本中规定在f选项之后必须紧跟着文件名而不能再加其他参数，</span><br><span class="line">                但是从RHEL 4开始已经取消了这一限制。）</span><br><span class="line">以下为可选的选项：</span><br><span class="line">        v：显示所打包的文件的详细信息（v是verbose）</span><br><span class="line">                (执行过程中会显示所有打包的文件和目录)</span><br><span class="line">        z：使用gzip压缩算法来压缩打包后的文件。</span><br><span class="line">                「$ tar cvfz arch.tar.gz dir2arch」</span><br><span class="line">        j：使用bzip2压缩算法来压缩打包后的文件。</span><br><span class="line">                「$ tar cvfj arch.tar.bz2 dirarch」</span><br><span class="line">【注意】在tar命令中，所有的选项之前都不能使用前导的“-”。</span><br></pre></td></tr></table></figure><p>创建新的归档文件：<code>c\[v\]f</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ tar  cvf  arch.tar  dir2arch    # File to be archived should be a RELATIVE path</span><br><span class="line">dir2arch/</span><br><span class="line">dir2arch/learning.txt</span><br><span class="line">dir2arch/name.txt</span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>查看归档文件内容：<code>t\[v\]f</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ tar tf arch.tar</span><br><span class="line">dir2arch/</span><br><span class="line">dir2arch/learning.txt</span><br><span class="line">dir2arch/name.txt </span><br><span class="line">……</span><br><span class="line"># 可以在tar命令中再加入v命令来显示文件更加详细的信息(like 「ls -l」):</span><br><span class="line">$ tar tvf arch.tar</span><br><span class="line">drwxrwxr-x User/User           0 2010-02-04 05:09:43 dir2arch/</span><br><span class="line">-rw-r--r--   User/User        4720 2010-02-04 05:07:22 dir2arch/learning.txt</span><br><span class="line">-rw-rw-r--   User/User          84 2010-02-04 05:07:22 dir2arch/name.txt </span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>解开打包好的文件：<code>x\[v\]f</code></p><p>[⚠️]<span style="color: #fd0404;">解开前要将工作目录切换到打包时所在的目录，才能保证抽取的文件放回到原来的位置。</span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ tar xvf arch.tar</span><br><span class="line">dir2arch/</span><br><span class="line">dir2arch/learning.txt</span><br><span class="line">dir2arch/name.txt</span><br><span class="line">dir2arch/flowers.JPG</span><br><span class="line">dir2arch/dog.JPG  ……</span><br></pre></td></tr></table></figure><h2 id="压缩"><a class="markdownIt-Anchor" href="#压缩"></a> 压缩</h2><p>进行文件压缩的主要目的是缩小文件的大小。</p><p>一般对正文文件进行压缩之后，文件的大小可以被压缩大约75%。</p><p>但是二进制的文件，如图像文件通常不会被压缩多少。</p><p>Linux系统中两组常用的压缩工具：</p><ol><li><code>gzip \ gunzip -&gt; [*.gz]</code></li></ol><p>[⚠️]<span style="color: #fcb100;">用gzip不能压缩<strong>目录</strong></span></p><p>用gzip来压缩文件，就必须使用gunzip来解压缩。</p><p>它们是Linux系统上标准的压缩和解压缩工具，</p><p><em>gzip对正文文件的压缩比一般超过75%</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gzip [选项] [压缩文件名…]</span><br><span class="line">        若不用-c则会压缩源文件（把原来多foo.txt变成一个foo.txt.gz）</span><br><span class="line">        -v：在屏幕上显示出文件的压缩比（v是verbose的第1个字母）。</span><br><span class="line">        -c：保留原来的文件，而新创建一个压缩文件(要重定向出来)，其中压缩文件名以.gz结尾。</span><br><span class="line">                （gzip -vc bar.txt &gt; foobar.gz）</span><br><span class="line">解压缩时，输入gunzip空格后跟要解压缩的文件，如命令gunzip arch.gz。</span><br></pre></td></tr></table></figure><ol start="2"><li><code>bzip2 \ bunzip2 -&gt;[*.bz2]</code></li></ol><p>用bzip2压缩，必须用bunzip2解压。</p><p>它们是Linux系统上比较新的压缩和解压缩工具，</p><p>通常bzip2对归档文件的压缩比要优于gzip工具。</p><p>比较新的Linux版本才支持bzip2和bunzip2命令。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-3.1.2-磁盘，可移除式媒体</title>
      <link href="/2016/12/29/Linux/linux-3-1-2-Disk-RemovableMedia/"/>
      <url>/2016/12/29/Linux/linux-3-1-2-Disk-RemovableMedia/</url>
      
        <content type="html"><![CDATA[<h1 id="磁盘可移除式媒体"><a class="markdownIt-Anchor" href="#磁盘可移除式媒体"></a> 磁盘，可移除式媒体</h1><ul><li><strong>检查磁盘空间</strong></li></ul><p>监督文件系统的使用情况，可使用如下两个命令：</p><ul><li>df：显示文件系统中磁盘使用和空闲区的数量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ df [选项] [dir|file|设备]</span><br><span class="line">    无[dir|file]：以KB为单位列出每个(Every)文件系统中 所有的空间，已用空间，空闲空间</span><br><span class="line">    加上 dir|file：显示该文件所在的文件系统的情况</span><br><span class="line">    加上 设备(如 /dev/sda1)：显示该设备的文件系统的情况</span><br><span class="line">    选项：</span><br><span class="line">        -h或-H ：以人类容易理解的方式表示</span><br><span class="line">        -i：列出inode的使用情况</span><br></pre></td></tr></table></figure><ul><li>du：显示磁盘使用的总量（xx目录，有多大）</li></ul><p>du命令<u>以KB为单位</u>🐱显示文件系统磁盘空间使用的总量，并将递归地显示所有子目录的磁盘空间使用量。</p><p>如果在这个命令中使用-s选项，命令的结果就只显示一个目录总的磁盘空间使用量。</p><p>在du命令中也同样可以加上-h或-H选项。</p><p>🐱. 部分UNIX上（如Solaris上），du的单位是 <em>512B</em> 的数据块数。</p><ul><li><strong>可移除式媒体</strong></li></ul><p><strong><em>Removable Media</em></strong>（一种翻译为  可移除式媒体）：指USB闪存、软盘、CD、DVD等介质。</p><p><em>Removable Media</em> 的<strong>特点</strong>：</p><ul><li><p>在访问之前，必须将这个Removable Media挂载（mount）到系统上。</p></li><li><p>在移除之前，必须将这个Removable Media从系统上卸载掉。</p></li><li><p>在默认的情况下，一般非root的普通用户只能挂载某些特定的设备（如USB闪存、软盘、CD、DVD等）。</p></li><li><p>默认的挂载点一般是根目录下的media，即/media。</p></li></ul><p><strong>MOUNT</strong> Removable Media：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mount</span><br><span class="line">    列出当前系统中挂载的所有文件系统</span><br></pre></td></tr></table></figure><ul><li>Mount <strong>CD/DVD:</strong></li></ul><p>在gnome或KDE的中，只要在光驱中放入CD或DVD，就会被自动地挂载到系统中来。</p><p>如果没有被自动地挂载到系统中来，就必须手动地挂载CD/DVD。</p><p>如果是CD/DVD Reader，将使用 <code>mount ... /media/cdrom</code> 命令将CD/DVD挂载到 <code>/media/cdrom</code> 之下。</p><p>如果是CD/DVD Writer，将使用 <code>mount ... /media/cdrecorder</code> 命令将CD/DVD挂载到 <code>/media/cdrecorder</code> 之下。</p><p>可以使用eject命令退出（umount）CD/DVD。</p><p>[⚠️]<span style="color: #fcb100;">当安装有<strong>多个光盘</strong>软件时，千万<strong>不要将工作目录设为CD所在的目录</strong>，这样将无法更换光盘，因为执行eject或umount命令时系统要求CD目录中没有任何操作。</span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">挂载CD／DVD：</span><br><span class="line"># mount  /dev/hdc  /media/cdrom        # Only root can do that</span><br><span class="line">Read it：</span><br><span class="line">$ ls -l /media/cdrom</span><br><span class="line">Umount it：</span><br><span class="line"># eject /media/cdrom</span><br></pre></td></tr></table></figure><ul><li>Mount <strong>USB闪存：</strong></li></ul><p>将USB闪存插入计算机，Linux内核会自动探测到这一设备，并将其自动安装为SCSI设备。</p><p>通常它会被挂载在<code>/media/&lt;Device ID&gt;</code>。</p><p>手动挂载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mount /media/KINGSTON</span><br><span class="line">或</span><br><span class="line"># mount  /dev/sdb1  /media/KINGSTON</span><br></pre></td></tr></table></figure><p>只有root可以 umount USB 闪存。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-3.1.1-连接(link)</title>
      <link href="/2016/12/28/Linux/linux-3-1-1-Link/"/>
      <url>/2016/12/28/Linux/linux-3-1-1-Link/</url>
      
        <content type="html"><![CDATA[<h1 id="连接link"><a class="markdownIt-Anchor" href="#连接link"></a> 连接(link)</h1><ol><li><strong>符号连接（软连接）</strong>：指向另一个文件的文件</li></ol><p>符号连接也只能包含一种类型的数据；</p><p>一个符号连接包含了它所指向的文件的路径；</p><p>因为符号连接使用的是指向其他文件的路径名，</p><p>所以符号连接可以指向其他文件系统上的文件。</p><p>º。查看符号连接：使用 <code>ls -l</code>：</p><pre><code>    文件类型码如果是“l”表示是一个连接。</code></pre><p>另外在显示结果的最后一列中，</p><p>在-&gt;左边的是符号连接名，</p><p>在-&gt;右边的是所指向对象的完整路径，</p><p>显示结果中的大小为这个完整路径的字符个数。</p><p>º。创建软连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ln  -s  abs_path/文件名  abs_path/[连接名]</span><br><span class="line">    [⚠️]可以对目录建立软连接</span><br><span class="line">    文件名：连接指向的文件</span><br><span class="line">    连接名：新建的link file的名字</span><br><span class="line">            缺省为与指向文件同名</span><br><span class="line">    [⚠️]注意两文件的path都要写绝对路径</span><br><span class="line">            若使用相对路径会出现软连接断开的问题：</span><br><span class="line">                使用连接时会报错：</span><br><span class="line">                    Too many levels of symbolic links.</span><br><span class="line">                可对link file使用file命令发现错误：</span><br><span class="line">                    $ file link_file</span><br><span class="line">                    abs_path/link_file:broken symbolic links to &apos;pointing file&apos;</span><br></pre></td></tr></table></figure><p>º。软连接的使用：</p><p>对 link_file rwx == 对 pointing_file rwx</p><p>º。软连接的工作原理</p><p>／*符号连接也要占用一个i节点，即软连接本身也是一个文件*／</p><p>使用symbolic link：</p><p>（1）首先系统利用_符号连接名_查找到这个软连接所对应的i节点。</p><p>（2）通过i节点中的指针查找到_link file_的数据块（其中，存放着所_指向文件_的全路径和对应的i节点号）。</p><p>（3）利用_link file_数据块中的数据查找到这个文件所对应的i节点号。</p><p>（4）通过i节点中的指针查找到_pointing file_对应的数据块。</p><p>（5）对_pointing file_的数据块中的数据进行操作。</p><ol start="2"><li>**硬连接：**把文件名对应到inode</li></ol><p>一个硬连接（Hard Link）是一个文件名与一个i节点之间的对应关系。</p><p>添加一个硬连接是在所对应的文件上添加一个路径名。</p><p>每一个文件都至少使用一个硬连接，</p><p>在一个目录中的每一个记录都构成了一个硬连接。</p><p>可以将每一个文件名都看成为对应于一个i节点的硬连接。</p><p>为文件添加额外的hard link可以避免一些重要的信息被误删，因为当存储信息的文件被删除后，还可以通过硬连接访问对应的i节点并找到存储信息的数据块。</p><p>若将名为foo和bar的两个文件对应到一个i节点上：</p><p>foo、bar使用相同的i节点记录。</p><pre><code>    将文件foo误删，还可以通过文件bar把信息找回来。</code></pre><p>º。创建hard link</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln 文件名 [连接名]</span><br><span class="line">    [⚠️]只能对文件建立硬连接，而不能对一个目录建立硬连接。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-3.1.0-文件系统与inode</title>
      <link href="/2016/12/27/Linux/linux-3-1-0-FileSystem-inode/"/>
      <url>/2016/12/27/Linux/linux-3-1-0-FileSystem-inode/</url>
      
        <content type="html"><![CDATA[<h1 id="linux文件系统与inode"><a class="markdownIt-Anchor" href="#linux文件系统与inode"></a> Linux文件系统与inode</h1><h2 id="硬盘分区和文件系统"><a class="markdownIt-Anchor" href="#硬盘分区和文件系统"></a> 硬盘分区和文件系统</h2><p>一个新的硬盘，不能直接使用。首先必须把这个硬盘划分成数个（也可能是一个）<span style="background-color: rgb(255, 250, 165);">分区</span>，之后再把每一个分区<span style="background-color: rgb(255, 250, 165);">格式化</span>为文件系统，然后Linux系统才能在格式化后的硬盘分区上存储数据和进行相应的文件管理及维护。</p><p>Linux或UNIX系统上的磁盘分区就相当于Windows系统上的逻辑盘。</p><p>把一个分区格式化为文件系统就是将这个分区划分成许多大小相等的小单元，</p><p>并将这些小单元顺序地编号。</p><p>这些小单元被称为块（block），Linux默认的block大小为4KB。</p><p>Block是存储数据的最小单位，</p><p>每个block最多只能存储一个文件，</p><p>如果一个文件的大小超过4KB，那么就会占用多个blocks。</p><h2 id="inode"><a class="markdownIt-Anchor" href="#inode"></a> inode</h2><h3 id="inode-概念"><a class="markdownIt-Anchor" href="#inode-概念"></a> inode 概念</h3><p>i节点就是一个与某个特定的对象（如文件或目录）相关的信息列表。</p><p>i节点实际上是一个数据结构，它存放了有关一个普通文件、目录或其他文件系统对象的基本信息。</p><p>当一个磁盘被格式化成文件系统（如ext2或ext3）时，系统将自动生成一个i节点（inode）表；</p><p>在该表中包含了所有文件的元数据（metadata，描述数据的数据），每一个文件和目录都会对应于一个唯一的i节点，而这个i节点是使用一个i节点号（inode number简写成inode-no）来标识的；</p><p>inodes的数量决定了在这个文件系统中最多可以存储多少个文件，在一个分区（partition）中有多少个i节点就只能够存储多少个文件和目录。</p><p>在多数类型的文件系统中，i节点的数目是固定的，并且是在创建文件系统时生成的。</p><p>在一个典型的UNIX或Linux文件系统中，i节点所占用的空间大约是整个文件系统大小的1%。</p><hr><h3 id="inode-解读"><a class="markdownIt-Anchor" href="#inode-解读"></a> inode 解读</h3><p>i节点中所有的属性都是用来描述文件的，而不是文件中的内容。</p><p>i节点类似图书馆中的图书目录，在每一本书的图书目录中印有该书的内容简介、作者信息、出版日期、页数等<strong>摘要信息</strong>。</p><p>通常每个i节点由两部分组成，第1部分是有关文件的基本信息，第2部分是指向存储文件信息的数据块的指针：</p><p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1g60fl18enfj30go0730tl.jpg" alt="IMG_1066"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">（1）inode-no ：i节点号。</span><br><span class="line">在一个文件系统中，每一个i节点都有一个唯一的编号。</span><br><span class="line">（2）File type ：文件的类型。</span><br><span class="line">&apos;-&apos;为  普通文件，</span><br><span class="line">&apos;d&apos;为 目录。</span><br><span class="line">（3）permission ：权限。</span><br><span class="line">在i节点中使用数字表示法来表示文件的权限。</span><br><span class="line">（4）Link count ：硬连接（hard link）数。</span><br><span class="line">（5）UID ：文件所有者的UID。</span><br><span class="line">（6）GID ：owner所属群组的GID。</span><br><span class="line">（7）size ：文件的大小。</span><br><span class="line">（8）Time stamp：时间戳。</span><br><span class="line">时间戳包含了3个时间：</span><br><span class="line">①Access time（A time） ：最后一次存取的时间。</span><br><span class="line">②Modify time（M time） ：最后一次编辑的时间。</span><br><span class="line">③Change time（C time）：该文件inode中任一元数据发生变化的时间。</span><br><span class="line">如果M time被更新时，通常A time和C time也会跟着一起被更新：</span><br><span class="line">在更新一个文件之前必须先打开这个文件，所以要先更新A time；</span><br><span class="line">编辑完之后一般文件的大小要发生变化，所以C time也会被更新。</span><br><span class="line">（9）Other information</span><br><span class="line">（10）pointer：指向保存文件的blocks的指针。</span><br></pre></td></tr></table></figure><h3 id="查看文件的-inode-number"><a class="markdownIt-Anchor" href="#查看文件的-inode-number"></a> 查看文件的 inode number：</h3><p>可以使用带有-i选项的ls命令，在每一行记录的开始显示这个文件的i节点号码。</p><h3 id="普通文件-与-目录"><a class="markdownIt-Anchor" href="#普通文件-与-目录"></a> <em>普通文件</em> 与 <em>目录</em></h3><p>1.普通文件（Regular File）：只存放数据，</p><p>可以存放多种不同类型的数据。</p><p>2.目录：“特殊”的文件，目录中存储的是文件名和与文件名相关的i节点号码的信息。目录中只能存放一类数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">struct file_list&#123;</span><br><span class="line">    char name[MAX];</span><br><span class="line">    unsign inode;</span><br><span class="line">    struct file_list next;</span><br><span class="line">&#125; * pBarFiles;</span><br><span class="line">char * make_the_list(struct file_list *);</span><br><span class="line">fooDirectoty.content = make_the_list(pBarFiles);</span><br></pre></td></tr></table></figure><h3 id="cp-rm-mv-的-operateinode"><a class="markdownIt-Anchor" href="#cp-rm-mv-的-operateinode"></a> cp、rm、mv 的 operate(inode)</h3><ol><li><code>cp</code>：</li></ol><p>（1）找到一个空闲的i节点记录（inode number），把新文件的meta data写入到这个空闲的i节点中并将这个新记录放入inode表中。</p><p>（2）产生一条目录记录，把新增的文件名对应到这个空的inode号码。</p><p>（3）将文件的内容（数据）复制到新增的文件中去。</p><ol start="2"><li><code>rm</code>：</li></ol><p>（1）首先将这个文件的连接数（hard link）减1；</p><p>（如原文件的link count为3，运行了rm后，它的link count将为2）</p><p>之后这个文件的link count如果小于1，</p><p>就释放这个i节点以便重用。</p><p>（2）释放存储这个文件内容的数据块；</p><pre><code>            （即将这些数据块标记为可以使用）</code></pre><p>（3）删除记录这个文件名和i节点号的目录记录。</p><ol start="3"><li><code>mv</code>：</li></ol><p>若 <em>原位置</em> 与 <em>目标位置</em>  位于 <strong>同一文件系统</strong>：</p><pre><code>（1）首先产生一个新的目录记录，把新的文件名对应到源文件的i节点。  （2）删除带有旧文件名的原有的目录记录。/* 这是&lt;u&gt;逻辑移动&lt;/u&gt;：除了更新时间戳外，移动文件行为对原本在inode表中的数据不会有任何影响，也**不会将数据移动**到其他的文件中去，即**没有发生真正的数据移动**。\*/</code></pre><p>若 <em>源位置</em> 与 <em>目的位置</em> 是在 <strong>不同文件系统</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp(source, destination)；</span><br><span class="line">rm(source)；</span><br></pre></td></tr></table></figure><p>必要情况下：为确保数据确实发生移动，应使用cp，rm而非mv</p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><ul><li><p>关于文件的几个术语：</p><p>（1）文件名是访问和维护文件时最常使用的。</p><p>（2）i节点（inodes）是系统用来记录有关文件信息的对象。</p><p>（3）数据块是用来存储数据的磁盘空间的单位。</p></li><li><p>其中关联：</p><p>每个文件必须具有一个名字并且与一个i节点相关。</p><p>通常系统通过文件名就可以确定i节点，</p><p>之后通过i节点中的指针就可以定位存储数据的数据块</p></li></ul><p><img src="http://ww2.sinaimg.cn/large/006tNc79gy1g60oehim96j30go00v0sr.jpg" alt="IMG_1067"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-3.0.1-文件及其操作</title>
      <link href="/2016/12/26/Linux/linux-3-0-1-Files/"/>
      <url>/2016/12/26/Linux/linux-3-0-1-Files/</url>
      
        <content type="html"><![CDATA[<h1 id="文件及其操作"><a class="markdownIt-Anchor" href="#文件及其操作"></a> 文件及其操作</h1><h2 id="linux文件类型"><a class="markdownIt-Anchor" href="#linux文件类型"></a> Linux文件类型：</h2><table><thead><tr><th>表示</th><th>名称</th><th>解释</th></tr></thead><tbody><tr><td>-</td><td>regular file</td><td>普通文件，或称正规文件</td></tr><tr><td>d</td><td>directory</td><td>目录</td></tr><tr><td>l</td><td>symbolic link🏎</td><td>符号（软）连接</td></tr><tr><td>b</td><td>block</td><td>块特殊文件：一般是指块设备，如硬盘。</td></tr><tr><td>c</td><td>character</td><td>字符特殊文件：一般是指字符设备，如键盘。</td></tr><tr><td>p</td><td>pipe</td><td>命名的管道文件：一般用于在进程之间传输数据。</td></tr><tr><td>s</td><td>socket🐶</td><td>套接字：通信（过程中）的一个终点。</td></tr></tbody></table><p>🏎. 详见本系列文章的“<u>连接(link)</u>”</p><p>🐶.  socket 的比喻性解释：</p><p><strong>socket与电话十分相似：</strong></p><p><em>当与某人通话时就要建立两个通信的终点：</em></p><p><em>（1）自己的电话</em></p><p><em>（2）对方的电话</em></p><p><em>只要双方进行通话，就必须有两个通话所必需的终点（电话）和一条在它们之间的通信线路存在。</em></p><p>socket就相当于一条通信线路的终点（电话），而在这些终点（sockets）之间存在着数据通信网络。</p><p><em>当打电话给他人时，需要拨打对方的电话号码。</em></p><p>sockets使用网络地址取代了电话号码。通过访问远程（计算机）的socket地址，本机程序就可以用的本机socket与远程的终点（socket）之间建立起一条通信线路。</p><h2 id="文件操作"><a class="markdownIt-Anchor" href="#文件操作"></a> 文件操作</h2><ul><li>file：确定文件类型</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ file 文件名</span><br></pre></td></tr></table></figure><ul><li>touch：刷新、新建文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ touch file(s)</span><br><span class="line">        若file存在，更新时间戳</span><br><span class="line">        若file不存在，新建空文件</span><br></pre></td></tr></table></figure><ul><li>cp：复制</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cp [-option(s)]  source(s)  target</span><br><span class="line">    把source复制到target：</span><br><span class="line">        -i：交互式：防止覆盖，覆盖前提示</span><br><span class="line">        -f：强制式：有同名，强制覆盖，不提示</span><br><span class="line">        -r：递归式：复制目录时包括子目录</span><br><span class="line">        -p：维持式：保留属性（如时间戳）</span><br><span class="line">        source是目录名或文件名</span><br><span class="line">        target是目录名或 新文件名(复制并重命名)</span><br></pre></td></tr></table></figure><ul><li>mv：移动及修改文件、目录名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mv file(s) target</span><br><span class="line">    把source移动到target：</span><br><span class="line">        source是目录名或文件名</span><br><span class="line">        target是目录名或 新文件名(移动并重命名)</span><br></pre></td></tr></table></figure><p>重命名可用“<strong>mv  path/old_name  path/new_nam</strong>e”实现</p><ul><li>rm：删除</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ rm  [option(s)]  file(s)|directory(s)</span><br><span class="line">    删除文件或 目录(加-r)：</span><br><span class="line">        -i：交互式：删前提示</span><br><span class="line">        -r：递归式：包括子目录、文件</span><br><span class="line">        -f：强制性：不询问，直接删</span><br></pre></td></tr></table></figure><ul><li>find：搜索文件和目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ find Pathname Expressions Actions</span><br><span class="line">    •Pathname：遍历起始路径</span><br><span class="line">    •Expressions：条件表达式：</span><br><span class="line">        -name“指定文件名”</span><br><span class="line">        -size[+|-]n</span><br><span class="line">                文件大小大于小于或等于(n*512B)</span><br><span class="line">        -atime[+|-]n</span><br><span class="line">                访问天数</span><br><span class="line">        -mtime[+|-]n：更改天数</span><br><span class="line">        -user LoginID：属于某用户的所有文件</span><br><span class="line">        -type：某一类型的文件：</span><br><span class="line">                f：文件</span><br><span class="line">                d：目录</span><br><span class="line">                e t c</span><br><span class="line">        -perm：查找具有某些特定访问许可位的文件</span><br><span class="line">    •Actions：对找出的文件进行的操作：</span><br><span class="line">        -exec命令&#123;&#125; \;</span><br><span class="line">                在每一个所定位的文件上运行指定的命令。</span><br><span class="line">                “&#123;&#125;“  表明文件名将传给前面的命令。</span><br><span class="line">                “ \;” 表示命令的结束。</span><br><span class="line">                （在大括号与反斜线之间必须有一个空格。）</span><br><span class="line">        -ok命令&#123;&#125; \;</span><br><span class="line">                -exec命令的交互方式</span><br><span class="line">                （在find命令对每个定位的文件执行命令之前需要确认）</span><br><span class="line">        -print</span><br><span class="line">                指示find命令将当前的路径名打印在终端屏幕上</span><br><span class="line">                （默认方式）</span><br><span class="line">        -ls</span><br><span class="line">                显示当前路径名和相关的统计信息</span><br><span class="line">                如i节点（inode）数、以K字节为单位的大小（尺寸）、保护模式、硬连接和用户</span><br></pre></td></tr></table></figure><p>可用<code>find /etc -name passwd  2&gt;finderrs.txt</code>重定向，把权限不足的错误不在屏幕显示。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-3.0.0-目录及其操作</title>
      <link href="/2016/12/25/Linux/linux-3-0-0-Directory/"/>
      <url>/2016/12/25/Linux/linux-3-0-0-Directory/</url>
      
        <content type="html"><![CDATA[<h1 id="目录及其操作"><a class="markdownIt-Anchor" href="#目录及其操作"></a> 目录及其操作</h1><h3 id="几个特殊目录"><a class="markdownIt-Anchor" href="#几个特殊目录"></a> 几个特殊目录</h3><table><thead><tr><th>目录</th><th>作用</th></tr></thead><tbody><tr><td>/</td><td>根目录</td></tr><tr><td>~（==$HOME）</td><td>家目录🚩</td></tr><tr><td>.</td><td>当前目录</td></tr><tr><td>…</td><td>上一层目录</td></tr></tbody></table><p>以’ . '开头的文件或目录表示隐藏；</p><p>🚩. 普通用户的家目录为 <code>/home</code> 的子目录，root的是 <code>/root</code></p><p>“<code>～</code>”代表当前用户的家目录，</p><p>“<code>～username</code>”代表某用户的家目录。</p><p>登录系统或重启 shell后默认的 <code>pwd</code> 是 <code>$(whoami)</code>的 <code>$HOME</code></p><h3 id="与程序相关的几个目录"><a class="markdownIt-Anchor" href="#与程序相关的几个目录"></a> 与程序相关的几个目录：</h3><table><thead><tr><th>目录</th><th>功能</th></tr></thead><tbody><tr><td>/bin</td><td>存放可执行文件</td></tr><tr><td>/sbin</td><td>存放系统可执行文件</td></tr><tr><td>/usr(Unix System Resources)</td><td>存放系统的应用程序和与命令相关的系统数据（类似于 Windows 的C:\Program File）</td></tr></tbody></table><h3 id="目录操作"><a class="markdownIt-Anchor" href="#目录操作"></a> <strong>目录操作：</strong></h3><ul><li>pwd</li></ul><p><code>$ pwd</code></p><p>打印工作（当前）目录的绝对路径</p><ul><li>cd</li></ul><p><code>$ cd path</code></p><p>切换工作目录</p><p>“<code>cd ~</code>” == “cd”无参：切换到 <code>$HOME</code></p><p>“<code>cd -</code>”：切换到上一工作目录</p><ul><li>ls</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ ls [keyword]</span><br><span class="line"> 无keyword：列出当前目录下内容</span><br><span class="line">    有keyword：列出目录中名含keyword的内容</span><br><span class="line">    </span><br><span class="line">$ ls dirA dirB</span><br><span class="line">    同时显示dirA与dirB中的内容</span><br><span class="line">    </span><br><span class="line">$ ls -F</span><br><span class="line">    显示 *文件类型*🚏</span><br><span class="line"></span><br><span class="line">$ ls -a</span><br><span class="line">     == “ls --all”</span><br><span class="line">    显示正常、隐藏文件</span><br><span class="line"></span><br><span class="line">$ ls -l</span><br><span class="line">    列出文件详细信息（其中大小为字节）</span><br><span class="line">    再加上-h：大小以惯例表示</span><br><span class="line"></span><br><span class="line">$ ls -d</span><br><span class="line">    只列出当前目录的信息，不包含子目录下的信息</span><br></pre></td></tr></table></figure><p>🚏. 文件类型：详见本系列文章的“文件及其操作”</p><ul><li>mkdir</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir 目录名</span><br><span class="line">    创建目录</span><br><span class="line"></span><br><span class="line">$ mkdir -p 命令名</span><br><span class="line">    创建目录（补足不存在的路径）</span><br></pre></td></tr></table></figure><ul><li>rmdir：删除目录</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-2.3-文件的安全控制</title>
      <link href="/2016/12/24/Linux/linux-2-3-fileSafe/"/>
      <url>/2016/12/24/Linux/linux-2-3-fileSafe/</url>
      
        <content type="html"><![CDATA[<h1 id="文件的安全控制"><a class="markdownIt-Anchor" href="#文件的安全控制"></a> 文件的安全控制</h1><ul><li><p>Linux系统的安全模型</p></li><li><p>用户<strong>登录</strong>系统时必须<strong>提供用户名和密码</strong>。</p></li></ul><p>/*  用户是由root用户创建的，最初的密码也是root用户设定的 */</p><ul><li><p>使用<strong>用户</strong>和<strong>群组</strong>来控制使用者<strong>访问</strong>文件和其他资源的<strong>权限</strong>。</p></li><li><p>系统上的每一个<strong>文件</strong>都一定<strong>属于</strong>一个<strong>用户</strong>（一般该用户就是文件的创建者）并<strong>与</strong>一个<strong>群组相关</strong>。</p></li><li><p>每一个<strong>进程</strong>都会<strong>与</strong>一个<strong>用户和群组</strong>相<strong>关联</strong>。可以通过在所有的文件和资源上设定权限来只允许该文件的<strong>所有者</strong>或者某个<strong>群组</strong>的成员访问它们。</p></li><li><p>Linux 上文件有三种类型的权限：</p></li><li><p>所有者  ：（u）：文件的**<u>所有者</u>**的权限</p></li><li><p>同组用户：（g）：与所有者**<u>同一群组</u>**的其他用户的权限</p></li><li><p>其他用户：（o）：非所有者也**<u>不同群</u>**的用户的权限</p></li></ul><p>/* root用户不受权限限制，可以访问Linux上的任何资源 */</p><ul><li><p>权限的表示：</p><table><thead><tr><th>字母表示</th><th>数字表示</th><th>含义</th><th>对文件的权限</th><th>对目录的权限</th></tr></thead><tbody><tr><td>r</td><td>4</td><td>Read</td><td>可阅读文件</td><td>使用ls列出目录内容</td></tr><tr><td>w</td><td>2</td><td>Write</td><td>可编辑文件</td><td>编辑目录(在其中创建、删除等)</td></tr><tr><td>x</td><td>1</td><td>eXecute</td><td>可执行程序(可执行文件)</td><td>使用cd进入目录，用ls -l查看目录详情</td></tr><tr><td>- （连字符）</td><td>0</td><td>no</td><td>没用相应的权限(同位的r|w|x)</td><td>没用相应的权限(同位的r|w|x)</td></tr></tbody></table></li><li><p>查看文件的权限</p></li></ul><p>用 **ls -l **命令：显示结果中的第1列（10个字符）表示文件的mode：</p><p><img src="http://ww3.sinaimg.cn/large/006tNc79gy1g60eo9tu5zj306n02j74b.jpg" alt="IMG_1065"></p><p align="left">其中第1个字符表示文件的类型：</p>- 如果是d就表示是目录<ul><li>如果是-就表示是文件。</li></ul><p>紧接其后的9个字符是这个文件或命令的权限：</p><p><img src="http://ww2.sinaimg.cn/large/006tNc79gy1g60ep4llfaj30ax02fglj.jpg" alt="IMG_1062"></p><ul><li>Linux 的安全检测流程</li></ul><p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1g60epak066j30go072aak.jpg" alt="IMG_1060"></p><ul><li>设定文件或目录上的权限要用chmod命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod [-R] mode 文件或目录名</span><br><span class="line">        -R：递归的，设置同时应用于目录中的子目录和所有文件，只有root可用。</span><br><span class="line">        mode: 详见👇</span><br></pre></td></tr></table></figure><p><span style="color: rgb(38, 180, 80);"><em>*.</em></span><strong><em>mode</em></strong>：</p><ol><li>用<strong>表达式</strong>表示：</li></ol><p><em>用“{who}  {operator}  {permission}”表示mode：</em></p><p><img src="http://ww1.sinaimg.cn/large/006tNc79ly1g60eps4gcej30go03nmxf.jpg" alt="IMG_1061"></p><p>权限状态可以分成3个部分：</p><ul><li><p>第1部分，表示要设定<strong>谁</strong>的状态：</p></li><li><p>u：<span style="background-color: rgb(255, 250, 165);">所有者</span>的权限。</p></li><li><p>g：<span style="background-color: rgb(255, 250, 165);">群组</span>的权限。</p></li><li><p>o：既不是owner也不与owner在同一个group的<span style="background-color: rgb(255, 250, 165);">其他用户</span>的权限。</p></li><li><p>a：所以，以上3组，也就是<span style="background-color: rgb(255, 250, 165);"><u>所有用户</u></span>的权限。</p></li><li><p>第2部分，<strong>运算符</strong>（操作符）</p></li><li><p>+：<span style="background-color: rgb(255, 250, 165);">加入</span>权限。</p></li><li><ul><li>：<span style="background-color: rgb(255, 250, 165);">去掉</span>权限。</li></ul></li><li><p>=：<span style="background-color: rgb(255, 250, 165);">设定</span>权限。</p></li><li><p>第3部分，<strong>权限</strong>（permission）</p></li><li><p>r  ：read权限。</p></li><li><p>w：write权限。</p></li><li><p>x ：execute权限。</p></li></ul><p>e.g.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod ug+x tastingFile</span><br><span class="line">        在tastingFile文件上添加上所有者和同组用户的可执行权限</span><br></pre></td></tr></table></figure><ol start="2"><li>用<strong>数字</strong>表示：</li></ol><p><em>用  一组三位数  表示mode：</em></p><p>（1）第1个数字  代表  所有者      (own user)    的权限   （u）</p><p>（2）第2个数字  代表  群组       （group）       的权限   （g）</p><p>（3）第3个数字  代表  其他用户（other）        的权限   （o）</p><p>这组3位数中的每一位数字都是由以下表示资源权限状态的数字（即4、2、1和0）相加而获得的总和：</p><p>4：100(2)：表示具有    read       权限。</p><p>2：010(2)：表示具有    write      权限。</p><p>1：001(2)：表示具有  execute   权限。</p><p>0：000(2)：表示  没有相应的权限。</p><p>即：</p><p><img src="http://ww3.sinaimg.cn/large/006tNc79ly1g60eq5o2mej30go05i3z4.jpg" alt="IMG_1064"></p><p>e.g.</p><p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1g60eqx53n4j30e204jwep.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># chmod -R 754 /home/foo/bar</span><br><span class="line"></span><br><span class="line">        对owner(foo)开放家目录的bar子目录和其中所有文件的一切权限，但是对同组用户开放读和执行权限而对其他用户只开放读权限</span><br></pre></td></tr></table></figure><ul><li><strong>特殊权限</strong>（第4组权限）</li></ul><p>第4组权限包括suid、sgid和sticky 3种权限。</p><p>其中，</p><ul><li><p>suid  ：100：4：借用u的可执行权限位，并以 <strong>s</strong> 来表示；</p></li><li><p>sgid  ：  10：2：借用g的可执行权限位，并以 <strong>s</strong> 来表示；</p></li><li><p>sticky ：    1：1：借用o的可执行权限位，并以 <strong>t</strong> 来表示；</p></li></ul><p>当在一个文件上加入suid|sgid|sticky特殊权限时：</p><p>如果原来的文件的u|g|o具有x权限：</p><p>就使用小写的s|s|t来代替x；</p><p>如果原来没有x：</p><p>就用大写的S|S|T来代替；</p><p><u>设置</u>特殊权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 字符：</span><br><span class="line">$ chmod [u|g|o][+,-,=][s|s|t] file</span><br><span class="line"># 数字：（第四组表示特殊权限）</span><br><span class="line">$ chmod [0-7][0-7][0-7][0-7] file</span><br></pre></td></tr></table></figure><p>特殊权限<u>作用</u>：</p><p>将suid和sgid设定在<em>可执行文件</em>上：</p><ul><li><p>运行有suid特殊权限的可执行文件时：是以可执行文件的<strong>所有者权限来运行</strong>这一可执行文件的，而不是以执行者的权限来运行该命令。</p></li><li><p>sgid特殊权限与suid类似，是以命令的群组的权限来运行这一命令的。</p></li></ul><p>将sgid和sticky设定在<em>目录</em>上：</p><ul><li><p>一个目录上设置了sticky权限，就只有文件的所有者和root用户才可以删除该目录中的文件，而Linux系统不会理会group或other的写权限。</p></li><li><p>一个目录上设置了sgid权限，只要是同一群组的成员，都可以在这个目录中创建文件。</p></li><li><p>通常会对目录同时设置sticky和sgid这两个特殊权限以方便项目的管理（将同一个项目的文件都放到这一个目录中以方便同一项目的成员之间共享信息）。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-2.2-群组</title>
      <link href="/2016/12/23/Linux/linux-2-2-Group/"/>
      <url>/2016/12/23/Linux/linux-2-2-Group/</url>
      
        <content type="html"><![CDATA[<h1 id="群组group"><a class="markdownIt-Anchor" href="#群组group"></a> 群组（Group）</h1><ul><li><p>Linux群组的<strong>特性</strong>：</p></li><li><p>Linux系统中，每一个<strong>用户</strong>都一定<strong>隶属于</strong>至少一个<strong>群组</strong>，而每一个群组都有一个group标识符（号码），即gid。</p></li><li><p>所有的群组和对应的gids都存放在_<u>/etc/group</u>_文件中。</p></li><li><p>Linux系统在<strong>创建用户时</strong>为每一个用户<strong>创建</strong>一个<strong>同名的群组</strong>并且把这个用户加入到该群组中，也就是说每个用户至少会加入一个与他同名的群组中，并且也可以加入到其他的群组中。加入到其他群组的目的是为了获取适当的权限来访问（存取）特定的资源。</p></li><li><p>如果有一个文件属于某个群组，那么这个群组中所有的用户都可以存取这个文件。</p></li><li><p><span style="color: #fd0404;"><span style="color: rgb(253, 4, 4);"><strong>group</strong></span></span>文件</p></li></ul><p><strong><em>/etc/group</em></strong> 保存着群组信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/group的内容：</span><br><span class="line"></span><br><span class="line"> e.g.| foobar **:   **x   **: **503 **: **foo**,**bar</span><br><span class="line"></span><br><span class="line">means| 群组名  **: **密码否 **: **gid **: **群组成员</span><br></pre></td></tr></table></figure><pre><code>    # 第二字段为x表示这个群组在登录Linux时必须使用密码。</code></pre><ul><li><span style="color: rgb(253, 4, 4);"><strong>gshadow</strong></span>文件</li></ul><p>**_/etc/gshadow _**保存着群组信息。</p><p>[⚠️]普通用户无权访问_<u>/etc/gshadow</u>_</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># more /etc/gshadow</span><br><span class="line"></span><br><span class="line">root:::root            # 在gshadow中，每个群组占一行记录</span><br><span class="line"></span><br><span class="line">bin:::root,bin,daemon ......</span><br><span class="line"></span><br><span class="line">foo:!::</span><br><span class="line"></span><br><span class="line">bar:!::</span><br><span class="line"></span><br><span class="line">群组名:加密后的密码::</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-2.1-用户</title>
      <link href="/2016/12/22/Linux/linux-2-1-User/"/>
      <url>/2016/12/22/Linux/linux-2-1-User/</url>
      
        <content type="html"><![CDATA[<h1 id="用户user"><a class="markdownIt-Anchor" href="#用户user"></a> 用户（User）</h1><ul><li><p>用户（Users）</p></li><li><p>系统中的每一个<strong>用户</strong>都有一个唯一的<strong>用户标识符</strong>（号码），即<strong>uid</strong>（user identifier）</p></li></ul><p>（<em>uid 0</em> 为 <code>root</code> 用户的标识符。）</p><ul><li><p>所有的用户名和_用户标识符_都被存放在 <code>/etc/passwd</code> 文件中。</p></li><li><p>在 <em>passwd</em> 文件中还存放了每个用户的家目录，以及该用户登录后第一个执行的程序</p></li></ul><p>（通常是 shell，在 Linux 系统中默认是 bash。）</p><ul><li><p>如果没有相应的权限就不能<strong>读、写或执行</strong>其他用户的文件。</p></li><li><p>passwd 文件：用户信息数据库</p></li></ul><p><em><u>/etc/passwd</u></em> 储存用户信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/passwd 的内容：</span><br><span class="line">e.g|  exp :  x  :     500    :       500     :Example_User:/home/exp :   /bin/bash</span><br><span class="line">说明| 用户名:密码否:uid（用户ID）:gid（所属群组ID）:   注释信息  :   家目录  :启动后第一个执行程序</span><br></pre></td></tr></table></figure><p>关于第二个字段：如果是<strong>x</strong>，表示这个用户登录Linux系统时必须使用密码，如果为<strong>空</strong>则该用户在登录系统时无须提供密码。</p><ul><li>shadow文件：用户密码数据库</li></ul><p>[⚠️]普通用户无权访问_<u>/etc/shadow</u>_</p><p><em><u>/etc/shadow</u></em> 储存用户密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/shadow 的内容：</span><br><span class="line">e.g|  exp :$1$wg...w4:14561:0:99999:7:::</span><br><span class="line">说明| 用户名:   密码   :      :      :  :::</span><br></pre></td></tr></table></figure><p>关于第二个字段：第2列是密码，这个密码是经过MD5加密算法加密过的密码。</p><ul><li><p>如果该列以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>开头，则表示这个用户已经设定了密码。<br>（包括手动把passwd中的x去掉，不用密码即可登录的“空秘密”）</p></li><li><p>如果该列以!!开头，则表示这个用户还没有设定密码。<br>（新建后<strong>passwd -S</strong>显示_Password locked_的状态，这种用户不可登录）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-2.0-用户管理</title>
      <link href="/2016/12/21/Linux/linux-2-0-UsersManage/"/>
      <url>/2016/12/21/Linux/linux-2-0-UsersManage/</url>
      
        <content type="html"><![CDATA[<h1 id="用户管理"><a class="markdownIt-Anchor" href="#用户管理"></a> 用户管理</h1><ul><li><code>su</code>：切换用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ su [-]用户名</span><br><span class="line">    -   ：有则重启shell，重装$PATH（环境变量），pwd切换至用户名的$HOME（家目录）</span><br><span class="line">         无则不变 环境变量（检索命令的目录），pwd不变</span><br></pre></td></tr></table></figure><p>用户名 ：缺省为 root</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[me@Example ~]$ su - root</span><br><span class="line">密码：</span><br><span class="line">[root@Example~]# whoami</span><br><span class="line">root</span><br><span class="line">[root@Example~]# exit</span><br><span class="line">logout</span><br><span class="line">[me@Example~]$ whoami</span><br><span class="line">me</span><br></pre></td></tr></table></figure><ul><li><code>passwd</code>：修改密码</li></ul><p>1⃣️ <em>普通用户：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ passwd            修改当前用户密码</span><br></pre></td></tr></table></figure><p>多按几个回车可取消退出</p><p>对于root “too short”的密码重输也可以成功</p><p>2⃣️ <em>root：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># passwd username    修改某用户密码</span><br><span class="line"># passwd -**S**username    查看密码状态，【注意】S大写</span><br></pre></td></tr></table></figure><ul><li>新建，删除 用户</li></ul><ol><li>useradd：新建用户：<code># useradd new_user_name</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Example ~]# **useradd** newone</span><br><span class="line">[root@Example ~]# passwd -S newone</span><br><span class="line">newone LK [2016-12-18 0 99999 7 -1](tel:2016-12-18 0 99999 7 -1)(密码已被锁定。)       # 说明密码未设定</span><br><span class="line">[root@Example ~]# passwd newone</span><br><span class="line">更改用户 newone 的密码 。</span><br><span class="line">新的 密码：             # 尝试键入一个弱口令</span><br><span class="line">无效的密码:  过于简单化/系统化        # 提示口令过于简单，但不阻止</span><br><span class="line">重新输入新的 密码:                   # 仍输入那个弱口令，可以成功，因为是root</span><br><span class="line">passwd： 所有的身份验证令牌已经成功更新。</span><br><span class="line"># 如果是普通用户，键入弱口令不可成。（不会叫“Retype“，而是“New“）</span><br><span class="line">[root@Example ~]# passwd -S newone</span><br><span class="line">newone PS [2016-12-18 0 99999 7 -1](tel:2016-12-18 0 99999 7 -1)(密码已设置，使用 SHA512 加密。</span><br></pre></td></tr></table></figure><ol start="2"><li>userdel：删除用户:  <code>userdel [-r] [-f] user_name</code></li></ol><p>​                <code>-r</code> ：同时删除用户的家目录</p><p>​                        无’-r’时，家目录不会被删除</p><p>​                <code>-f</code> ：强行删除，哪怕用户已登录，这个选项有些危险，会使系统进入不一致状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Example ~]# userdel -r newone</span><br><span class="line">userdel: user newone is currently used by process 3848    # 用户正登录，删除失败</span><br><span class="line">[root@Example ~]# userdel -fr newone                        #用 -f 强行删除</span><br><span class="line">userdel: user newone is currently used by process 3848    # 说明用户正登录，但命令本身已经成功</span><br><span class="line"># 这时虽然还被删user还是登入、活跃状态，但已经被删除，登出后不可再登入</span><br><span class="line"></span><br><span class="line">--------------------</span><br><span class="line"></span><br><span class="line">[newone@Example ~]$ exit                                    #退出用户</span><br><span class="line">logout</span><br><span class="line"></span><br><span class="line">--------------------</span><br><span class="line"></span><br><span class="line">[root@Example ~]# userdel -r newone</span><br><span class="line">userdel：用户“newone”不存在                            #再作尝试时，确定用户已被之前的 -f 删除</span><br><span class="line">[root@Example ~]# ls /home</span><br><span class="line">c  lost+found                                        #家目录被 -r 删除</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.linuxidc.com/Linux/2016-05/131755.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2016-05/131755.htm</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-1.2-帮助信息</title>
      <link href="/2016/12/20/Linux/linux-1-2-getHelp/"/>
      <url>/2016/12/20/Linux/linux-1-2-getHelp/</url>
      
        <content type="html"><![CDATA[<h1 id="帮助信息"><a class="markdownIt-Anchor" href="#帮助信息"></a> 帮助信息</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ whatis *命令名*</span><br></pre></td></tr></table></figure><p>​                说明<em>命令</em>是什么，了解命令的功能；</p><p>​                “whatis  <em>cmd</em>”命令 == “<strong>man -f</strong> <em>cmd</em>”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ type [-options] 命令名</span><br></pre></td></tr></table></figure><p>​    无选：显示命令类型</p><p>​    <code>-t</code>：显示文件的类型：</p><p>​        <code>file</code>：外部命令</p><p>​        <code>alias</code>：别名</p><p>​        <code>builtin</code>：shell内置命令</p><p>​    <code>-a</code>：列出所有包含指定命令名的命令，包括别名</p><p>​    <code>-p</code>：显示完整的文件名（外部命令）或内部命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ which 命令名</span><br></pre></td></tr></table></figure><p>​    列出命令的类型相关的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ *命令名* --help</span><br></pre></td></tr></table></figure><p>​                显示<em>命令</em>的<strong>简要说明</strong>和<strong>选项列表</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ man *命令名*</span><br></pre></td></tr></table></figure><p>​                浏览<em>命令</em>的 <strong>Man Page</strong> 1⃣️</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ man -k **keyword**</span><br></pre></td></tr></table></figure><p>​                欲使用一个命令，又无法确定它的名字是用 -k选项+<em>关键字</em>搜寻它；</p><p>​                “man -k  <em>kw</em>”命令 == “<strong>apropos</strong> <em>kw</em>”命令；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ info *cmd*</span><br></pre></td></tr></table></figure><p>​                “info2⃣️”与“man”类似，但info更加简洁详尽(开发者认为的)；</p><p>1⃣️、2⃣️.  浏览 <strong>Man page</strong> <em>或</em>  <strong>Info Page</strong> ：</p><ul><li><ul><li><p>使用man \ info命令进入Man \ Info Page</p></li><li><p>键盘 &lt; , &gt; , ^, v , PgUp, PgDn, 空格：翻页</p></li><li><p>Home键：移到第一页</p></li><li><p>End键： 最后一页</p></li><li><p>在屏幕底部<code>:</code>处输入<code>?string</code>：向前搜索string</p></li><li><ul><li>按 n 键继续下一个搜索</li><li>按 N 键进行反向搜索</li></ul></li><li><p>按 q 键退出Page</p></li></ul></li></ul><p>在 <strong>Info Page</strong> 中还有：</p><ul><li><ul><li>按Tab：跳到下一个“*******”（超链接）</li><li>{Tab}*3：Index</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-1.1-系统信息</title>
      <link href="/2016/12/19/Linux/linux-1-1-SystemInformation/"/>
      <url>/2016/12/19/Linux/linux-1-1-SystemInformation/</url>
      
        <content type="html"><![CDATA[<h1 id="系统信息"><a class="markdownIt-Anchor" href="#系统信息"></a> 系统信息</h1><ul><li><p><code>uname</code> 命令:  获取系统信息<br>(其中’u’代表UNIX)</p></li><li><p><code>$ uname</code>       显示当前操作系统<br><code>-n</code>    显示主机名<br><code>-i</code>    硬件平台名<br><code>-r</code>    系统发布版本信息<br><code>-s</code>    系统名<br><code>-m</code>    机器硬件名<br><code>-p</code>    显示CPU信息<br><code>-a</code>    以上全部<br>用 <code>-n -r</code> == <code>-i -n</code> == <code>-ni</code> == <code>-in</code>；<br>(详见 <code>$ man uname</code>。)</p></li><li><p><code>$ date</code>       显示当前系统日期、时间</p></li><li><p><code>$ cal</code> 显示日历：</p><ul><li><code>$ cal</code>         无参显示本月日历</li><li><code>$ cal m y</code>    m y是月份 年份，显示y年m月的</li><li><code>$ cal y</code>      y 是年份，     显示y全年</li></ul><p>(详见 <code>$ man cal</code>。)</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-1.0-用户信息</title>
      <link href="/2016/12/18/Linux/linux-1-0-UsersInfomation/"/>
      <url>/2016/12/18/Linux/linux-1-0-UsersInfomation/</url>
      
        <content type="html"><![CDATA[<h1 id="用户信息"><a class="markdownIt-Anchor" href="#用户信息"></a> 用户信息</h1><ul><li><code>$ whoami</code><br>输出当前用户名</li><li><code>$ users</code><br>列出当前登录的所有用户名</li><li><code>$ who am i</code><br>显示用户名，登录终端，当前时间，IP</li><li><code>$ who</code><br>比“who am i”多出 其他用户的信息</li><li><code>$ w</code><br>信息更多的“who”：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Me@Example ~]$ w</span><br><span class="line"> 10:59:09 up 4 min,  1 user,  load average:  0.46 , 0.35 ,  0.15</span><br><span class="line"> 当前时间 up 启动时长, 登录用户数, 平均提交任务数: 1min内, 10min内, 15min内</span><br><span class="line">USER     TTY      FROM              LOGIN@    IDLE       JCPU       PCPU     WHAT</span><br><span class="line">用户名    登录终端   登录地            登录时间   空闲时长    一共使用CPU时长    当前程序用CPU时长    当前任务CPU时长</span><br><span class="line">                                                        </span><br><span class="line">Me        pts/0    MyComputer       10:58     0.00s      0.06s      0.02s     w</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-0.2-系统开关</title>
      <link href="/2016/12/17/Linux/linux-0-2-StartHalt/"/>
      <url>/2016/12/17/Linux/linux-0-2-StartHalt/</url>
      
        <content type="html"><![CDATA[<h1 id="系统开关"><a class="markdownIt-Anchor" href="#系统开关"></a> 系统开关</h1><ul><li>关闭系统：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># sync</span><br><span class="line"># init 0    或    shutdown -n    或    halt</span><br></pre></td></tr></table></figure><ul><li>重启系统：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># sync</span><br><span class="line"># init 6    或    shutdown -rn</span><br></pre></td></tr></table></figure><ul><li>退出当前用户登录：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ exit</span><br></pre></td></tr></table></figure><p>Linux的 <code>exit</code> 类似于 Windows 的注销；</p><ul><li>查看当前使用的虚拟终端：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tty</span><br><span class="line">/dev/tty2        #二号虚拟终端</span><br></pre></td></tr></table></figure><ul><li>切换终端：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;Ctr + Alt + Fn&#125;</span><br><span class="line">#其中 n = &#123;1, 2, 3, ... ,7&#125;,代表 tty n</span><br></pre></td></tr></table></figure><p>切换至图形终端（也是一个tty）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;Ctr + Alt + F7&#125;</span><br></pre></td></tr></table></figure><ul><li>清空屏幕：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ clear</span><br></pre></td></tr></table></figure><ul><li>找到系统中所有shell：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/shells</span><br></pre></td></tr></table></figure><ul><li>切换shell：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sh# 切换至Bourn Shell</span><br><span class="line">$ ksh# 切换至Korn Shell</span><br></pre></td></tr></table></figure><p>可以在命令行中输入一个不存在的命令（如<code>OK</code>），以确定用户当前的shell。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-0.1-系统安装</title>
      <link href="/2016/12/16/Linux/linux-0-1-Install/"/>
      <url>/2016/12/16/Linux/linux-0-1-Install/</url>
      
        <content type="html"><![CDATA[<h1 id="系统安装"><a class="markdownIt-Anchor" href="#系统安装"></a> 系统安装</h1><h3 id="挂载建议"><a class="markdownIt-Anchor" href="#挂载建议"></a> 挂载建议：</h3><p>Linux只要求两个基本分区 <code>／</code> 和 <code>swap</code>；</p><p>如果<code>／</code>足够的，可以在桌面放很多东西而不影响进入 Linux 的速度；</p><table><thead><tr><th>分区</th><th>大小</th><th>格式</th></tr></thead><tbody><tr><td>/boot1⃣️</td><td>128MB</td><td>ext3</td></tr><tr><td>swap</td><td>2⃣️</td><td></td></tr><tr><td>／</td><td>8GB</td><td>ext3</td></tr><tr><td>／home</td><td>余下全部</td><td>ext3</td></tr></tbody></table><p>若要安装很多软件最好分配个 <code>/usr</code>；</p><p>若要作服务器最好分配较大的 <code>/var</code>；</p><p>1⃣️.  <code>/boot</code>：</p><p>2018年后的新版本都可以不分；</p><p>可以分配10MB-100MB</p><p>如果硬盘不支持LBA模式，最好挂载/boot于第一个分区，以保稳妥。</p><p>参考：<a href="https://wapbaike.baidu.com/item/boot%E5%88%86%E5%8C%BA/16830421?ms=1&amp;rid=8645769021174590193" target="_blank" rel="noopener">https://wapbaike.baidu.com/item/boot分区/16830421?ms=1&amp;rid=8645769021174590193</a></p><p>2⃣️. <code>swap</code>：</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g60bdmoskaj30d108xglx.jpg" alt="Image 20180817 230902"></p><table><thead><tr><th>物理内存</th><th>swap</th><th>swap(开启休眠)</th></tr></thead><tbody><tr><td>2GB</td><td>2倍RAM</td><td>3倍RAM</td></tr><tr><td>&gt;2GB-8GB</td><td>=RAM</td><td>2倍RAM</td></tr><tr><td>&gt;8GB-64GB</td><td>4GB+</td><td>1.5倍RAM</td></tr><tr><td>&gt;64GB</td><td>4GB+</td><td>不建议休眠</td></tr></tbody></table><p>参考：<a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/installation_guide/s2-diskpartrecommend-ppc#id4394007" target="_blank" rel="noopener">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/installation_guide/s2-diskpartrecommend-ppc#id4394007</a></p><p>开始的几个服务配置：</p><ul><li>检查<em>telnet</em>服务是否启动：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chkconfig telnet --list</span><br></pre></td></tr></table></figure><ul><li>启动<em>telnet</em>服务：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chkonfig telnet on</span><br></pre></td></tr></table></figure><p>开启telnet后在win下可用&quot;&gt; telnet $IP&quot;连接Linux。</p><ul><li>检验<em>FTP</em>服务当前状态：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># service vsftpd status</span><br></pre></td></tr></table></figure><ul><li>开启<em>FTP</em>服务：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># service vsftpd start</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux-0.0-Linux?</title>
      <link href="/2016/12/15/Linux/linux-0-0-Linux/"/>
      <url>/2016/12/15/Linux/linux-0-0-Linux/</url>
      
        <content type="html"><![CDATA[<p>我会发一系列 Linux 学习笔记（它们最多可以算是“操作手册”，我不认为它们可以代替一本正经的入门书），这些东西是很久以前写的了，可能在 排版、内容 上质量都不高，请见谅。</p><h1 id="linux"><a class="markdownIt-Anchor" href="#linux"></a> Linux</h1><blockquote><p>Linux (/ˈlɪnəks/ LIN-əks) is a family of open source Unix-like operating systems based on the Linux kernel, an operating system kernel first released on September 17, 1991 by Linus Torvalds. Linux is typically packaged in a Linux distribution.<br>【翻译】Linux 是一系列基于 Linux 内核(一个最早由 Linus Torvalds 在 1991 年 9 月 17 日发布的操作系统内核)的类 Unix 开源操作系统。Linux 通常打包在 Linux 发行版中。</p></blockquote><p>👆这是 <a href="https://en.wikipedia.org/wiki/Linux" target="_blank" rel="noopener">维基百科</a> 对 Linux 的介绍。</p><p>Linux 是什么不重要，重要的是为什么用Linux。就像对用户来说软件的代码实现不重要，重要的是这个软件可以用来干什么。</p><h2 id="为什么用-linux"><a class="markdownIt-Anchor" href="#为什么用-linux"></a> 为什么用 Linux？</h2><p>我们常说，用 Linux 是因为它安全，或者因为它自由、因为它的高度可定制、因为它免费、应为它的背后有专业的社区支持…</p><p>然而，所有的这些全是瞎扯！我们这样欺骗非 Linux 用户，只是因为他们不会懂得 Linux 的真谛。<br>久而久之，说的多了，有时候连我们自己都开始相信这些乱七八糟的“充分理由”了。</p><p>夜深人静时再扪心自问，我们用 Linux 的原因到底何在？</p><p>…</p><p>我们用 Linux —— —— 是因为它好玩呀！</p><p>对着各种设置一阵捣鼓、把系统无情地玩弄到崩坏，再夹着尾巴跑到恢复系统、笨拙地为她缝合伤口、虔诚为她祈祷痊愈、期待着下一次把她摆布成不一样的姿势，这难道不好玩吗？<br>在那数百种发行版中肆意尝试她们各不相同的命令行不好玩吗？</p><p>是的，我们觉得命令行超级有趣！</p><p>其实 Linux 爱好者们爱上 Linux，爱的只是 Linux 本身！</p><p>是，我们使用 Linux 完成老板布置的工作；<br>是，我们使用 Linux 保障安全、远离病毒；<br>是，我们使用 Linux 省下几个柴米油盐钱；<br>但，这些都只是我们使用 Linux 的副作用！</p><p>真正重要的是 —— —— 这系统好玩啊！</p><p>Linux 让我们像探险家一样游荡在系统深处，四处搅合，随性发掘，在软件的背后寻觅可爱的诗篇！</p><p>（翻译自一篇出处难寻的文章）</p><h2 id="用-linux-做什么"><a class="markdownIt-Anchor" href="#用-linux-做什么"></a> 用 Linux 做什么？</h2><p>我们可以用 Linux 干什么？</p><p>毫无疑问——玩！</p><h2 id="linuxunixmacoswindows"><a class="markdownIt-Anchor" href="#linuxunixmacoswindows"></a> Linux/UNIX，MacOS，Windows</h2><p>Linux/UNIX，MacOS，Windows，这几乎就是我们平时接触到的所有操作系统了。</p><p>抛开刚才写的那么多 Linux 的好处不看，客观地比较一下它们：</p><ul><li><p>Linux/UNIX 以自由著称，但正如很多开源的东西，设计上会有一些缺陷，用户体验绝对不是最好的，但它几乎可以满足你在计算机编程、工作上的全部需求（只是操作起来可能需要时间、精力）。其实在 Linux/UNIX 的内部有很多很糟糕的部分，这是历史遗留问题了，在学会  Linux 的基础之前我们最好不去过多研究。</p></li><li><p>MacOS，这是我现在正在使用的操作系统，Apple一向以用户体验著称。MacOS绝对是我用过的体验最好的计算机操作系统，你不用了解太多的东西就可以专心地高效完成你的工作。但 MacOS 无论如何还是脱离不了 UNIX 的影响，UNIX 有的问题，MacOS 也会有，只是在表面上看不出来。在开发方面，按照 Apple 的文档，你虽然可以快速地开发出一个 App，但你很难去了解底层的东西，这给移植之类的工作带来了很大的麻烦，不过近年来也有好转。</p></li><li><p>Windows，我承认微软很厉害，Windows的设计也有很多很好的地方，但我始终无法接受 Windows 呈现给用户的那种东西，我想是我的程序设计功夫还不到家，所以不喜欢微软风格的代码——虽然客观地说我承认它们其实很好。在 Windows 10 中我已经看到了它朝我想要的方向有了十足的进步，但这还不够！我期望微软有一天可以让我用回 Windows，毕竟它是我对计算机的最初回忆。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Beginning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>helloworld</title>
      <link href="/2016/08/14/helloworld/"/>
      <url>/2016/08/14/helloworld/</url>
      
        <content type="html"><![CDATA[<h1 id="hello-world"><a class="markdownIt-Anchor" href="#hello-world"></a> Hello World</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
